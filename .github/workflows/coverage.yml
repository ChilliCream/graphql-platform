name: Coverage

on:
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: |
            6.x
            7.x
            8.x

      - uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Run Coverage Tests
        run: ./init.sh

      - name: Run tests with coverage
        run: |
          dotnet test src/All.sln --no-build --framework net7.0 --verbosity normal /p:CollectCoverage=true /p:CoverletOutputFormat=opencover /p:CoverletOutput=./coverage/results/
          dotnet tool install -g dotnet-reportgenerator-globaltool
          reportgenerator "-reports:./coverage/results/*.coverage.opencover.xml" "-targetdir:./coverage/merged" -reporttypes:Opencover

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          file: ./coverage/merged/merged.opencover.xml
          token: ${{ secrets.CODECOV_TOKEN }}
          name: graphql-platform
          flags: unittests
          fail_ci_if_error: true
