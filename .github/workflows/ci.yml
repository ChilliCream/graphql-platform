name: CI

on:
  pull_request:
    branches:
      - main

concurrency:
  group: pr-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  check-changes:
    name: Check for Changes
    runs-on: ubuntu-latest
    outputs:
      website_changes: ${{ steps.check-website.outputs.website_changes }}
      library_changes: ${{ steps.check-library.outputs.library_changes }}
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 2

    - name: Check for changes in website directory
      id: check-website
      run: |
        changes=$(git diff --name-only HEAD~1 HEAD -- ./website)
        if [[ -n "$changes" ]]; then
          echo "::set-output name=website_changes::true"
        else
          echo "::set-output name=website_changes::false"
        fi

    - name: Check for changes outside website directory
      id: check-library
      run: |
        changes=$(git diff --name-only HEAD~1 HEAD -- ':!./website')
        if [[ -n "$changes" ]]; then
          echo "::set-output name=library_changes::true"
        else
          echo "::set-output name=library_changes::false"
        fi

  website-tests:
    name: "Website Tests"
    needs: check-changes
    if: needs.check-changes.outputs.website_changes == 'true'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Install Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14.x'
        cache: 'yarn'
        cache-dependency-path: 'website/yarn.lock'

    - name: Cache Yarn Packages
      uses: actions/cache@v3
      with:
        path: |
          website/.yarn/cache
          website/.cache/yarn
        key: ${{ runner.os }}-yarn-${{ hashFiles('website/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-

    - name: Install Packages
      run: yarn --immutable --network-timeout 100000
      working-directory: website

    - name: Build Website
      run: yarn build --prefix-paths
      working-directory: website

  generate-matrix:
    name: Generate Test Matrix
    runs-on: ubuntu-latest
    needs: check-changes
    if: needs.check-changes.outputs.library_changes == 'true'
    outputs:
      matrix: ${{ steps.generate-matrix.outputs.matrix }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Install .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: |
          7.x
          8.x

    - name: Generate Matrix
      run: dotnet run --project ./.build -- GenerateMatrix

    - name: Display Matrix File
      run: cat .github/matrix.json

    - name: Set matrix data
      id: set-matrix
      run: echo "matrix=$(jq -c . < .github/matrix.json)" >> $GITHUB_OUTPUT

  library-tests:
    name: Run ${{ matrix.test }} on ubuntu-latest
    needs: generate-matrix
    timeout-minutes: 30
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        test: ${{fromJson(needs.generate-matrix.outputs.matrix)}}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: |
            6.x
            7.x
            8.x

      - uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Run Tests
        id: run-tests
        run: dotnet test ${{ matrix.test }} --framework net7.0 --verbosity normal /p:CollectCoverage=true /p:CoverletOutputFormat=opencover /p:CoverletOutput=./coverage/results/
        timeout-minutes: 15
        continue-on-error: true

      - name: Upload Individual Coverage Files as Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: coverage-${{ matrix.test }}
          path: output/test-results/**/*.xml

      - name: Fail if tests failed or were cancelled
        run: exit 1
        if: |
          steps.run-tests.outcome == 'failure' ||
          steps.run-tests.outcome == 'cancelled'
