name: 🚀 Test npm publish

on:
  pull_request:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  build-nitro-cli:
    name: 🧱 Build and Publish Nitro CLI
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
    strategy:
      matrix:
        include:
          # Linux (x64)
          - os: ubuntu-22.04
            rid: linux-x64
          - os: ubuntu-22.04
            rid: linux-musl-x64
          # Linux (arm64 on ARM runner!)
          - os: ubuntu-24.04-arm
            rid: linux-arm64
          # macOS
          - os: macos-15
            rid: osx-x64
          - os: macos-15
            rid: osx-arm64
          # Windows
          - os: windows-2025
            rid: win-x64
          - os: windows-2025
            rid: win-x86
          # Windows (arm64 on ARM runner!)
          # - os: windows-11-arm
          #   rid: win-arm64

    steps:
      - name: 📦 Checkout
        uses: actions/checkout@v4

      - name: 📦 Zip binary (Windows)
        if: runner.os == 'Windows'
        run: |
          Compress-Archive -Path (Get-Item src/Nitro/CommandLine/src/CommandLine/Program.cs) -DestinationPath nitro-${{ matrix.rid }}.zip
        shell: pwsh

      - name: 📦 Zip binary (Unix)
        if: runner.os != 'Windows'
        run: |
          zip -j nitro-${{ matrix.rid }}.zip src/Nitro/CommandLine/src/CommandLine/Program.cs
        shell: bash

      - name: 📤 Upload zipped binary as artifact
        uses: actions/upload-artifact@v4
        with:
          name: nitro-${{ matrix.rid }}
          path: nitro-${{ matrix.rid }}.zip

  publish-nitro-cli-npm:
    name: 🧱 Publish Nitro CLI to npm
    runs-on: ubuntu-22.04
    needs: build-nitro-cli
    steps:
      - name: 📦 Checkout
        uses: actions/checkout@v4

      - name: 🧰 Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "22.x"
          registry-url: ${{ vars.NPM_REGISTRY_URL }}
          scope: "@chillicream"

      - name: 🧰 Enable corepack
        run: corepack enable

      - name: 📥 Download all zipped nitro binaries
        uses: actions/download-artifact@v4
        with:
          pattern: nitro-*
          merge-multiple: true
          path: dist-zips

      - name: 🏷 Get the version from tag
        # run: echo "GIT_TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
        run: echo "GIT_TAG=16.0.0" >> $GITHUB_ENV

      - name: 🗂️ Prepare package directories
        run: |
          PACKAGE_DIR="src/Nitro/CommandLine/src/js"

          for z in dist-zips/nitro-*.zip; do
            name=$(basename "$z" .zip)  # e.g. nitro-linux-x64
            rid=${name#nitro-}          # e.g. linux-x64

            echo "Unpacking $z -> $PACKAGE_DIR/$rid"
            mkdir -p "$PACKAGE_DIR/$rid"
            unzip -q "$z" -d "$PACKAGE_DIR/$rid"
          done

          # Ensure unix binaries are executable
          # chmod +x $PACKAGE_DIR/linux-x64/nitro || true
          # chmod +x $PACKAGE_DIR/linux-musl-x64/nitro || true
          # chmod +x $PACKAGE_DIR/linux-arm64/nitro || true
          # chmod +x $PACKAGE_DIR/osx-x64/nitro || true
          # chmod +x $PACKAGE_DIR/osx-arm64/nitro || true

      - name: 🔍 Install dependencies
        working-directory: src/Nitro/CommandLine/src/js
        run: yarn install --immutable

      - name: 🏷️ Set version
        working-directory: src/Nitro/CommandLine/src/js
        run: npm version $GIT_TAG

      - name: 📦 Create npm tarball
        working-directory: src/Nitro/CommandLine/src/js
        run: npm pack

      - name: 🏷️ Decide additional tag (latest vs preview)
        run: |
          if [[ "$GIT_TAG" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "DIST_TAG=latest" >> $GITHUB_ENV
          else
            echo "DIST_TAG=preview" >> $GITHUB_ENV
          fi
        shell: bash

      - name: 🚀 Publish tarball to npm
        working-directory: src/Nitro/CommandLine/src/js
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          PKG_NAME="@chillicream/nitro"

          TARBALL="chillicream-nitro-${GIT_TAG}.tgz"

          npm publish "./${TARBALL}" --tag "${GIT_TAG}"

          npm dist-tag add "${PKG_NAME}@${GIT_TAG}" "${DIST_TAG}"
        shell: bash

      - name: 📤 Upload tarball as artifact
        uses: actions/upload-artifact@v4
        with:
          name: chillicream-nitro-${{ env.GIT_TAG }}.tgz
          path: src/Nitro/CommandLine/src/js/chillicream-nitro-${{ env.GIT_TAG }}.tgz

      # - name: 📤 Attach tarball to GitHub release
      #   env:
      #     GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   working-directory: src/Nitro/CommandLine/src/js
      #   run: |
      #     gh release upload "${{ github.ref_name }}" "chillicream-nitro-${{ github.ref_name }}.tgz" --repo "${{ github.repository }}"
