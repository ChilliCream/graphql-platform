trigger:
  branches:
    include:
      - master
  tags:
    include:
      - 11.*

stages:
  - stage: ubuntu
    displayName: "Ubuntu 20.04"
    dependsOn: []
    pool:
      vmImage: "ubuntu-20.04"
    jobs:
      - job: Cover
        displayName: "Cover"
        dependsOn: []
        strategy:
          parallel: 5
        steps:
          - task: UseDotNet@2
            displayName: "Install .NET Core"
            inputs:
              packageType: 'sdk'
              useGlobalJson: true
          - task: CmdLine@2
            displayName: "Run Tests"
            inputs:
              script: "./build.cmd Cover --test-partition $(System.JobPositionInPhase)"
          - task: PublishBuildArtifacts@1
            displayName: "Upload Test Results"
            inputs:
              artifactName: test-results
              pathtoPublish: "output/test-results"
      - job: ReportCoverage
        displayName: "ReportCoverage"
        dependsOn: [Cover]
        steps:
          - task: UseDotNet@2
            displayName: "Install .NET Core"
            inputs:
              packageType: 'sdk'
              useGlobalJson: true
          - task: DownloadBuildArtifacts@0
            displayName: "Download Test Results"
            inputs:
              artifactName: "test-results"
              downloadPath: "$(Build.Repository.LocalPath)/output"
          - task: CmdLine@2
            displayName: "Create Coverage Report for Azure DevOps"
            inputs:
              script: "./build.cmd ReportCoverage --skip"
      - job: Sonar
        displayName: "Sonar"
        dependsOn: [Cover]
        steps:
          - task: UseDotNet@2
            displayName: "Install .NET Core"
            inputs:
              packageType: 'sdk'
              useGlobalJson: true
          - task: JavaToolInstaller@0
            displayName: "Install Java"
            inputs:
              versionSpec: "11"
              jdkArchitectureOption: "x64"
              jdkSourceOption: "PreInstalled"
              jdkDestinationDirectory: ./.java
          - task: DownloadBuildArtifacts@0
            displayName: "Download Test Results"
            inputs:
              artifactName: "test-results"
              downloadPath: "$(Build.Repository.LocalPath)/output"
          - task: CmdLine@2
            displayName: "Run Sonar Analysis"
            inputs:
              script: "./build.cmd Sonar --skip"
