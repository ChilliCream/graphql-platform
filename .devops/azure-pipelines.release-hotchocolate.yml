trigger: none

stages:
  - stage: ubuntu
    displayName: "Ubuntu 20.04"
    dependsOn: []
    pool:
      vmImage: "ubuntu-20.04"
    jobs:
      - job: Test
        displayName: "Test"
        dependsOn: []
        continueOnError: true
        strategy:
          parallel: 5
        steps:
          - task: UseDotNet@2
            displayName: "Install .NET Core"
            inputs:
              packageType: 'sdk'
              useGlobalJson: true
          - task: CmdLine@2
            displayName: "Run Tests"
            inputs:
              script: "./build.cmd test --test-partition $(System.JobPositionInPhase)"
          - task: PublishBuildArtifacts@1
            displayName: "Upload Test Results"
            inputs:
              artifactName: test-results
              pathtoPublish: "output/test-results"
      - job: Pack
        displayName: "Pack"
        dependsOn: []
        steps:
          - task: UseDotNet@2
            displayName: "Install .NET Core"
            inputs:
              packageType: 'sdk'
              useGlobalJson: true
          - task: CmdLine@2
            displayName: "Create Packages"
            inputs:
              script: "./build.cmd pack"
          - task: PublishBuildArtifacts@1
            displayName: "Upload Packages"
            inputs:
              artifactName: packages
              pathtoPublish: "output/packages"
      - job: Publish
        displayName: "Publish"
        dependsOn: [Test, Pack]
        steps:
          - task: UseDotNet@2
            displayName: "Install .NET Core"
            inputs:
              packageType: 'sdk'
              useGlobalJson: true
          - task: DownloadBuildArtifacts@0
            displayName: "Download Packages"
            inputs:
              artifactName: "packages"
              downloadPath: "$(Build.Repository.LocalPath)/output"
          - task: CmdLine@2
            displayName: "Push Packages to NuGet"
            inputs:
              script: "./build.cmd publish --skip"
          - task: GitHubRelease@0
            displayName: "Update GitHub Release"
            inputs:
              gitHubConnection: "ChilliCream GitHub"
              action: edit
              tag: "$(GitHubVersion)"
              title: "$(GitHubVersion)"
              assets: "$(Build.Repository.LocalPath)/output/packages/*.*"
              assetUploadMode: replace
              isPreRelease: true
              releaseNotesSource: input
              releaseNotes: "For more details click [here](https://github.com/ChilliCream/hotchocolate/blob/master/CHANGELOG.md) to get to our CHANGELOG."
