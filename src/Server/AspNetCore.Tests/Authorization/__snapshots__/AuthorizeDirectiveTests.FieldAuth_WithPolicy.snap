schema {
  query: Query
}

type Query {
  foo: String @authorize(apply: AFTER_RESOLVER, policy: "MyPolicy")
}

enum ApplyPolicy {
  BEFORE_RESOLVER
  AFTER_RESOLVER
}

directive @authorize("Defines when when the resolver shall be executed.By default the resolver is executed after the policy has determined that the current user is allowed to access the field." apply: ApplyPolicy! = BEFORE_RESOLVER "The name of the authorization policy that determines access to the annotated resource." policy: String "Roles that are allowed to access the annotated resource." roles: [String!]) repeatable on SCHEMA | OBJECT | FIELD_DEFINITION

"The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."
scalar String
