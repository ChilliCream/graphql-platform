schema {
  query: Query
}

interface Bar {
  id: ID! @upper
}

type Baz {
  "The name of the current Object type at runtime."
  __typename: String!
  name(baz: BazInput): String
}

type Foo implements Bar {
  "The name of the current Object type at runtime."
  __typename: String!
  id: ID!
}

type Query {
  "Request the type information of a single type."
  __type(type: String!): __Type
  "Access the current type schema of this server."
  __schema: __Schema!
  "The name of the current Object type at runtime."
  __typename: String!
}

union FooOrBaz = Foo | Baz

input BazInput {
  name: String
}

"The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."
scalar String

"The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `"4"`) or integer (such as `4`) input value will be accepted as an ID."
scalar ID
