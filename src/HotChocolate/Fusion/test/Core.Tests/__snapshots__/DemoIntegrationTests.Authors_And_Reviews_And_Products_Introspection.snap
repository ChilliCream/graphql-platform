User Request
---------------
query Introspect {
  __schema {
    types {
      name
      kind
      fields {
        name
        type {
          name
          kind
        }
      }
    }
  }
}
---------------

QueryPlan
---------------
{
  "document": "query Introspect { __schema { types { name kind fields { name type { name kind } } } } }",
  "operation": "Introspect",
  "rootNode": {
    "type": "Serial",
    "nodes": [
      {
        "type": "Introspection"
      },
      {
        "type": "Composition",
        "selectionSetIds": [
          0
        ]
      }
    ]
  }
}
---------------

Result
---------------
{
  "data": {
    "__schema": {
      "types": [
        {
          "name": "__Directive",
          "kind": "OBJECT",
          "fields": [
            {
              "name": "name",
              "type": {
                "name": null,
                "kind": "NON_NULL"
              }
            },
            {
              "name": "description",
              "type": {
                "name": "String",
                "kind": "SCALAR"
              }
            },
            {
              "name": "locations",
              "type": {
                "name": null,
                "kind": "NON_NULL"
              }
            },
            {
              "name": "args",
              "type": {
                "name": null,
                "kind": "NON_NULL"
              }
            },
            {
              "name": "isRepeatable",
              "type": {
                "name": null,
                "kind": "NON_NULL"
              }
            }
          ]
        },
        {
          "name": "__DirectiveLocation",
          "kind": "ENUM",
          "fields": null
        },
        {
          "name": "__EnumValue",
          "kind": "OBJECT",
          "fields": [
            {
              "name": "name",
              "type": {
                "name": null,
                "kind": "NON_NULL"
              }
            },
            {
              "name": "description",
              "type": {
                "name": "String",
                "kind": "SCALAR"
              }
            },
            {
              "name": "isDeprecated",
              "type": {
                "name": null,
                "kind": "NON_NULL"
              }
            },
            {
              "name": "deprecationReason",
              "type": {
                "name": "String",
                "kind": "SCALAR"
              }
            }
          ]
        },
        {
          "name": "__Field",
          "kind": "OBJECT",
          "fields": [
            {
              "name": "name",
              "type": {
                "name": null,
                "kind": "NON_NULL"
              }
            },
            {
              "name": "description",
              "type": {
                "name": "String",
                "kind": "SCALAR"
              }
            },
            {
              "name": "args",
              "type": {
                "name": null,
                "kind": "NON_NULL"
              }
            },
            {
              "name": "type",
              "type": {
                "name": null,
                "kind": "NON_NULL"
              }
            },
            {
              "name": "isDeprecated",
              "type": {
                "name": null,
                "kind": "NON_NULL"
              }
            },
            {
              "name": "deprecationReason",
              "type": {
                "name": "String",
                "kind": "SCALAR"
              }
            }
          ]
        },
        {
          "name": "__InputValue",
          "kind": "OBJECT",
          "fields": [
            {
              "name": "name",
              "type": {
                "name": null,
                "kind": "NON_NULL"
              }
            },
            {
              "name": "description",
              "type": {
                "name": "String",
                "kind": "SCALAR"
              }
            },
            {
              "name": "type",
              "type": {
                "name": null,
                "kind": "NON_NULL"
              }
            },
            {
              "name": "defaultValue",
              "type": {
                "name": "String",
                "kind": "SCALAR"
              }
            },
            {
              "name": "isDeprecated",
              "type": {
                "name": null,
                "kind": "NON_NULL"
              }
            },
            {
              "name": "deprecationReason",
              "type": {
                "name": "String",
                "kind": "SCALAR"
              }
            }
          ]
        },
        {
          "name": "__Schema",
          "kind": "OBJECT",
          "fields": [
            {
              "name": "description",
              "type": {
                "name": "String",
                "kind": "SCALAR"
              }
            },
            {
              "name": "types",
              "type": {
                "name": null,
                "kind": "NON_NULL"
              }
            },
            {
              "name": "queryType",
              "type": {
                "name": null,
                "kind": "NON_NULL"
              }
            },
            {
              "name": "mutationType",
              "type": {
                "name": "__Type",
                "kind": "OBJECT"
              }
            },
            {
              "name": "subscriptionType",
              "type": {
                "name": "__Type",
                "kind": "OBJECT"
              }
            },
            {
              "name": "directives",
              "type": {
                "name": null,
                "kind": "NON_NULL"
              }
            }
          ]
        },
        {
          "name": "__Type",
          "kind": "OBJECT",
          "fields": [
            {
              "name": "kind",
              "type": {
                "name": null,
                "kind": "NON_NULL"
              }
            },
            {
              "name": "name",
              "type": {
                "name": "String",
                "kind": "SCALAR"
              }
            },
            {
              "name": "description",
              "type": {
                "name": "String",
                "kind": "SCALAR"
              }
            },
            {
              "name": "fields",
              "type": {
                "name": null,
                "kind": "LIST"
              }
            },
            {
              "name": "interfaces",
              "type": {
                "name": null,
                "kind": "LIST"
              }
            },
            {
              "name": "possibleTypes",
              "type": {
                "name": null,
                "kind": "LIST"
              }
            },
            {
              "name": "enumValues",
              "type": {
                "name": null,
                "kind": "LIST"
              }
            },
            {
              "name": "inputFields",
              "type": {
                "name": null,
                "kind": "LIST"
              }
            },
            {
              "name": "ofType",
              "type": {
                "name": "__Type",
                "kind": "OBJECT"
              }
            },
            {
              "name": "specifiedByURL",
              "type": {
                "name": "String",
                "kind": "SCALAR"
              }
            }
          ]
        },
        {
          "name": "__TypeKind",
          "kind": "ENUM",
          "fields": null
        },
        {
          "name": "Query",
          "kind": "OBJECT",
          "fields": [
            {
              "name": "authorById",
              "type": {
                "name": null,
                "kind": "NON_NULL"
              }
            },
            {
              "name": "productById",
              "type": {
                "name": null,
                "kind": "NON_NULL"
              }
            },
            {
              "name": "reviews",
              "type": {
                "name": null,
                "kind": "NON_NULL"
              }
            },
            {
              "name": "topProducts",
              "type": {
                "name": null,
                "kind": "NON_NULL"
              }
            },
            {
              "name": "userById",
              "type": {
                "name": null,
                "kind": "NON_NULL"
              }
            },
            {
              "name": "users",
              "type": {
                "name": null,
                "kind": "NON_NULL"
              }
            }
          ]
        },
        {
          "name": "Product",
          "kind": "OBJECT",
          "fields": [
            {
              "name": "name",
              "type": {
                "name": null,
                "kind": "NON_NULL"
              }
            },
            {
              "name": "price",
              "type": {
                "name": null,
                "kind": "NON_NULL"
              }
            },
            {
              "name": "reviews",
              "type": {
                "name": null,
                "kind": "NON_NULL"
              }
            },
            {
              "name": "upc",
              "type": {
                "name": null,
                "kind": "NON_NULL"
              }
            },
            {
              "name": "weight",
              "type": {
                "name": null,
                "kind": "NON_NULL"
              }
            }
          ]
        },
        {
          "name": "Review",
          "kind": "OBJECT",
          "fields": [
            {
              "name": "author",
              "type": {
                "name": null,
                "kind": "NON_NULL"
              }
            },
            {
              "name": "body",
              "type": {
                "name": null,
                "kind": "NON_NULL"
              }
            },
            {
              "name": "id",
              "type": {
                "name": null,
                "kind": "NON_NULL"
              }
            },
            {
              "name": "product",
              "type": {
                "name": null,
                "kind": "NON_NULL"
              }
            }
          ]
        },
        {
          "name": "User",
          "kind": "OBJECT",
          "fields": [
            {
              "name": "birthdate",
              "type": {
                "name": null,
                "kind": "NON_NULL"
              }
            },
            {
              "name": "id",
              "type": {
                "name": null,
                "kind": "NON_NULL"
              }
            },
            {
              "name": "name",
              "type": {
                "name": null,
                "kind": "NON_NULL"
              }
            },
            {
              "name": "reviews",
              "type": {
                "name": null,
                "kind": "NON_NULL"
              }
            },
            {
              "name": "username",
              "type": {
                "name": null,
                "kind": "NON_NULL"
              }
            }
          ]
        },
        {
          "name": "String",
          "kind": "SCALAR",
          "fields": null
        },
        {
          "name": "Boolean",
          "kind": "SCALAR",
          "fields": null
        },
        {
          "name": "Int",
          "kind": "SCALAR",
          "fields": null
        },
        {
          "name": "DateTime",
          "kind": "SCALAR",
          "fields": null
        }
      ]
    }
  }
}
---------------

Fusion Graph
---------------
schema @fusion(version: 1) @httpClient(subgraph: "Reviews", baseAddress: "http:\/\/localhost:5000\/graphql") @httpClient(subgraph: "Accounts", baseAddress: "http:\/\/localhost:5000\/graphql") @httpClient(subgraph: "Products", baseAddress: "http:\/\/localhost:5000\/graphql") {
  query: Query
}

type Query {
  authorById(id: Int!): User! @variable(subgraph: "Reviews", name: "id", argument: "id", type: "Int!") @resolver(subgraph: "Reviews", select: "{ authorById(id: $id) }")
  productById(upc: Int!): Product! @variable(subgraph: "Reviews", name: "upc", argument: "upc", type: "Int!") @resolver(subgraph: "Reviews", select: "{ productById(upc: $upc) }") @variable(subgraph: "Products", name: "upc", argument: "upc", type: "Int!") @resolver(subgraph: "Products", select: "{ productById(upc: $upc) }")
  reviews: [Review!]! @resolver(subgraph: "Reviews", select: "{ reviews }")
  topProducts(first: Int!): [Product!]! @variable(subgraph: "Products", name: "first", argument: "first", type: "Int!") @resolver(subgraph: "Products", select: "{ topProducts(first: $first) }")
  userById(id: Int!): User! @variable(subgraph: "Accounts", name: "id", argument: "id", type: "Int!") @resolver(subgraph: "Accounts", select: "{ userById(id: $id) }")
  users: [User!]! @resolver(subgraph: "Accounts", select: "{ users }")
}

type Product @resolver(subgraph: "Reviews", select: "{ productById(upc: $Product_upc) }") @variable(subgraph: "Reviews", name: "Product_upc", select: "upc", type: "Int!") @resolver(subgraph: "Products", select: "{ productById(upc: $Product_upc) }") @variable(subgraph: "Products", name: "Product_upc", select: "upc", type: "Int!") {
  name: String! @source(subgraph: "Products")
  price: Int! @source(subgraph: "Products")
  reviews: [Review!]! @source(subgraph: "Reviews")
  upc: Int! @source(subgraph: "Reviews") @source(subgraph: "Products")
  weight: Int! @source(subgraph: "Products")
}

type Review {
  author: User! @source(subgraph: "Reviews")
  body: String! @source(subgraph: "Reviews")
  id: Int! @source(subgraph: "Reviews")
  product: Product! @source(subgraph: "Reviews")
}

type User @resolver(subgraph: "Reviews", select: "{ authorById(id: $User_id) }") @variable(subgraph: "Reviews", name: "User_id", select: "id", type: "Int!") @resolver(subgraph: "Accounts", select: "{ userById(id: $User_id) }") @variable(subgraph: "Accounts", name: "User_id", select: "id", type: "Int!") {
  birthdate: DateTime! @source(subgraph: "Accounts")
  id: Int! @source(subgraph: "Reviews") @source(subgraph: "Accounts")
  name: String! @source(subgraph: "Reviews") @source(subgraph: "Accounts")
  reviews: [Review!]! @source(subgraph: "Reviews")
  username: String! @source(subgraph: "Accounts")
}

"The `DateTime` scalar represents an ISO-8601 compliant date time type."
scalar DateTime
---------------
