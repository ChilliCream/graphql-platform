User Request
---------------
query Introspect {
  __schema {
    types {
      name
      kind
      fields {
        name
        type {
          name
          kind
        }
      }
    }
  }
}
---------------

QueryPlan
---------------
{
  "document": "query Introspect { __schema { types { name kind fields { name type { name kind } } } } }",
  "operation": "Introspect",
  "rootNode": {
    "type": "Sequence",
    "nodes": [
      {
        "type": "Introspect",
        "document": "{ __schema { types { name kind fields { name type { name kind } } } } }"
      },
      {
        "type": "Compose",
        "selectionSetIds": [
          0
        ]
      }
    ]
  }
}
---------------

Result
---------------
{
  "data": {
    "__schema": {
      "types": [
        {
          "name": "__Directive",
          "kind": "OBJECT",
          "fields": [
            {
              "name": "name",
              "type": {
                "name": null,
                "kind": "NON_NULL"
              }
            },
            {
              "name": "description",
              "type": {
                "name": "String",
                "kind": "SCALAR"
              }
            },
            {
              "name": "locations",
              "type": {
                "name": null,
                "kind": "NON_NULL"
              }
            },
            {
              "name": "args",
              "type": {
                "name": null,
                "kind": "NON_NULL"
              }
            },
            {
              "name": "isRepeatable",
              "type": {
                "name": null,
                "kind": "NON_NULL"
              }
            }
          ]
        },
        {
          "name": "__DirectiveLocation",
          "kind": "ENUM",
          "fields": null
        },
        {
          "name": "__EnumValue",
          "kind": "OBJECT",
          "fields": [
            {
              "name": "name",
              "type": {
                "name": null,
                "kind": "NON_NULL"
              }
            },
            {
              "name": "description",
              "type": {
                "name": "String",
                "kind": "SCALAR"
              }
            },
            {
              "name": "isDeprecated",
              "type": {
                "name": null,
                "kind": "NON_NULL"
              }
            },
            {
              "name": "deprecationReason",
              "type": {
                "name": "String",
                "kind": "SCALAR"
              }
            }
          ]
        },
        {
          "name": "__Field",
          "kind": "OBJECT",
          "fields": [
            {
              "name": "name",
              "type": {
                "name": null,
                "kind": "NON_NULL"
              }
            },
            {
              "name": "description",
              "type": {
                "name": "String",
                "kind": "SCALAR"
              }
            },
            {
              "name": "args",
              "type": {
                "name": null,
                "kind": "NON_NULL"
              }
            },
            {
              "name": "type",
              "type": {
                "name": null,
                "kind": "NON_NULL"
              }
            },
            {
              "name": "isDeprecated",
              "type": {
                "name": null,
                "kind": "NON_NULL"
              }
            },
            {
              "name": "deprecationReason",
              "type": {
                "name": "String",
                "kind": "SCALAR"
              }
            }
          ]
        },
        {
          "name": "__InputValue",
          "kind": "OBJECT",
          "fields": [
            {
              "name": "name",
              "type": {
                "name": null,
                "kind": "NON_NULL"
              }
            },
            {
              "name": "description",
              "type": {
                "name": "String",
                "kind": "SCALAR"
              }
            },
            {
              "name": "type",
              "type": {
                "name": null,
                "kind": "NON_NULL"
              }
            },
            {
              "name": "defaultValue",
              "type": {
                "name": "String",
                "kind": "SCALAR"
              }
            },
            {
              "name": "isDeprecated",
              "type": {
                "name": null,
                "kind": "NON_NULL"
              }
            },
            {
              "name": "deprecationReason",
              "type": {
                "name": "String",
                "kind": "SCALAR"
              }
            }
          ]
        },
        {
          "name": "__Schema",
          "kind": "OBJECT",
          "fields": [
            {
              "name": "description",
              "type": {
                "name": "String",
                "kind": "SCALAR"
              }
            },
            {
              "name": "types",
              "type": {
                "name": null,
                "kind": "NON_NULL"
              }
            },
            {
              "name": "queryType",
              "type": {
                "name": null,
                "kind": "NON_NULL"
              }
            },
            {
              "name": "mutationType",
              "type": {
                "name": "__Type",
                "kind": "OBJECT"
              }
            },
            {
              "name": "subscriptionType",
              "type": {
                "name": "__Type",
                "kind": "OBJECT"
              }
            },
            {
              "name": "directives",
              "type": {
                "name": null,
                "kind": "NON_NULL"
              }
            }
          ]
        },
        {
          "name": "__Type",
          "kind": "OBJECT",
          "fields": [
            {
              "name": "kind",
              "type": {
                "name": null,
                "kind": "NON_NULL"
              }
            },
            {
              "name": "name",
              "type": {
                "name": "String",
                "kind": "SCALAR"
              }
            },
            {
              "name": "description",
              "type": {
                "name": "String",
                "kind": "SCALAR"
              }
            },
            {
              "name": "fields",
              "type": {
                "name": null,
                "kind": "LIST"
              }
            },
            {
              "name": "interfaces",
              "type": {
                "name": null,
                "kind": "LIST"
              }
            },
            {
              "name": "possibleTypes",
              "type": {
                "name": null,
                "kind": "LIST"
              }
            },
            {
              "name": "enumValues",
              "type": {
                "name": null,
                "kind": "LIST"
              }
            },
            {
              "name": "inputFields",
              "type": {
                "name": null,
                "kind": "LIST"
              }
            },
            {
              "name": "ofType",
              "type": {
                "name": "__Type",
                "kind": "OBJECT"
              }
            },
            {
              "name": "specifiedByURL",
              "type": {
                "name": "String",
                "kind": "SCALAR"
              }
            }
          ]
        },
        {
          "name": "__TypeKind",
          "kind": "ENUM",
          "fields": null
        },
        {
          "name": "Query",
          "kind": "OBJECT",
          "fields": [
            {
              "name": "productById",
              "type": {
                "name": "Product",
                "kind": "OBJECT"
              }
            },
            {
              "name": "reviewById",
              "type": {
                "name": "Review",
                "kind": "OBJECT"
              }
            },
            {
              "name": "reviewOrAuthor",
              "type": {
                "name": null,
                "kind": "NON_NULL"
              }
            },
            {
              "name": "reviews",
              "type": {
                "name": null,
                "kind": "NON_NULL"
              }
            },
            {
              "name": "topProducts",
              "type": {
                "name": null,
                "kind": "NON_NULL"
              }
            },
            {
              "name": "userById",
              "type": {
                "name": "User",
                "kind": "OBJECT"
              }
            },
            {
              "name": "users",
              "type": {
                "name": null,
                "kind": "NON_NULL"
              }
            },
            {
              "name": "usersById",
              "type": {
                "name": null,
                "kind": "NON_NULL"
              }
            }
          ]
        },
        {
          "name": "Mutation",
          "kind": "OBJECT",
          "fields": [
            {
              "name": "addReview",
              "type": {
                "name": null,
                "kind": "NON_NULL"
              }
            },
            {
              "name": "addUser",
              "type": {
                "name": null,
                "kind": "NON_NULL"
              }
            }
          ]
        },
        {
          "name": "Subscription",
          "kind": "OBJECT",
          "fields": [
            {
              "name": "onNewReview",
              "type": {
                "name": null,
                "kind": "NON_NULL"
              }
            }
          ]
        },
        {
          "name": "AddReviewPayload",
          "kind": "OBJECT",
          "fields": [
            {
              "name": "review",
              "type": {
                "name": "Review",
                "kind": "OBJECT"
              }
            }
          ]
        },
        {
          "name": "AddUserPayload",
          "kind": "OBJECT",
          "fields": [
            {
              "name": "user",
              "type": {
                "name": "User",
                "kind": "OBJECT"
              }
            }
          ]
        },
        {
          "name": "Product",
          "kind": "OBJECT",
          "fields": [
            {
              "name": "id",
              "type": {
                "name": null,
                "kind": "NON_NULL"
              }
            },
            {
              "name": "name",
              "type": {
                "name": null,
                "kind": "NON_NULL"
              }
            },
            {
              "name": "price",
              "type": {
                "name": null,
                "kind": "NON_NULL"
              }
            },
            {
              "name": "reviews",
              "type": {
                "name": null,
                "kind": "NON_NULL"
              }
            },
            {
              "name": "upc",
              "type": {
                "name": null,
                "kind": "NON_NULL"
              }
            },
            {
              "name": "weight",
              "type": {
                "name": null,
                "kind": "NON_NULL"
              }
            }
          ]
        },
        {
          "name": "Review",
          "kind": "OBJECT",
          "fields": [
            {
              "name": "author",
              "type": {
                "name": null,
                "kind": "NON_NULL"
              }
            },
            {
              "name": "body",
              "type": {
                "name": null,
                "kind": "NON_NULL"
              }
            },
            {
              "name": "id",
              "type": {
                "name": null,
                "kind": "NON_NULL"
              }
            },
            {
              "name": "product",
              "type": {
                "name": null,
                "kind": "NON_NULL"
              }
            }
          ]
        },
        {
          "name": "User",
          "kind": "OBJECT",
          "fields": [
            {
              "name": "birthdate",
              "type": {
                "name": null,
                "kind": "NON_NULL"
              }
            },
            {
              "name": "id",
              "type": {
                "name": null,
                "kind": "NON_NULL"
              }
            },
            {
              "name": "name",
              "type": {
                "name": null,
                "kind": "NON_NULL"
              }
            },
            {
              "name": "reviews",
              "type": {
                "name": null,
                "kind": "NON_NULL"
              }
            },
            {
              "name": "username",
              "type": {
                "name": null,
                "kind": "NON_NULL"
              }
            }
          ]
        },
        {
          "name": "Node",
          "kind": "INTERFACE",
          "fields": [
            {
              "name": "id",
              "type": {
                "name": null,
                "kind": "NON_NULL"
              }
            }
          ]
        },
        {
          "name": "ReviewOrAuthor",
          "kind": "UNION",
          "fields": null
        },
        {
          "name": "AddReviewInput",
          "kind": "INPUT_OBJECT",
          "fields": null
        },
        {
          "name": "AddUserInput",
          "kind": "INPUT_OBJECT",
          "fields": null
        },
        {
          "name": "String",
          "kind": "SCALAR",
          "fields": null
        },
        {
          "name": "Boolean",
          "kind": "SCALAR",
          "fields": null
        },
        {
          "name": "ID",
          "kind": "SCALAR",
          "fields": null
        },
        {
          "name": "Int",
          "kind": "SCALAR",
          "fields": null
        },
        {
          "name": "Date",
          "kind": "SCALAR",
          "fields": null
        },
        {
          "name": "DateTime",
          "kind": "SCALAR",
          "fields": null
        }
      ]
    }
  }
}
---------------

Fusion Graph
---------------
schema @fusion(version: 1) @httpClient(subgraph: "Reviews2", baseAddress: "http:\/\/localhost:5000\/graphql") @webSocketClient(subgraph: "Reviews2", baseAddress: "ws:\/\/localhost:5000\/graphql") @httpClient(subgraph: "Accounts", baseAddress: "http:\/\/localhost:5000\/graphql") @webSocketClient(subgraph: "Accounts", baseAddress: "ws:\/\/localhost:5000\/graphql") @httpClient(subgraph: "Products", baseAddress: "http:\/\/localhost:5000\/graphql") @webSocketClient(subgraph: "Products", baseAddress: "ws:\/\/localhost:5000\/graphql") {
  query: Query
  mutation: Mutation
  subscription: Subscription
}

type Query {
  productById(id: ID!): Product @variable(subgraph: "Reviews2", name: "id", argument: "id") @resolver(subgraph: "Reviews2", select: "{ productById(id: $id) }", arguments: [ { name: "id", type: "ID!" } ]) @variable(subgraph: "Products", name: "id", argument: "id") @resolver(subgraph: "Products", select: "{ productById(id: $id) }", arguments: [ { name: "id", type: "ID!" } ])
  reviewById(id: ID!): Review @variable(subgraph: "Reviews2", name: "id", argument: "id") @resolver(subgraph: "Reviews2", select: "{ reviewById(id: $id) }", arguments: [ { name: "id", type: "ID!" } ])
  reviewOrAuthor: ReviewOrAuthor! @resolver(subgraph: "Reviews2", select: "{ reviewOrAuthor }")
  reviews: [Review!]! @resolver(subgraph: "Reviews2", select: "{ reviews }")
  topProducts(first: Int!): [Product!]! @variable(subgraph: "Products", name: "first", argument: "first") @resolver(subgraph: "Products", select: "{ topProducts(first: $first) }", arguments: [ { name: "first", type: "Int!" } ])
  userById(id: ID!): User @variable(subgraph: "Reviews2", name: "id", argument: "id") @resolver(subgraph: "Reviews2", select: "{ authorById(id: $id) }", arguments: [ { name: "id", type: "ID!" } ]) @variable(subgraph: "Accounts", name: "id", argument: "id") @resolver(subgraph: "Accounts", select: "{ userById(id: $id) }", arguments: [ { name: "id", type: "ID!" } ])
  users: [User!]! @resolver(subgraph: "Accounts", select: "{ users }")
  usersById(ids: [ID!]!): [User!]! @variable(subgraph: "Accounts", name: "ids", argument: "ids") @resolver(subgraph: "Accounts", select: "{ usersById(ids: $ids) }", arguments: [ { name: "ids", type: "[ID!]!" } ])
}

type Mutation {
  addReview(input: AddReviewInput!): AddReviewPayload! @variable(subgraph: "Reviews2", name: "input", argument: "input") @resolver(subgraph: "Reviews2", select: "{ addReview(input: $input) }", arguments: [ { name: "input", type: "AddReviewInput!" } ])
  addUser(input: AddUserInput!): AddUserPayload! @variable(subgraph: "Accounts", name: "input", argument: "input") @resolver(subgraph: "Accounts", select: "{ addUser(input: $input) }", arguments: [ { name: "input", type: "AddUserInput!" } ])
}

type Subscription {
  onNewReview: Review! @resolver(subgraph: "Reviews2", select: "{ onNewReview }", kind: "SUBSCRIPTION")
}

type AddReviewPayload {
  review: Review @source(subgraph: "Reviews2")
}

type AddUserPayload {
  user: User @source(subgraph: "Accounts")
}

type Product implements Node @variable(subgraph: "Reviews2", name: "Product_id", select: "id") @variable(subgraph: "Products", name: "Product_id", select: "id") @resolver(subgraph: "Reviews2", select: "{ productById(id: $Product_id) }", arguments: [ { name: "Product_id", type: "ID!" } ]) @resolver(subgraph: "Products", select: "{ productById(id: $Product_id) }", arguments: [ { name: "Product_id", type: "ID!" } ]) {
  id: ID! @source(subgraph: "Products")
  name: String! @source(subgraph: "Products")
  price: Int! @source(subgraph: "Products")
  reviews: [Review!]! @source(subgraph: "Reviews2")
  upc: Int! @source(subgraph: "Reviews2")
  weight: Int! @source(subgraph: "Products")
}

type Review implements Node {
  author: User! @source(subgraph: "Reviews2")
  body: String! @source(subgraph: "Reviews2")
  id: ID! @source(subgraph: "Reviews2")
  product: Product! @source(subgraph: "Reviews2")
}

type User implements Node @variable(subgraph: "Reviews2", name: "User_id", select: "id") @variable(subgraph: "Accounts", name: "User_id", select: "id") @resolver(subgraph: "Reviews2", select: "{ authorById(id: $User_id) }", arguments: [ { name: "User_id", type: "ID!" } ]) @resolver(subgraph: "Accounts", select: "{ userById(id: $User_id) }", arguments: [ { name: "User_id", type: "ID!" } ]) @resolver(subgraph: "Accounts", select: "{ usersById(ids: $User_id) }", arguments: [ { name: "User_id", type: "[ID!]!" } ], kind: "BATCH_BY_KEY") {
  birthdate: Date! @source(subgraph: "Accounts")
  id: ID! @source(subgraph: "Reviews2") @source(subgraph: "Accounts")
  name: String! @source(subgraph: "Reviews2") @source(subgraph: "Accounts")
  reviews: [Review!]! @source(subgraph: "Reviews2")
  username: String! @source(subgraph: "Accounts")
}

interface Node {
  id: ID!
}

union ReviewOrAuthor = User | Review

input AddReviewInput {
  authorId: Int!
  body: String!
  upc: Int!
}

input AddUserInput {
  birthdate: DateTime!
  name: String!
  username: String!
}

"The `Date` scalar represents an ISO-8601 compliant date type."
scalar Date

"The `DateTime` scalar represents an ISO-8601 compliant date time type."
scalar DateTime
---------------
