"The `DateTime` scalar represents an ISO-8601 compliant date time type."
scalar DateTime

scalar Int

type Product @resolver(subGraph: "Reviews", select: "{ productById(upc: $Product_upc) }") @variable(subGraph: "Reviews", name: "Product_upc", select: "upc", type: "Int!") {
  reviews: [Review!]! @source(subGraph: "Reviews")
  upc: Int! @source(subGraph: "Reviews")
}

type Query {
  authorById(id: Int!): User! @resolver(subGraph: "Reviews", select: "{ authorById(id: $id) }")
  productById(upc: Int!): Product! @resolver(subGraph: "Reviews", select: "{ productById(upc: $upc) }")
  reviews: [Review!]! @resolver(subGraph: "Reviews", select: "{ reviews }")
  userById(id: Int!): User! @resolver(subGraph: "Accounts", select: "{ userById(id: $id) }")
  users: [User!]! @resolver(subGraph: "Accounts", select: "{ users }")
}

type Review {
  author: User! @source(subGraph: "Reviews")
  body: String! @source(subGraph: "Reviews")
  id: Int! @source(subGraph: "Reviews")
  product: Product! @source(subGraph: "Reviews")
}

scalar String

type User @resolver(subGraph: "Reviews", select: "{ authorById(id: $User_id) }") @variable(subGraph: "Reviews", name: "User_id", select: "id", type: "Int!") @resolver(subGraph: "Accounts", select: "{ userById(id: $User_id) }") @variable(subGraph: "Accounts", name: "User_id", select: "id", type: "Int!") {
  birthdate: DateTime! @source(subGraph: "Accounts")
  id: Int! @source(subGraph: "Reviews") @source(subGraph: "Accounts")
  name: String! @source(subGraph: "Reviews") @source(subGraph: "Accounts")
  reviews: [Review!]! @source(subGraph: "Reviews")
  username: String! @source(subGraph: "Accounts")
}

schema @httpClient(subGraph: "Reviews", baseAddress: "https:\/\/b\/graphql") @httpClient(subGraph: "Accounts", baseAddress: "https:\/\/b\/graphql") {
  query: Query
}