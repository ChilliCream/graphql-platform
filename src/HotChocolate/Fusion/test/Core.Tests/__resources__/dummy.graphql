type Query {
  personById(id: ID!): Person
    @variable(name: "personId", argument: "id")
    @fetch(from: "a", select: "personById(id: $personId) { ... Person }")
    @fetch(from: "b", select: "personById(id: $personId) { ... Person }")
}

type Person
  @variable(name: "personId", select: "id", from: "a", type: "Int!")
  @variable(name: "personId", select: "id", from: "b", type: "Int!")
  @fetch(from: "a", select: "personById(id: $personId) { ... Person }")
  @fetch(from: "b", select: "personById(id: $personId) { ... Person }") {
  id: ID! @bind(to: "a") @bind(to: "b") @bind(to: "c")
  name: String! @bind(to: "a")
  bio: String @bind(to: "b")

  friends: [Person!] @bind(to: "a")
}

schema
  @httpClient(name: "a", baseAddress: "https://a/graphql")
  @httpClient(name: "b", baseAddress: "https://b/graphql") {
  query: Query
}
