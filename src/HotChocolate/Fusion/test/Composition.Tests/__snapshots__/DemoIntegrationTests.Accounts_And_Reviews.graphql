schema @fusion(version: 1) @httpClient(subgraph: "Accounts", baseAddress: "http:\/\/localhost:5000\/") @httpClient(subgraph: "Reviews", baseAddress: "http:\/\/localhost:5001\/") {
  query: Query
}

type Query {
  productById(upc: Int!): Product @variable(subgraph: "Reviews", name: "upc", argument: "upc", type: "Int!") @resolver(subgraph: "Reviews", select: "{ productById(upc: $upc) }")
  reviews: [Review!]! @resolver(subgraph: "Reviews", select: "{ reviews }")
  userById(id: Int!): User! @variable(subgraph: "Accounts", name: "id", argument: "id", type: "Int!") @resolver(subgraph: "Accounts", select: "{ userById(id: $id) }") @variable(subgraph: "Reviews", name: "id", argument: "id", type: "Int!") @resolver(subgraph: "Reviews", select: "{ userById(id: $id) }")
  users: [User!]! @resolver(subgraph: "Accounts", select: "{ users }")
}

type Product @resolver(subgraph: "Reviews", select: "{ productById(upc: $Product_upc) }") @variable(subgraph: "Reviews", name: "Product_upc", select: "upc", type: "Int!") {
  reviews: [Review!]! @source(subgraph: "Reviews")
  upc: Int! @source(subgraph: "Reviews")
}

type Review {
  author: User! @source(subgraph: "Reviews")
  body: String! @source(subgraph: "Reviews")
  id: Int! @source(subgraph: "Reviews")
  upc: Product! @source(subgraph: "Reviews")
}

type User @resolver(subgraph: "Accounts", select: "{ userById(id: $User_id) }") @variable(subgraph: "Accounts", name: "User_id", select: "id", type: "Int!") @resolver(subgraph: "Reviews", select: "{ userById(id: $User_id) }") @variable(subgraph: "Reviews", name: "User_id", select: "id", type: "Int!") {
  birthdate: DateTime! @source(subgraph: "Accounts")
  id: Int! @source(subgraph: "Accounts") @source(subgraph: "Reviews")
  name: String! @source(subgraph: "Accounts")
  reviews: [Review!]! @source(subgraph: "Reviews")
  username: String! @source(subgraph: "Accounts")
}

scalar DateTime
