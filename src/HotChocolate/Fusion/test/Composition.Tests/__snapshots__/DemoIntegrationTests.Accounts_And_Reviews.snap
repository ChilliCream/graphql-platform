scalar _Selection

scalar _SelectionSet

scalar _Type

scalar _TypeName

scalar DateTime

scalar Int

type Product @resolver(subGraphName: "Reviews", select: "{\n  productById(upc: $Product_upc)\n}") @variable(subGraphName: "Reviews", name: "Product_upc", select: "upc", type: "Int!") {
  reviews: [Review!]! @source(subGraphName: "Reviews")
  upc: Int! @source(subGraphName: "Reviews")
}

type Query {
  productById(upc: Int!): Product @resolver(subGraphName: "Reviews", select: "{\n  productById(upc: $upc)\n}")
  reviews: [Review!]! @resolver(subGraphName: "Reviews", select: "{\n  reviews\n}")
  userById(id: Int!): User! @resolver(subGraphName: "Accounts", select: "{\n  userById(id: $id)\n}") @resolver(subGraphName: "Reviews", select: "{\n  userById(id: $id)\n}")
  users: [User!]! @resolver(subGraphName: "Accounts", select: "{\n  users\n}")
}

type Review {
  author: User! @source(subGraphName: "Reviews")
  body: String! @source(subGraphName: "Reviews")
  id: Int! @source(subGraphName: "Reviews")
  upc: Product! @source(subGraphName: "Reviews")
}

scalar String

type User @resolver(subGraphName: "Accounts", select: "{\n  userById(id: $User_id)\n}") @variable(subGraphName: "Accounts", name: "User_id", select: "id", type: "Int!") @resolver(subGraphName: "Reviews", select: "{\n  userById(id: $User_id)\n}") @variable(subGraphName: "Reviews", name: "User_id", select: "id", type: "Int!") {
  birthdate: DateTime! @source(subGraphName: "Accounts")
  id: Int! @source(subGraphName: "Accounts") @source(subGraphName: "Reviews")
  name: String! @source(subGraphName: "Accounts")
  reviews: [Review!]! @source(subGraphName: "Reviews")
  username: String! @source(subGraphName: "Accounts")
}

directive @resolver(select: _TypeName! subGraphName: _SelectionSet!) on OBJECT

directive @source(name: _TypeName subGraphName: _TypeName!) on FIELD_DEFINITION

directive @variable(name: _TypeName! select: _Selection! subGraphName: _TypeName! type: _Type!) on OBJECT | FIELD_DEFINITION

schema {
  query: Query
}