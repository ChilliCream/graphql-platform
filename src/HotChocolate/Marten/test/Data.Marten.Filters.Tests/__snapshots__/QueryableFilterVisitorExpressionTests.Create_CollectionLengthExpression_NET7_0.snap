1 Result:
---------------
{
  "errors": [
    {
      "message": "Unexpected Execution Error",
      "locations": [
        {
          "line": 1,
          "column": 3
        }
      ],
      "path": [
        "root"
      ],
      "extensions": {
        "message": "Marten Command Failure:$\r\nWITH mt_temp_id_list3CTE as (\nselect ctid, unnest(CAST(ARRAY(SELECT jsonb_array_elements(CAST(d.data -\u003E\u003E \u0027Bars\u0027 as jsonb))) as jsonb[])) as data from public.mt_doc_queryablefiltervisitorexpressiontests_foo as d\n)\n  , mt_temp_id_list4CTE as (\nselect ctid, count(*) as data from mt_temp_id_list3CTE as d group by ctid having count(*) =:p0\n)\n select d.id, d.data from public.mt_doc_queryablefiltervisitorexpressiontests_foo as d where d.ctid in (select ctid from mt_temp_id_list4CTE)$\r\n$\r\n22023: cannot extract elements from an object",
        "stackTrace": "   at Baseline.Exceptions.ExceptionTransformExtensions.TransformAndThrow(IEnumerable\u00601 transforms, Exception ex)\r\n   at Baseline.Exceptions.ExceptionTransforms.TransformAndThrow(Exception ex)\r\n   at Marten.Exceptions.MartenExceptionTransformer.WrapAndThrow(NpgsqlCommand command, Exception exception)\r\n   at Marten.Internal.Sessions.QuerySession.handleCommandException(NpgsqlCommand cmd, Exception e)\r\n   at Marten.Internal.Sessions.QuerySession.ExecuteReaderAsync(NpgsqlCommand command, CancellationToken token)\r\n   at Marten.Linq.MartenLinqQueryProvider.ExecuteHandlerAsync[T](IQueryHandler\u00601 handler, CancellationToken token)\r\n   at Baseline.Exceptions.ExceptionTransformExtensions.TransformAndThrow(IEnumerable\u00601 transforms, Exception ex)\r\n   at Baseline.Exceptions.ExceptionTransforms.TransformAndThrow(Exception ex)\r\n   at Marten.Exceptions.MartenExceptionTransformer.WrapAndThrow(Exception exception)\r\n   at Marten.Linq.MartenLinqQueryProvider.ExecuteHandlerAsync[T](IQueryHandler\u00601 handler, CancellationToken token)\r\n   at Marten.Linq.MartenLinqQueryProvider.ExecuteAsync[TResult](Expression expression, CancellationToken token)\r\n   at HotChocolate.Data.Filters.FilterVisitorTestBase.\u003C\u003Ec__DisplayClass7_2\u00602.\u003C\u003CApplyConfigurationToField\u003Eb__3\u003Ed.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at HotChocolate.Data.Filters.FilterVisitorTestBase.\u003C\u003Ec__DisplayClass7_1\u00602.\u003C\u003CApplyConfigurationToField\u003Eb__2\u003Ed.MoveNext() in C:\\Users\\jabellard\\dev\\hc\\hotchocolate\\src\\HotChocolate\\Marten\\test\\Data.Marten.Filters.Tests\\FilterVisitorTestBase.cs:line 99\r\n--- End of stack trace from previous location ---\r\n   at HotChocolate.Data.Filters.FilterVisitorTestBase.\u003C\u003Ec__DisplayClass7_1\u00602.\u003C\u003CApplyConfigurationToField\u003Eb__2\u003Ed.MoveNext() in C:\\Users\\jabellard\\dev\\hc\\hotchocolate\\src\\HotChocolate\\Marten\\test\\Data.Marten.Filters.Tests\\FilterVisitorTestBase.cs:line 100\r\n--- End of stack trace from previous location ---\r\n   at HotChocolate.Execution.Processing.Tasks.ResolverTask.ExecuteResolverPipelineAsync(CancellationToken cancellationToken) in C:\\Users\\jabellard\\dev\\hc\\hotchocolate\\src\\HotChocolate\\Core\\src\\Execution\\Processing\\Tasks\\ResolverTask.Execute.cs:line 128\r\n   at HotChocolate.Execution.Processing.Tasks.ResolverTask.TryExecuteAsync(CancellationToken cancellationToken) in C:\\Users\\jabellard\\dev\\hc\\hotchocolate\\src\\HotChocolate\\Core\\src\\Execution\\Processing\\Tasks\\ResolverTask.Execute.cs:line 107"
      }
    }
  ],
  "data": {
    "root": null
  }
}
---------------

1 SQL:
---------------
WITH mt_temp_id_list1CTE as (
select ctid, unnest(CAST(ARRAY(SELECT jsonb_array_elements(CAST(d.data ->> 'Bars' as jsonb))) as jsonb[])) as data from public.mt_doc_queryablefiltervisitorexpressiontests_foo as d
)
  , mt_temp_id_list2CTE as (
select ctid, count(*) as data from mt_temp_id_list1CTE as d group by ctid having count(*) =:p0
)
 select d.id, d.data from public.mt_doc_queryablefiltervisitorexpressiontests_foo as d where d.ctid in (select ctid from mt_temp_id_list2CTE)
---------------

0 Result:
---------------
{
  "errors": [
    {
      "message": "Unexpected Execution Error",
      "locations": [
        {
          "line": 1,
          "column": 3
        }
      ],
      "path": [
        "root"
      ],
      "extensions": {
        "message": "Marten Command Failure:$\r\nWITH mt_temp_id_list3CTE as (\nselect ctid, unnest(CAST(ARRAY(SELECT jsonb_array_elements(CAST(d.data -\u003E\u003E \u0027Bars\u0027 as jsonb))) as jsonb[])) as data from public.mt_doc_queryablefiltervisitorexpressiontests_foo as d\n)\n  , mt_temp_id_list4CTE as (\nselect ctid, count(*) as data from mt_temp_id_list3CTE as d group by ctid having count(*) =:p0\n)\n select d.id, d.data from public.mt_doc_queryablefiltervisitorexpressiontests_foo as d where d.ctid in (select ctid from mt_temp_id_list4CTE)$\r\n$\r\n22023: cannot extract elements from an object",
        "stackTrace": "   at Baseline.Exceptions.ExceptionTransformExtensions.TransformAndThrow(IEnumerable\u00601 transforms, Exception ex)\r\n   at Baseline.Exceptions.ExceptionTransforms.TransformAndThrow(Exception ex)\r\n   at Marten.Exceptions.MartenExceptionTransformer.WrapAndThrow(NpgsqlCommand command, Exception exception)\r\n   at Marten.Internal.Sessions.QuerySession.handleCommandException(NpgsqlCommand cmd, Exception e)\r\n   at Marten.Internal.Sessions.QuerySession.ExecuteReaderAsync(NpgsqlCommand command, CancellationToken token)\r\n   at Marten.Linq.MartenLinqQueryProvider.ExecuteHandlerAsync[T](IQueryHandler\u00601 handler, CancellationToken token)\r\n   at Baseline.Exceptions.ExceptionTransformExtensions.TransformAndThrow(IEnumerable\u00601 transforms, Exception ex)\r\n   at Baseline.Exceptions.ExceptionTransforms.TransformAndThrow(Exception ex)\r\n   at Marten.Exceptions.MartenExceptionTransformer.WrapAndThrow(Exception exception)\r\n   at Marten.Linq.MartenLinqQueryProvider.ExecuteHandlerAsync[T](IQueryHandler\u00601 handler, CancellationToken token)\r\n   at Marten.Linq.MartenLinqQueryProvider.ExecuteAsync[TResult](Expression expression, CancellationToken token)\r\n   at HotChocolate.Data.Filters.FilterVisitorTestBase.\u003C\u003Ec__DisplayClass7_2\u00602.\u003C\u003CApplyConfigurationToField\u003Eb__3\u003Ed.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at HotChocolate.Data.Filters.FilterVisitorTestBase.\u003C\u003Ec__DisplayClass7_1\u00602.\u003C\u003CApplyConfigurationToField\u003Eb__2\u003Ed.MoveNext() in C:\\Users\\jabellard\\dev\\hc\\hotchocolate\\src\\HotChocolate\\Marten\\test\\Data.Marten.Filters.Tests\\FilterVisitorTestBase.cs:line 99\r\n--- End of stack trace from previous location ---\r\n   at HotChocolate.Data.Filters.FilterVisitorTestBase.\u003C\u003Ec__DisplayClass7_1\u00602.\u003C\u003CApplyConfigurationToField\u003Eb__2\u003Ed.MoveNext() in C:\\Users\\jabellard\\dev\\hc\\hotchocolate\\src\\HotChocolate\\Marten\\test\\Data.Marten.Filters.Tests\\FilterVisitorTestBase.cs:line 100\r\n--- End of stack trace from previous location ---\r\n   at HotChocolate.Execution.Processing.Tasks.ResolverTask.ExecuteResolverPipelineAsync(CancellationToken cancellationToken) in C:\\Users\\jabellard\\dev\\hc\\hotchocolate\\src\\HotChocolate\\Core\\src\\Execution\\Processing\\Tasks\\ResolverTask.Execute.cs:line 128\r\n   at HotChocolate.Execution.Processing.Tasks.ResolverTask.TryExecuteAsync(CancellationToken cancellationToken) in C:\\Users\\jabellard\\dev\\hc\\hotchocolate\\src\\HotChocolate\\Core\\src\\Execution\\Processing\\Tasks\\ResolverTask.Execute.cs:line 107"
      }
    }
  ],
  "data": {
    "root": null
  }
}
---------------

0 SQL:
---------------
WITH mt_temp_id_list1CTE as (
select ctid, unnest(CAST(ARRAY(SELECT jsonb_array_elements(CAST(d.data ->> 'Bars' as jsonb))) as jsonb[])) as data from public.mt_doc_queryablefiltervisitorexpressiontests_foo as d
)
  , mt_temp_id_list2CTE as (
select ctid, count(*) as data from mt_temp_id_list1CTE as d group by ctid having count(*) =:p0
)
 select d.id, d.data from public.mt_doc_queryablefiltervisitorexpressiontests_foo as d where d.ctid in (select ctid from mt_temp_id_list2CTE)
---------------

null
---------------
{
  "errors": [
    {
      "message": "The provided value for filter \u0060eq\u0060 of type IntOperationFilterInput is invalid. Null values are not supported.",
      "locations": [
        {
          "line": 1,
          "column": 34
        }
      ],
      "path": [
        "root"
      ],
      "extensions": {
        "code": "HC0026",
        "expectedType": "Int!",
        "filterType": "IntOperationFilterInput"
      }
    }
  ],
  "data": {
    "root": []
  }
}
---------------
