schema {
  query: Query
}

type Foo {
  comparable: Short!
  comparableEnumerable: [Short!]
  bool: Boolean!
  object: FooBar
}

type FooBar {
  nested: String
}

type Query {
  foo: String
}

type Test {
  foo(test: FooFilterTest): [Foo!]!
}

input FooBarFilterTest {
  AND: [FooBarFilterTest!]
  OR: [FooBarFilterTest!]
  nested: String
  nested_not: String
  nested_contains: String
  nested_not_contains: String
  nested_starts_with: String
  nested_not_starts_with: String
  nested_ends_with: String
  nested_not_ends_with: String
  nested_in: [String]
  nested_not_in: [String]
}

input FooFilterTest {
  AND: [FooFilterTest!]
  OR: [FooFilterTest!]
  comparable: Short
  comparable_not: Short
  comparable_in: [Short!]
  comparable_not_in: [Short!]
  comparable_gt: Short
  comparable_not_gt: Short
  comparable_gte: Short
  comparable_not_gte: Short
  comparable_lt: Short
  comparable_not_lt: Short
  comparable_lte: Short
  comparable_not_lte: Short
  comparableEnumerable_some: ISingleFilterOfInt16FilterTest
  comparableEnumerable_none: ISingleFilterOfInt16FilterTest
  comparableEnumerable_all: ISingleFilterOfInt16FilterTest
  comparableEnumerable_any: Boolean
  bool: Boolean
  bool_not: Boolean
  object: FooBarFilterTest
}

input ISingleFilterOfInt16FilterTest {
  AND: [ISingleFilterOfInt16FilterTest!]
  OR: [ISingleFilterOfInt16FilterTest!]
  TESTelement: Short
  TESTelement_not: Short
  TESTelement_in: [Short!]
  TESTelement_not_in: [Short!]
  TESTelement_gt: Short
  TESTelement_not_gt: Short
  TESTelement_gte: Short
  TESTelement_not_gte: Short
  TESTelement_lt: Short
  TESTelement_not_lt: Short
  TESTelement_lte: Short
  TESTelement_not_lte: Short
}

"The `@defer` directive may be provided for fragment spreads and inline fragments to inform the executor to delay the execution of the current fragment to indicate deprioritization of the current fragment. A query with `@defer` directive will cause the request to potentially return multiple responses, where non-deferred data is delivered in the initial response and data deferred is delivered in a subsequent response. `@include` and `@skip` take precedence over `@defer`."
directive @defer("If this argument label has a value other than null, it will be passed on to the result of this defer directive. This label is intended to give client applications a way to identify to which fragment a deferred result belongs to." label: String "Deferred when true." if: Boolean) on FRAGMENT_SPREAD | INLINE_FRAGMENT

"The `@stream` directive may be provided for a field of `List` type so that the backend can leverage technology such as asynchronous iterators to provide a partial list in the initial response, and additional list items in subsequent responses. `@include` and `@skip` take precedence over `@stream`."
directive @stream("If this argument label has a value other than null, it will be passed on to the result of this stream directive. This label is intended to give client applications a way to identify to which fragment a streamed result belongs to." label: String "The initial elements that shall be send down to the consumer." initialCount: Int! "Streamed when true." if: Boolean!) on FIELD

"The `Short` scalar type represents non-fractional signed whole 16-bit numeric values. Short can represent values between -(2^15) and 2^15 - 1."
scalar Short
