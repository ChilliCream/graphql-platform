schema {
  query: Query
}

type Bar {
  baz: String
  qux: String
}

type Query {
  foo(where: BarFilter): Bar
}

input BarFilter {
  AND: [BarFilter!]
  OR: [BarFilter!]
  baz_contains: String
  baz: String
  baz_not: String
  baz_not_contains: String
  baz_starts_with: String
  baz_not_starts_with: String
  baz_ends_with: String
  baz_not_ends_with: String
  baz_in: [String]
  baz_not_in: [String]
}

directive @tag(name: String!) repeatable on SCHEMA | SCALAR | OBJECT | FIELD_DEFINITION | ARGUMENT_DEFINITION | INTERFACE | UNION | ENUM | ENUM_VALUE | INPUT_OBJECT | INPUT_FIELD_DEFINITION
