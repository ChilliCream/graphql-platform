schema {
  query: Query
}

type Query {
  foo: String
}

input FooStringFilter {
  AND: [FooStringFilter!]
  OR: [FooStringFilter!]
  barString_some: ISingleFilterOfStringFilter
  barString_none: ISingleFilterOfStringFilter
  barString_all: ISingleFilterOfStringFilter
  barString_any: Boolean
}

input ISingleFilterOfStringFilter {
  AND: [ISingleFilterOfStringFilter!]
  OR: [ISingleFilterOfStringFilter!]
  element_contains: String
}

directive @tag(name: String!) repeatable on SCHEMA | SCALAR | OBJECT | FIELD_DEFINITION | ARGUMENT_DEFINITION | INTERFACE | UNION | ENUM | ENUM_VALUE | INPUT_OBJECT | INPUT_FIELD_DEFINITION
