schema {
  query: Query
}

type Foo {
  bar: String
}

type Query {
  foo(where: FooFilter): Foo
}

input FooFilter {
  AND: [FooFilter!]
  OR: [FooFilter!]
  bar: String
  bar_not: String
  bar_contains: String
  bar_not_contains: String
  bar_starts_with: String
  bar_not_starts_with: String
  bar_ends_with: String
  bar_not_ends_with: String
  bar_in: [String]
  bar_not_in: [String]
}

directive @tag(name: String!) repeatable on SCHEMA | SCALAR | OBJECT | FIELD_DEFINITION | ARGUMENT_DEFINITION | INTERFACE | UNION | ENUM | ENUM_VALUE | INPUT_OBJECT | INPUT_FIELD_DEFINITION
