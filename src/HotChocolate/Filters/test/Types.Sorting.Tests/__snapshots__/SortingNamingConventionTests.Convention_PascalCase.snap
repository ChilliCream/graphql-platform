schema {
  query: Query
}

type Foo {
  comparable: Short!
}

type Query {
  foo: String
}

type Test {
  foo(OrderBy: FooSort): [Foo!]!
}

input FooSort {
  comparable: SortOperationKind
}

enum SortOperationKind {
  ASC
  DESC
}

directive @tag(name: String!) repeatable on SCHEMA | SCALAR | OBJECT | FIELD_DEFINITION | ARGUMENT_DEFINITION | INTERFACE | UNION | ENUM | ENUM_VALUE | INPUT_OBJECT | INPUT_FIELD_DEFINITION

"The `Short` scalar type represents non-fractional signed whole 16-bit numeric values. Short can represent values between -(2^15) and 2^15 - 1."
scalar Short
