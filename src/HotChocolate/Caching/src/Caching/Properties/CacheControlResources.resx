<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CacheControlDirectiveType_Description" xml:space="preserve">
    <value>The `@cacheControl` directive may be provided for individual fields or entire object, interface or union types to provide caching hints to the executor.</value>
  </data>
  <data name="CacheControlDirectiveType_InheritMaxAge" xml:space="preserve">
    <value>If `true`, the field inherits the `maxAge` of its parent field.</value>
  </data>
  <data name="CacheControlDirectiveType_MaxAge" xml:space="preserve">
    <value>The maximum amount of time this field's cached value is valid, in seconds.</value>
  </data>
  <data name="CacheControlDirectiveType_SharedMaxAge" xml:space="preserve">
    <value>The maximum amount of time this field's cached value is valid in shared caches like CDNs, in seconds.</value>
  </data>
  <data name="CacheControlDirectiveType_Vary" xml:space="preserve">
    <value>The Vary HTTP response header describes the parts of the request message aside from the method and URL that influenced the content of the response it occurs in. Most often, this is used to create a cache key when content negotiation is in use.</value>
  </data>
  <data name="CacheControlDirectiveType_Scope" xml:space="preserve">
    <value>If `PRIVATE`, the field's value is specific to a single user. The default value is `PUBLIC`, which means the field's value is not tied to a single user.</value>
  </data>
  <data name="CacheControlScopeType_Description" xml:space="preserve">
    <value>The scope of a cache hint.</value>
  </data>
  <data name="CacheControlScopeType_Private" xml:space="preserve">
    <value>The value to cache is specific to a single user.</value>
  </data>
  <data name="CacheControlScopeType_Public" xml:space="preserve">
    <value>The value to cache is not tied to a single user.</value>
  </data>
  <data name="ErrorHelper_CacheControlBothMaxAgeAndInheritMaxAge" xml:space="preserve">
    <value>Can not specify `inheritMaxAge: true` and a value for `maxAge` for the @cacheControl directive on the field {0}.</value>
  </data>
  <data name="ErrorHelper_CacheControlBothSharedMaxAgeAndInheritMaxAge" xml:space="preserve">
    <value>Can not specify `inheritMaxAge: true` and a value for `sharedMaxAge` for the @cacheControl directive on the field {0}.</value>
  </data>
  <data name="ErrorHelper_CacheControlInheritMaxAgeOnQueryTypeField" xml:space="preserve">
    <value>Can not specify `inheritMaxAge: true` for the @cacheControl directive on the field {0}, since it's a field of the Query root type {1}.</value>
  </data>
  <data name="ErrorHelper_CacheControlInheritMaxAgeOnType" xml:space="preserve">
    <value>Can not specify `inheritMaxAge: true` for the @cacheControl directive on the type {0}.</value>
  </data>
  <data name="ErrorHelper_CacheControlNegativeMaxAge" xml:space="preserve">
    <value>The `maxAge` value for the @cacheControl directive on the field {0} can not be negative.</value>
  </data>
  <data name="ErrorHelper_CacheControlNegativeSharedMaxAge" xml:space="preserve">
    <value>The `sharedMaxAge` value for the @cacheControl directive on the field {0} can not be negative.</value>
  </data>
  <data name="ErrorHelper_CacheControlOnInterfaceField" xml:space="preserve">
    <value>Can not specify @cacheControl directive on interface fields, such as {0}.</value>
  </data>
  <data name="ThrowHelper_EncounteredIntrospectionField" xml:space="preserve">
    <value>CacheControlConstraints could not be computed, since query contained an introspection field.</value>
  </data>
  <data name="ThrowHelper_UnexpectedCacheControlScopeValue" xml:space="preserve">
    <value>Unexpected CacheControlScope value {0}</value>
  </data>
</root>
