<?xml version="1.0" encoding="utf-8"?>

<root>
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">

    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>1.3</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="NonNullType_InnerTypeCannotBeNonNull" xml:space="preserve">
    <value>The inner type cannot be a non-null type.</value>
  </data>
  <data name="SchemaParser_DuplicateArgumentDefinition" xml:space="preserve">
    <value>An argument with the name '{0}' has already been defined on the field '{1}'.</value>
  </data>
  <data name="SchemaParser_DuplicateDirectiveDefinition" xml:space="preserve">
    <value>A directive with the name '@{0}' has already been defined.</value>
  </data>
  <data name="SchemaParser_DuplicateFieldDefinition" xml:space="preserve">
    <value>A field with the name '{0}' has already been defined on the type '{1}'.</value>
  </data>
  <data name="SchemaParser_DuplicateInputObjectFieldDefinition" xml:space="preserve">
    <value>A field with the name '{0}' has already been defined on the Input Object type '{1}'.</value>
  </data>
  <data name="SchemaParser_DuplicateTypeDefinition" xml:space="preserve">
    <value>A type with the name '{0}' has already been defined.</value>
  </data>
  <data name="SchemaParser_InvalidArgumentType" xml:space="preserve">
    <value>The argument '{0}' must accept an input type.</value>
  </data>
  <data name="SchemaParser_InvalidFieldType" xml:space="preserve">
    <value>The field '{0}' must return an output type.</value>
  </data>
  <data name="SchemaParser_InvalidInputObjectFieldType" xml:space="preserve">
    <value>The Input Object field '{0}' must accept an input type.</value>
  </data>
  <data name="SchemaParser_InvalidUnionMemberType" xml:space="preserve">
    <value>The Union type '{0}' cannot include the type '{1}'. Unions can only contain Object types.</value>
  </data>
  <data name="TagDirective_NameArgument_Invalid" xml:space="preserve">
    <value>The @tag directive must have a 'name' argument of type String.</value>
  </data>
</root>
