//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HotChocolate.ModelContextProtocol.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class ModelContextProtocolResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ModelContextProtocolResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("HotChocolate.ModelContextProtocol.Properties.ModelContextProtocolResources", typeof(ModelContextProtocolResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The tool &apos;{0}&apos; was not found..
        /// </summary>
        internal static string CallToolHandler_ToolNotFound {
            get {
                return ResourceManager.GetString("CallToolHandler_ToolNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A tool document must contain a single operation definition..
        /// </summary>
        internal static string InMemoryMcpOperationDocumentStorage_ToolDocumentMustContainSingleOperation {
            get {
                return ResourceManager.GetString("InMemoryMcpOperationDocumentStorage_ToolDocumentMustContainSingleOperation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A tool document operation with the same name already exists..
        /// </summary>
        internal static string InMemoryMcpOperationDocumentStorage_ToolDocumentOperationAlreadyExists {
            get {
                return ResourceManager.GetString("InMemoryMcpOperationDocumentStorage_ToolDocumentOperationAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A tool document operation must be named..
        /// </summary>
        internal static string InMemoryMcpOperationDocumentStorage_ToolDocumentOperationMustBeNamed {
            get {
                return ResourceManager.GetString("InMemoryMcpOperationDocumentStorage_ToolDocumentOperationMustBeNamed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The argument `{0}` is not supported on @mcpTool..
        /// </summary>
        internal static string McpToolDirectiveParser_ArgumentNotSupportedOnMcpToolDirective {
            get {
                return ResourceManager.GetString("McpToolDirectiveParser_ArgumentNotSupportedOnMcpToolDirective", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to determine the JSON schema value type for the GraphQL type &apos;{0}&apos;..
        /// </summary>
        internal static string TypeExtensions_UnableToDetermineJsonSchemaValueType {
            get {
                return ResourceManager.GetString("TypeExtensions_UnableToDetermineJsonSchemaValueType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to find GraphQL type &apos;{0}&apos; in the schema or type map..
        /// </summary>
        internal static string TypeNodeExtensions_UnableToFindGraphQLTypeInSchemaOrTypeMap {
            get {
                return ResourceManager.GetString("TypeNodeExtensions_UnableToFindGraphQLTypeInSchemaOrTypeMap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to convert value node of type &apos;{0}&apos; to JSON node..
        /// </summary>
        internal static string ValueNodeExtensions_UnableToConvertValueNodeToJsonNode {
            get {
                return ResourceManager.GetString("ValueNodeExtensions_UnableToConvertValueNodeToJsonNode", resourceCulture);
            }
        }
    }
}
