type Address {
  zipcode: String! @external
}

type QueryRootOfUser {
  entity(id: Int!): User!
}

type User @key(fields: "id") {
  id: Int!
  idCode: String! @external
  idCodeShort: String! @requires(fields: "idCode")
  address: Address! @provides(fields: "zipcode")
}

"The @tag directive is used to apply arbitrary string\nmetadata to a schema location. Custom tooling can use\nthis metadata during any step of the schema delivery flow,\nincluding composition, static analysis, and documentation.\n            \n\ninterface Book {\n  id: ID! @tag(name: \"your-value\")\n  title: String!\n  author: String!\n}"
directive @tag("The name of the tag." name: String!) repeatable on SCALAR | OBJECT | FIELD_DEFINITION | ARGUMENT_DEFINITION | INTERFACE | UNION | ENUM | ENUM_VALUE | INPUT_OBJECT | INPUT_FIELD_DEFINITION
