type Address {
  zipcode: String! @external
}

type QueryRootOfUser {
  entity(id: Int!): User!
}

type User @key(fields: "id") {
  id: Int!
  idCode: String! @external
  idCodeShort: String! @requires(fields: "idCode")
  address: Address! @provides(fields: "zipcode")
}

directive @tag(name: String!) repeatable on SCHEMA | SCALAR | OBJECT | FIELD_DEFINITION | ARGUMENT_DEFINITION | INTERFACE | UNION | ENUM | ENUM_VALUE | INPUT_OBJECT | INPUT_FIELD_DEFINITION
