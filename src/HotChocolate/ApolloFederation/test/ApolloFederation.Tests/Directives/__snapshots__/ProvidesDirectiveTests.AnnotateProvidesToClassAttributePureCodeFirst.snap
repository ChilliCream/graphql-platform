schema {
  query: Query
}

type Product {
  name: String!
}

type Query {
  someField(id: Int!): Review!
}

type Review @key(fields: "id") {
  id: Int!
  product: Product! @provides(fields: "name")
}

"Union of all types that key directive applied. This information is needed by the Apollo federation gateway."
union _Entity = Review

"Used to indicate a combination of fields that can be used to uniquely identify and fetch an object or interface."
directive @key(fields: _FieldSet!) on OBJECT | INTERFACE

"Used to annotate the expected returned fieldset from a field on a base type that is guaranteed to be selectable by the federation gateway."
directive @provides(fields: _FieldSet!) on FIELD_DEFINITION

"The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."
scalar Int

"The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."
scalar String

"Scalar representing a set of fields."
scalar _FieldSet
