#nullable enable
HotChocolate.Stitching.Redis.RedisSchemaDefinitionPublisher
HotChocolate.Stitching.Redis.RedisSchemaDefinitionPublisher.PublishAsync(HotChocolate.Stitching.RemoteSchemaDefinition! schemaDefinition, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.ValueTask
HotChocolate.Stitching.Redis.RedisSchemaDefinitionPublisher.RedisSchemaDefinitionPublisher(HotChocolate.NameString configurationName, StackExchange.Redis.IConnectionMultiplexer! connection) -> void
Microsoft.Extensions.DependencyInjection.HotChocolateStitchingRedisPublishSchemaDefinitionDescriptorExtensions
Microsoft.Extensions.DependencyInjection.HotChocolateStitchingRedisRequestExecutorBuilderExtensions
static Microsoft.Extensions.DependencyInjection.HotChocolateStitchingRedisPublishSchemaDefinitionDescriptorExtensions.PublishToRedis(this HotChocolate.Stitching.SchemaDefinitions.IPublishSchemaDefinitionDescriptor! descriptor, HotChocolate.NameString configurationName, System.Func<System.IServiceProvider!, StackExchange.Redis.IConnectionMultiplexer!>! connectionFactory) -> HotChocolate.Stitching.SchemaDefinitions.IPublishSchemaDefinitionDescriptor!
static Microsoft.Extensions.DependencyInjection.HotChocolateStitchingRedisRequestExecutorBuilderExtensions.AddRemoteSchemasFromRedis(this HotChocolate.Execution.Configuration.IRequestExecutorBuilder! builder, HotChocolate.NameString configurationName, System.Func<System.IServiceProvider!, StackExchange.Redis.IConnectionMultiplexer!>! connectionFactory) -> HotChocolate.Execution.Configuration.IRequestExecutorBuilder!
