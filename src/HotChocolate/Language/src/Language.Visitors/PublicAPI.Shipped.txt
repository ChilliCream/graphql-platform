#nullable enable
HotChocolate.Language.Visitors.BreakSyntaxVisitorAction
HotChocolate.Language.Visitors.BreakSyntaxVisitorAction.BreakSyntaxVisitorAction() -> void
HotChocolate.Language.Visitors.BreakSyntaxVisitorAction.Kind.get -> HotChocolate.Language.Visitors.SyntaxVisitorActionKind
HotChocolate.Language.Visitors.ContinueSyntaxVisitorAction
HotChocolate.Language.Visitors.ContinueSyntaxVisitorAction.ContinueSyntaxVisitorAction() -> void
HotChocolate.Language.Visitors.ContinueSyntaxVisitorAction.Kind.get -> HotChocolate.Language.Visitors.SyntaxVisitorActionKind
HotChocolate.Language.Visitors.ISyntaxVisitor
HotChocolate.Language.Visitors.ISyntaxVisitor.Visit(HotChocolate.Language.ISyntaxNode! node, HotChocolate.Language.Visitors.ISyntaxVisitorContext! context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
HotChocolate.Language.Visitors.ISyntaxVisitor<TContext>
HotChocolate.Language.Visitors.ISyntaxVisitor<TContext>.Visit(HotChocolate.Language.ISyntaxNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
HotChocolate.Language.Visitors.ISyntaxVisitorAction
HotChocolate.Language.Visitors.ISyntaxVisitorAction.Kind.get -> HotChocolate.Language.Visitors.SyntaxVisitorActionKind
HotChocolate.Language.Visitors.ISyntaxVisitorContext
HotChocolate.Language.Visitors.SkipAndLeaveSyntaxVisitorAction
HotChocolate.Language.Visitors.SkipAndLeaveSyntaxVisitorAction.Kind.get -> HotChocolate.Language.Visitors.SyntaxVisitorActionKind
HotChocolate.Language.Visitors.SkipAndLeaveSyntaxVisitorAction.SkipAndLeaveSyntaxVisitorAction() -> void
HotChocolate.Language.Visitors.SkipSyntaxVisitorAction
HotChocolate.Language.Visitors.SkipSyntaxVisitorAction.Kind.get -> HotChocolate.Language.Visitors.SyntaxVisitorActionKind
HotChocolate.Language.Visitors.SkipSyntaxVisitorAction.SkipSyntaxVisitorAction() -> void
HotChocolate.Language.Visitors.SyntaxVisitor
HotChocolate.Language.Visitors.SyntaxVisitor.SyntaxVisitor(HotChocolate.Language.Visitors.ISyntaxVisitorAction! defaultResult, HotChocolate.Language.Visitors.SyntaxVisitorOptions options = default(HotChocolate.Language.Visitors.SyntaxVisitorOptions)) -> void
HotChocolate.Language.Visitors.SyntaxVisitor.SyntaxVisitor(HotChocolate.Language.Visitors.SyntaxVisitorOptions options = default(HotChocolate.Language.Visitors.SyntaxVisitorOptions)) -> void
HotChocolate.Language.Visitors.SyntaxVisitor<TContext>
HotChocolate.Language.Visitors.SyntaxVisitor<TContext>.Options.get -> HotChocolate.Language.Visitors.SyntaxVisitorOptions
HotChocolate.Language.Visitors.SyntaxVisitor<TContext>.SyntaxVisitor(HotChocolate.Language.Visitors.ISyntaxVisitorAction! defaultResult, HotChocolate.Language.Visitors.SyntaxVisitorOptions options = default(HotChocolate.Language.Visitors.SyntaxVisitorOptions)) -> void
HotChocolate.Language.Visitors.SyntaxVisitor<TContext>.SyntaxVisitor(HotChocolate.Language.Visitors.SyntaxVisitorOptions options = default(HotChocolate.Language.Visitors.SyntaxVisitorOptions)) -> void
HotChocolate.Language.Visitors.SyntaxVisitor<TContext>.Visit(HotChocolate.Language.ISyntaxNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
HotChocolate.Language.Visitors.SyntaxVisitor<TContext>.Visit<T, P>(T node, P parent, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
HotChocolate.Language.Visitors.SyntaxVisitorActionExtension
HotChocolate.Language.Visitors.SyntaxVisitorActionKind
HotChocolate.Language.Visitors.SyntaxVisitorActionKind.Break = 2 -> HotChocolate.Language.Visitors.SyntaxVisitorActionKind
HotChocolate.Language.Visitors.SyntaxVisitorActionKind.Continue = 0 -> HotChocolate.Language.Visitors.SyntaxVisitorActionKind
HotChocolate.Language.Visitors.SyntaxVisitorActionKind.Skip = 1 -> HotChocolate.Language.Visitors.SyntaxVisitorActionKind
HotChocolate.Language.Visitors.SyntaxVisitorActionKind.SkipAndLeave = 3 -> HotChocolate.Language.Visitors.SyntaxVisitorActionKind
HotChocolate.Language.Visitors.SyntaxVisitorExtensions
HotChocolate.Language.Visitors.SyntaxVisitorOptions
HotChocolate.Language.Visitors.SyntaxVisitorOptions.SyntaxVisitorOptions() -> void
HotChocolate.Language.Visitors.SyntaxVisitorOptions.VisitArguments.get -> bool
HotChocolate.Language.Visitors.SyntaxVisitorOptions.VisitArguments.set -> void
HotChocolate.Language.Visitors.SyntaxVisitorOptions.VisitDescriptions.get -> bool
HotChocolate.Language.Visitors.SyntaxVisitorOptions.VisitDescriptions.set -> void
HotChocolate.Language.Visitors.SyntaxVisitorOptions.VisitDirectives.get -> bool
HotChocolate.Language.Visitors.SyntaxVisitorOptions.VisitDirectives.set -> void
HotChocolate.Language.Visitors.SyntaxVisitorOptions.VisitNames.get -> bool
HotChocolate.Language.Visitors.SyntaxVisitorOptions.VisitNames.set -> void
HotChocolate.Language.Visitors.SyntaxWalker
HotChocolate.Language.Visitors.SyntaxWalker.SyntaxWalker(HotChocolate.Language.Visitors.ISyntaxVisitorAction! defaultResult, HotChocolate.Language.Visitors.SyntaxVisitorOptions options = default(HotChocolate.Language.Visitors.SyntaxVisitorOptions)) -> void
HotChocolate.Language.Visitors.SyntaxWalker.SyntaxWalker(HotChocolate.Language.Visitors.SyntaxVisitorOptions options = default(HotChocolate.Language.Visitors.SyntaxVisitorOptions)) -> void
HotChocolate.Language.Visitors.SyntaxWalker<TContext>
HotChocolate.Language.Visitors.SyntaxWalker<TContext>.SyntaxWalker(HotChocolate.Language.Visitors.ISyntaxVisitorAction! defaultResult, HotChocolate.Language.Visitors.SyntaxVisitorOptions options = default(HotChocolate.Language.Visitors.SyntaxVisitorOptions)) -> void
HotChocolate.Language.Visitors.SyntaxWalker<TContext>.SyntaxWalker(HotChocolate.Language.Visitors.SyntaxVisitorOptions options = default(HotChocolate.Language.Visitors.SyntaxVisitorOptions)) -> void
HotChocolate.Language.Visitors.VisitSyntaxNode
override HotChocolate.Language.Visitors.SyntaxWalker.Enter(HotChocolate.Language.ISyntaxNode! node, HotChocolate.Language.Visitors.ISyntaxVisitorContext! context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
override HotChocolate.Language.Visitors.SyntaxWalker.Leave(HotChocolate.Language.ISyntaxNode! node, HotChocolate.Language.Visitors.ISyntaxVisitorContext! context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
override HotChocolate.Language.Visitors.SyntaxWalker<TContext>.Enter(HotChocolate.Language.ISyntaxNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
override HotChocolate.Language.Visitors.SyntaxWalker<TContext>.Leave(HotChocolate.Language.ISyntaxNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
static HotChocolate.Language.Visitors.SyntaxVisitor.Create(HotChocolate.Language.Visitors.VisitSyntaxNode? enter = null, HotChocolate.Language.Visitors.VisitSyntaxNode? leave = null, HotChocolate.Language.Visitors.ISyntaxVisitorAction? defaultAction = null, HotChocolate.Language.Visitors.SyntaxVisitorOptions options = default(HotChocolate.Language.Visitors.SyntaxVisitorOptions)) -> HotChocolate.Language.Visitors.ISyntaxVisitor!
static HotChocolate.Language.Visitors.SyntaxVisitor.Create(System.Func<HotChocolate.Language.ISyntaxNode!, HotChocolate.Language.Visitors.ISyntaxVisitorAction!>? enter = null, System.Func<HotChocolate.Language.ISyntaxNode!, HotChocolate.Language.Visitors.ISyntaxVisitorAction!>? leave = null, HotChocolate.Language.Visitors.ISyntaxVisitorAction? defaultAction = null, HotChocolate.Language.Visitors.SyntaxVisitorOptions options = default(HotChocolate.Language.Visitors.SyntaxVisitorOptions)) -> HotChocolate.Language.Visitors.ISyntaxVisitor!
static HotChocolate.Language.Visitors.SyntaxVisitor<TContext>.Break.get -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
static HotChocolate.Language.Visitors.SyntaxVisitor<TContext>.Continue.get -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
static HotChocolate.Language.Visitors.SyntaxVisitor<TContext>.Skip.get -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
static HotChocolate.Language.Visitors.SyntaxVisitor<TContext>.SkipAndLeave.get -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
static HotChocolate.Language.Visitors.SyntaxVisitorActionExtension.IsBreak(this HotChocolate.Language.Visitors.ISyntaxVisitorAction! action) -> bool
static HotChocolate.Language.Visitors.SyntaxVisitorActionExtension.IsContinue(this HotChocolate.Language.Visitors.ISyntaxVisitorAction! action) -> bool
static HotChocolate.Language.Visitors.SyntaxVisitorActionExtension.IsSkip(this HotChocolate.Language.Visitors.ISyntaxVisitorAction! action) -> bool
static HotChocolate.Language.Visitors.SyntaxVisitorExtensions.Visit(this HotChocolate.Language.Visitors.ISyntaxVisitor! visitor, HotChocolate.Language.ISyntaxNode! node) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxVisitor<TContext>.DefaultAction.get -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxVisitor<TContext>.Enter(HotChocolate.Language.ISyntaxNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxVisitor<TContext>.Leave(HotChocolate.Language.ISyntaxNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxVisitor<TContext>.OnAfterEnter(HotChocolate.Language.ISyntaxNode! node, HotChocolate.Language.ISyntaxNode? parent, TContext context, HotChocolate.Language.Visitors.ISyntaxVisitorAction! action) -> TContext
virtual HotChocolate.Language.Visitors.SyntaxVisitor<TContext>.OnAfterLeave(HotChocolate.Language.ISyntaxNode! node, HotChocolate.Language.ISyntaxNode? parent, TContext context, HotChocolate.Language.Visitors.ISyntaxVisitorAction! action) -> TContext
virtual HotChocolate.Language.Visitors.SyntaxVisitor<TContext>.OnBeforeEnter(HotChocolate.Language.ISyntaxNode! node, HotChocolate.Language.ISyntaxNode? parent, TContext context) -> TContext
virtual HotChocolate.Language.Visitors.SyntaxVisitor<TContext>.OnBeforeLeave(HotChocolate.Language.ISyntaxNode! node, HotChocolate.Language.ISyntaxNode? parent, TContext context) -> TContext
virtual HotChocolate.Language.Visitors.SyntaxVisitor<TContext>.VisitChildren(HotChocolate.Language.ArgumentNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxVisitor<TContext>.VisitChildren(HotChocolate.Language.DirectiveDefinitionNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxVisitor<TContext>.VisitChildren(HotChocolate.Language.DirectiveNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxVisitor<TContext>.VisitChildren(HotChocolate.Language.DocumentNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxVisitor<TContext>.VisitChildren(HotChocolate.Language.EnumTypeDefinitionNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxVisitor<TContext>.VisitChildren(HotChocolate.Language.EnumTypeExtensionNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxVisitor<TContext>.VisitChildren(HotChocolate.Language.EnumValueDefinitionNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxVisitor<TContext>.VisitChildren(HotChocolate.Language.FieldDefinitionNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxVisitor<TContext>.VisitChildren(HotChocolate.Language.FieldNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxVisitor<TContext>.VisitChildren(HotChocolate.Language.FragmentDefinitionNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxVisitor<TContext>.VisitChildren(HotChocolate.Language.FragmentSpreadNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxVisitor<TContext>.VisitChildren(HotChocolate.Language.InlineFragmentNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxVisitor<TContext>.VisitChildren(HotChocolate.Language.InputObjectTypeDefinitionNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxVisitor<TContext>.VisitChildren(HotChocolate.Language.InputObjectTypeExtensionNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxVisitor<TContext>.VisitChildren(HotChocolate.Language.InputValueDefinitionNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxVisitor<TContext>.VisitChildren(HotChocolate.Language.InterfaceTypeDefinitionNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxVisitor<TContext>.VisitChildren(HotChocolate.Language.InterfaceTypeExtensionNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxVisitor<TContext>.VisitChildren(HotChocolate.Language.ISyntaxNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxVisitor<TContext>.VisitChildren(HotChocolate.Language.ListTypeNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxVisitor<TContext>.VisitChildren(HotChocolate.Language.ListValueNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxVisitor<TContext>.VisitChildren(HotChocolate.Language.NamedTypeNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxVisitor<TContext>.VisitChildren(HotChocolate.Language.NonNullTypeNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxVisitor<TContext>.VisitChildren(HotChocolate.Language.ObjectFieldNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxVisitor<TContext>.VisitChildren(HotChocolate.Language.ObjectTypeDefinitionNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxVisitor<TContext>.VisitChildren(HotChocolate.Language.ObjectTypeExtensionNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxVisitor<TContext>.VisitChildren(HotChocolate.Language.ObjectValueNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxVisitor<TContext>.VisitChildren(HotChocolate.Language.OperationDefinitionNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxVisitor<TContext>.VisitChildren(HotChocolate.Language.OperationTypeDefinitionNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxVisitor<TContext>.VisitChildren(HotChocolate.Language.ScalarTypeDefinitionNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxVisitor<TContext>.VisitChildren(HotChocolate.Language.ScalarTypeExtensionNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxVisitor<TContext>.VisitChildren(HotChocolate.Language.SchemaDefinitionNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxVisitor<TContext>.VisitChildren(HotChocolate.Language.SchemaExtensionNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxVisitor<TContext>.VisitChildren(HotChocolate.Language.SelectionSetNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxVisitor<TContext>.VisitChildren(HotChocolate.Language.UnionTypeDefinitionNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxVisitor<TContext>.VisitChildren(HotChocolate.Language.UnionTypeExtensionNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxVisitor<TContext>.VisitChildren(HotChocolate.Language.VariableDefinitionNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxVisitor<TContext>.VisitChildren(HotChocolate.Language.VariableNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker.Enter(HotChocolate.Language.ArgumentNode! node, HotChocolate.Language.Visitors.ISyntaxVisitorContext! context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker.Enter(HotChocolate.Language.DirectiveDefinitionNode! node, HotChocolate.Language.Visitors.ISyntaxVisitorContext! context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker.Enter(HotChocolate.Language.DirectiveNode! node, HotChocolate.Language.Visitors.ISyntaxVisitorContext! context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker.Enter(HotChocolate.Language.DocumentNode! node, HotChocolate.Language.Visitors.ISyntaxVisitorContext! context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker.Enter(HotChocolate.Language.EnumTypeDefinitionNode! node, HotChocolate.Language.Visitors.ISyntaxVisitorContext! context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker.Enter(HotChocolate.Language.EnumTypeExtensionNode! node, HotChocolate.Language.Visitors.ISyntaxVisitorContext! context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker.Enter(HotChocolate.Language.EnumValueDefinitionNode! node, HotChocolate.Language.Visitors.ISyntaxVisitorContext! context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker.Enter(HotChocolate.Language.FieldDefinitionNode! node, HotChocolate.Language.Visitors.ISyntaxVisitorContext! context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker.Enter(HotChocolate.Language.FieldNode! node, HotChocolate.Language.Visitors.ISyntaxVisitorContext! context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker.Enter(HotChocolate.Language.FragmentDefinitionNode! node, HotChocolate.Language.Visitors.ISyntaxVisitorContext! context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker.Enter(HotChocolate.Language.FragmentSpreadNode! node, HotChocolate.Language.Visitors.ISyntaxVisitorContext! context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker.Enter(HotChocolate.Language.InlineFragmentNode! node, HotChocolate.Language.Visitors.ISyntaxVisitorContext! context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker.Enter(HotChocolate.Language.InputObjectTypeDefinitionNode! node, HotChocolate.Language.Visitors.ISyntaxVisitorContext! context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker.Enter(HotChocolate.Language.InputObjectTypeExtensionNode! node, HotChocolate.Language.Visitors.ISyntaxVisitorContext! context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker.Enter(HotChocolate.Language.InputValueDefinitionNode! node, HotChocolate.Language.Visitors.ISyntaxVisitorContext! context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker.Enter(HotChocolate.Language.InterfaceTypeDefinitionNode! node, HotChocolate.Language.Visitors.ISyntaxVisitorContext! context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker.Enter(HotChocolate.Language.InterfaceTypeExtensionNode! node, HotChocolate.Language.Visitors.ISyntaxVisitorContext! context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker.Enter(HotChocolate.Language.IValueNode! node, HotChocolate.Language.Visitors.ISyntaxVisitorContext! context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker.Enter(HotChocolate.Language.ListTypeNode! node, HotChocolate.Language.Visitors.ISyntaxVisitorContext! context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker.Enter(HotChocolate.Language.ListValueNode! node, HotChocolate.Language.Visitors.ISyntaxVisitorContext! context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker.Enter(HotChocolate.Language.NamedTypeNode! node, HotChocolate.Language.Visitors.ISyntaxVisitorContext! context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker.Enter(HotChocolate.Language.NameNode! node, HotChocolate.Language.Visitors.ISyntaxVisitorContext! context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker.Enter(HotChocolate.Language.NonNullTypeNode! node, HotChocolate.Language.Visitors.ISyntaxVisitorContext! context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker.Enter(HotChocolate.Language.ObjectFieldNode! node, HotChocolate.Language.Visitors.ISyntaxVisitorContext! context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker.Enter(HotChocolate.Language.ObjectTypeDefinitionNode! node, HotChocolate.Language.Visitors.ISyntaxVisitorContext! context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker.Enter(HotChocolate.Language.ObjectTypeExtensionNode! node, HotChocolate.Language.Visitors.ISyntaxVisitorContext! context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker.Enter(HotChocolate.Language.ObjectValueNode! node, HotChocolate.Language.Visitors.ISyntaxVisitorContext! context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker.Enter(HotChocolate.Language.OperationDefinitionNode! node, HotChocolate.Language.Visitors.ISyntaxVisitorContext! context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker.Enter(HotChocolate.Language.OperationTypeDefinitionNode! node, HotChocolate.Language.Visitors.ISyntaxVisitorContext! context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker.Enter(HotChocolate.Language.ScalarTypeDefinitionNode! node, HotChocolate.Language.Visitors.ISyntaxVisitorContext! context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker.Enter(HotChocolate.Language.ScalarTypeExtensionNode! node, HotChocolate.Language.Visitors.ISyntaxVisitorContext! context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker.Enter(HotChocolate.Language.SchemaDefinitionNode! node, HotChocolate.Language.Visitors.ISyntaxVisitorContext! context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker.Enter(HotChocolate.Language.SchemaExtensionNode! node, HotChocolate.Language.Visitors.ISyntaxVisitorContext! context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker.Enter(HotChocolate.Language.SelectionSetNode! node, HotChocolate.Language.Visitors.ISyntaxVisitorContext! context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker.Enter(HotChocolate.Language.UnionTypeDefinitionNode! node, HotChocolate.Language.Visitors.ISyntaxVisitorContext! context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker.Enter(HotChocolate.Language.UnionTypeExtensionNode! node, HotChocolate.Language.Visitors.ISyntaxVisitorContext! context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker.Enter(HotChocolate.Language.VariableDefinitionNode! node, HotChocolate.Language.Visitors.ISyntaxVisitorContext! context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker.Enter(HotChocolate.Language.VariableNode! node, HotChocolate.Language.Visitors.ISyntaxVisitorContext! context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker.Leave(HotChocolate.Language.ArgumentNode! node, HotChocolate.Language.Visitors.ISyntaxVisitorContext! context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker.Leave(HotChocolate.Language.DirectiveDefinitionNode! node, HotChocolate.Language.Visitors.ISyntaxVisitorContext! context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker.Leave(HotChocolate.Language.DirectiveNode! node, HotChocolate.Language.Visitors.ISyntaxVisitorContext! context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker.Leave(HotChocolate.Language.DocumentNode! node, HotChocolate.Language.Visitors.ISyntaxVisitorContext! context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker.Leave(HotChocolate.Language.EnumTypeDefinitionNode! node, HotChocolate.Language.Visitors.ISyntaxVisitorContext! context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker.Leave(HotChocolate.Language.EnumTypeExtensionNode! node, HotChocolate.Language.Visitors.ISyntaxVisitorContext! context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker.Leave(HotChocolate.Language.EnumValueDefinitionNode! node, HotChocolate.Language.Visitors.ISyntaxVisitorContext! context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker.Leave(HotChocolate.Language.FieldDefinitionNode! node, HotChocolate.Language.Visitors.ISyntaxVisitorContext! context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker.Leave(HotChocolate.Language.FieldNode! node, HotChocolate.Language.Visitors.ISyntaxVisitorContext! context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker.Leave(HotChocolate.Language.FragmentDefinitionNode! node, HotChocolate.Language.Visitors.ISyntaxVisitorContext! context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker.Leave(HotChocolate.Language.FragmentSpreadNode! node, HotChocolate.Language.Visitors.ISyntaxVisitorContext! context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker.Leave(HotChocolate.Language.InlineFragmentNode! node, HotChocolate.Language.Visitors.ISyntaxVisitorContext! context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker.Leave(HotChocolate.Language.InputObjectTypeDefinitionNode! node, HotChocolate.Language.Visitors.ISyntaxVisitorContext! context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker.Leave(HotChocolate.Language.InputObjectTypeExtensionNode! node, HotChocolate.Language.Visitors.ISyntaxVisitorContext! context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker.Leave(HotChocolate.Language.InputValueDefinitionNode! node, HotChocolate.Language.Visitors.ISyntaxVisitorContext! context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker.Leave(HotChocolate.Language.InterfaceTypeDefinitionNode! node, HotChocolate.Language.Visitors.ISyntaxVisitorContext! context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker.Leave(HotChocolate.Language.InterfaceTypeExtensionNode! node, HotChocolate.Language.Visitors.ISyntaxVisitorContext! context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker.Leave(HotChocolate.Language.IValueNode! node, HotChocolate.Language.Visitors.ISyntaxVisitorContext! context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker.Leave(HotChocolate.Language.ListTypeNode! node, HotChocolate.Language.Visitors.ISyntaxVisitorContext! context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker.Leave(HotChocolate.Language.ListValueNode! node, HotChocolate.Language.Visitors.ISyntaxVisitorContext! context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker.Leave(HotChocolate.Language.NamedTypeNode! node, HotChocolate.Language.Visitors.ISyntaxVisitorContext! context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker.Leave(HotChocolate.Language.NameNode! node, HotChocolate.Language.Visitors.ISyntaxVisitorContext! context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker.Leave(HotChocolate.Language.NonNullTypeNode! node, HotChocolate.Language.Visitors.ISyntaxVisitorContext! context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker.Leave(HotChocolate.Language.ObjectFieldNode! node, HotChocolate.Language.Visitors.ISyntaxVisitorContext! context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker.Leave(HotChocolate.Language.ObjectTypeDefinitionNode! node, HotChocolate.Language.Visitors.ISyntaxVisitorContext! context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker.Leave(HotChocolate.Language.ObjectTypeExtensionNode! node, HotChocolate.Language.Visitors.ISyntaxVisitorContext! context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker.Leave(HotChocolate.Language.ObjectValueNode! node, HotChocolate.Language.Visitors.ISyntaxVisitorContext! context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker.Leave(HotChocolate.Language.OperationDefinitionNode! node, HotChocolate.Language.Visitors.ISyntaxVisitorContext! context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker.Leave(HotChocolate.Language.OperationTypeDefinitionNode! node, HotChocolate.Language.Visitors.ISyntaxVisitorContext! context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker.Leave(HotChocolate.Language.ScalarTypeDefinitionNode! node, HotChocolate.Language.Visitors.ISyntaxVisitorContext! context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker.Leave(HotChocolate.Language.ScalarTypeExtensionNode! node, HotChocolate.Language.Visitors.ISyntaxVisitorContext! context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker.Leave(HotChocolate.Language.SchemaDefinitionNode! node, HotChocolate.Language.Visitors.ISyntaxVisitorContext! context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker.Leave(HotChocolate.Language.SchemaExtensionNode! node, HotChocolate.Language.Visitors.ISyntaxVisitorContext! context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker.Leave(HotChocolate.Language.SelectionSetNode! node, HotChocolate.Language.Visitors.ISyntaxVisitorContext! context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker.Leave(HotChocolate.Language.UnionTypeDefinitionNode! node, HotChocolate.Language.Visitors.ISyntaxVisitorContext! context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker.Leave(HotChocolate.Language.UnionTypeExtensionNode! node, HotChocolate.Language.Visitors.ISyntaxVisitorContext! context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker.Leave(HotChocolate.Language.VariableDefinitionNode! node, HotChocolate.Language.Visitors.ISyntaxVisitorContext! context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker.Leave(HotChocolate.Language.VariableNode! node, HotChocolate.Language.Visitors.ISyntaxVisitorContext! context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker<TContext>.Enter(HotChocolate.Language.ArgumentNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker<TContext>.Enter(HotChocolate.Language.DirectiveDefinitionNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker<TContext>.Enter(HotChocolate.Language.DirectiveNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker<TContext>.Enter(HotChocolate.Language.DocumentNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker<TContext>.Enter(HotChocolate.Language.EnumTypeDefinitionNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker<TContext>.Enter(HotChocolate.Language.EnumTypeExtensionNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker<TContext>.Enter(HotChocolate.Language.EnumValueDefinitionNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker<TContext>.Enter(HotChocolate.Language.FieldDefinitionNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker<TContext>.Enter(HotChocolate.Language.FieldNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker<TContext>.Enter(HotChocolate.Language.FragmentDefinitionNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker<TContext>.Enter(HotChocolate.Language.FragmentSpreadNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker<TContext>.Enter(HotChocolate.Language.InlineFragmentNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker<TContext>.Enter(HotChocolate.Language.InputObjectTypeDefinitionNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker<TContext>.Enter(HotChocolate.Language.InputObjectTypeExtensionNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker<TContext>.Enter(HotChocolate.Language.InputValueDefinitionNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker<TContext>.Enter(HotChocolate.Language.InterfaceTypeDefinitionNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker<TContext>.Enter(HotChocolate.Language.InterfaceTypeExtensionNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker<TContext>.Enter(HotChocolate.Language.IValueNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker<TContext>.Enter(HotChocolate.Language.ListTypeNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker<TContext>.Enter(HotChocolate.Language.ListValueNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker<TContext>.Enter(HotChocolate.Language.NamedTypeNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker<TContext>.Enter(HotChocolate.Language.NameNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker<TContext>.Enter(HotChocolate.Language.NonNullTypeNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker<TContext>.Enter(HotChocolate.Language.ObjectFieldNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker<TContext>.Enter(HotChocolate.Language.ObjectTypeDefinitionNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker<TContext>.Enter(HotChocolate.Language.ObjectTypeExtensionNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker<TContext>.Enter(HotChocolate.Language.ObjectValueNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker<TContext>.Enter(HotChocolate.Language.OperationDefinitionNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker<TContext>.Enter(HotChocolate.Language.OperationTypeDefinitionNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker<TContext>.Enter(HotChocolate.Language.ScalarTypeDefinitionNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker<TContext>.Enter(HotChocolate.Language.ScalarTypeExtensionNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker<TContext>.Enter(HotChocolate.Language.SchemaDefinitionNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker<TContext>.Enter(HotChocolate.Language.SchemaExtensionNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker<TContext>.Enter(HotChocolate.Language.SelectionSetNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker<TContext>.Enter(HotChocolate.Language.UnionTypeDefinitionNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker<TContext>.Enter(HotChocolate.Language.UnionTypeExtensionNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker<TContext>.Enter(HotChocolate.Language.VariableDefinitionNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker<TContext>.Enter(HotChocolate.Language.VariableNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker<TContext>.Leave(HotChocolate.Language.ArgumentNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker<TContext>.Leave(HotChocolate.Language.DirectiveDefinitionNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker<TContext>.Leave(HotChocolate.Language.DirectiveNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker<TContext>.Leave(HotChocolate.Language.DocumentNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker<TContext>.Leave(HotChocolate.Language.EnumTypeDefinitionNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker<TContext>.Leave(HotChocolate.Language.EnumTypeExtensionNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker<TContext>.Leave(HotChocolate.Language.EnumValueDefinitionNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker<TContext>.Leave(HotChocolate.Language.FieldDefinitionNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker<TContext>.Leave(HotChocolate.Language.FieldNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker<TContext>.Leave(HotChocolate.Language.FragmentDefinitionNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker<TContext>.Leave(HotChocolate.Language.FragmentSpreadNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker<TContext>.Leave(HotChocolate.Language.InlineFragmentNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker<TContext>.Leave(HotChocolate.Language.InputObjectTypeDefinitionNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker<TContext>.Leave(HotChocolate.Language.InputObjectTypeExtensionNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker<TContext>.Leave(HotChocolate.Language.InputValueDefinitionNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker<TContext>.Leave(HotChocolate.Language.InterfaceTypeDefinitionNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker<TContext>.Leave(HotChocolate.Language.InterfaceTypeExtensionNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker<TContext>.Leave(HotChocolate.Language.IValueNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker<TContext>.Leave(HotChocolate.Language.ListTypeNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker<TContext>.Leave(HotChocolate.Language.ListValueNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker<TContext>.Leave(HotChocolate.Language.NamedTypeNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker<TContext>.Leave(HotChocolate.Language.NameNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker<TContext>.Leave(HotChocolate.Language.NonNullTypeNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker<TContext>.Leave(HotChocolate.Language.ObjectFieldNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker<TContext>.Leave(HotChocolate.Language.ObjectTypeDefinitionNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker<TContext>.Leave(HotChocolate.Language.ObjectTypeExtensionNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker<TContext>.Leave(HotChocolate.Language.ObjectValueNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker<TContext>.Leave(HotChocolate.Language.OperationDefinitionNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker<TContext>.Leave(HotChocolate.Language.OperationTypeDefinitionNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker<TContext>.Leave(HotChocolate.Language.ScalarTypeDefinitionNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker<TContext>.Leave(HotChocolate.Language.ScalarTypeExtensionNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker<TContext>.Leave(HotChocolate.Language.SchemaDefinitionNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker<TContext>.Leave(HotChocolate.Language.SchemaExtensionNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker<TContext>.Leave(HotChocolate.Language.SelectionSetNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker<TContext>.Leave(HotChocolate.Language.UnionTypeDefinitionNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker<TContext>.Leave(HotChocolate.Language.UnionTypeExtensionNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker<TContext>.Leave(HotChocolate.Language.VariableDefinitionNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
virtual HotChocolate.Language.Visitors.SyntaxWalker<TContext>.Leave(HotChocolate.Language.VariableNode! node, TContext context) -> HotChocolate.Language.Visitors.ISyntaxVisitorAction!
