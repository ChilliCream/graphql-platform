schema {
  query: Query
}

type Query {
  fruitById(id: ID!): Fruit
    @lookup
  personByAddressId(id: ID!
    @is(field: "address.id")): Person
    @lookup
  personById(id: ID!): Person
    @lookup
  petById(id: ID!): Pet
    @lookup
  productById(id: ID!): Product
    @lookup
  productByIdAgain(id: ID!): Product
    @lookup
  productByIdAndCategoryId(categoryId: Int id: ID!): Product
    @lookup
}

type Address {
  id: ID!
}

type Apple
  @key(fields: "id") {
  id: ID!
}

type Cat implements Pet
  @key(fields: "id") {
  id: ID!
}

type Dog implements Pet
  @key(fields: "id") {
  id: ID!
}

type Orange
  @key(fields: "id") {
  id: ID!
}

type Person
  @key(fields: "id")
  @key(fields: "address { id }") {
  address: Address!
  id: ID!
}

type Product
  @key(fields: "id")
  @key(fields: "id categoryId") {
  categoryId: Int
  id: ID!
}

interface Pet
  @key(fields: "id") {
  id: ID!
}

union Fruit = Apple | Orange
