name: Field_Below_Shared_Field_Only_Available_On_One_Subgraph_Type_Of_Shared_Field_Not_Node_2
request:
  document: >-
    query(
      $productId: ID!
    ) {
      productById(id: $productId) {
        subgraph1Only {
          subgraph2Only
          sharedLinked {
            subgraph2Only
            sharedScalar
          }
        }
      }
    }
  variables: >-
    {
      "productId": "UHJvZHVjdAppMzg2MzE4NTk="
    }
response: >-
  {
    "data": {
      "productById": {
        "subgraph1Only": {
          "subgraph2Only": true,
          "sharedLinked": {
            "subgraph2Only": true,
            "sharedScalar": "ProductAvailabilityMail: UHJvZHVjdEF2YWlsYWJpbGl0eU1haWw6Mg=="
          }
        }
      }
    }
  }
sourceSchemas:
  - name: A
    schema: >-
      schema {
        query: Query
      }
      
      interface Node {
        id: ID!
      }
      
      type Product implements Node {
        id: ID!
        subgraph1Only: ProductAvailability
      }
      
      type ProductAvailability implements Node {
        id: ID!
        sharedLinked: ProductAvailabilityMail!
      }
      
      type ProductAvailabilityMail {
        sharedScalar: String!
      }
      
      type Query {
        node(id: ID!): Node @lookup
        productById(id: ID!): Product @lookup
        productAvailabilityById(id: ID!): ProductAvailability @lookup
      }
    interactions:
      - request: {"query":"query Op_90079d4b_1(\n  $productId: ID!\n) {\n  productById(id: $productId) {\n    subgraph1Only {\n      sharedLinked {\n        sharedScalar\n      }\n      id\n    }\n  }\n}","variables":{"productId":"UHJvZHVjdAppMzg2MzE4NTk="}}
        response: {"data":{"productById":{"subgraph1Only":{"sharedLinked":{"sharedScalar":"ProductAvailabilityMail: UHJvZHVjdEF2YWlsYWJpbGl0eU1haWw6Mg=="},"id":"UHJvZHVjdEF2YWlsYWJpbGl0eTox"}}}}
  - name: B
    schema: >-
      schema {
        query: Query
      }
      
      interface Node {
        id: ID!
      }
      
      type ProductAvailability implements Node {
        sharedLinked: ProductAvailabilityMail!
        subgraph2Only: Boolean!
        id: ID!
      }
      
      type ProductAvailabilityMail {
        subgraph2Only: Boolean!
        sharedScalar: String!
      }
      
      type Query {
        node(id: ID!): Node @lookup
        productAvailabilityById(id: ID!): ProductAvailability @lookup
      }
    interactions:
      - request: {"query":"query Op_90079d4b_2(\n  $__fusion_1_id: ID!\n) {\n  productAvailabilityById(id: $__fusion_1_id) {\n    subgraph2Only\n  }\n}","variables":{"__fusion_1_id":"UHJvZHVjdEF2YWlsYWJpbGl0eTox"}}
        response: {"data":{"productAvailabilityById":{"subgraph2Only":true}}}
      - request: {"query":"query Op_90079d4b_3(\n  $__fusion_2_id: ID!\n) {\n  productAvailabilityById(id: $__fusion_2_id) {\n    sharedLinked {\n      subgraph2Only\n    }\n  }\n}","variables":{"__fusion_2_id":"UHJvZHVjdEF2YWlsYWJpbGl0eTox"}}
        response: {"data":{"productAvailabilityById":{"sharedLinked":{"subgraph2Only":true}}}}
