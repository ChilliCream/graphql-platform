title: Field_Below_Shared_Field_Only_Available_On_One_Subgraph_Type_Of_Shared_Field_Not_Node_2
request:
  document: |
    query(
      $productId: ID!
    ) {
      productById(id: $productId) {
        subgraph1Only {
          subgraph2Only
          sharedLinked {
            subgraph2Only
            sharedScalar
          }
        }
      }
    }
  variables: |
    {
      "productId": "UHJvZHVjdAppMzg2MzE4NTk="
    }
response:
  body: |
    {
      "data": {
        "productById": {
          "subgraph1Only": {
            "subgraph2Only": true,
            "sharedLinked": {
              "subgraph2Only": true,
              "sharedScalar": "ProductAvailabilityMail: UHJvZHVjdEF2YWlsYWJpbGl0eU1haWw6Mg=="
            }
          }
        }
      }
    }
sourceSchemas:
  - name: A
    schema: |
      schema {
        query: Query
      }
      
      interface Node {
        id: ID!
      }
      
      type Product implements Node {
        id: ID!
        subgraph1Only: ProductAvailability
      }
      
      type ProductAvailability implements Node {
        id: ID!
        sharedLinked: ProductAvailabilityMail!
      }
      
      type ProductAvailabilityMail {
        sharedScalar: String!
      }
      
      type Query {
        node(id: ID!): Node @lookup
        productById(id: ID!): Product @lookup
        productAvailabilityById(id: ID!): ProductAvailability @lookup
      }
    interactions:
      - request:
          body: |
            {"query":"query Op_90079d4b_1(\n  $productId: ID!\n) {\n  productById(id: $productId) {\n    subgraph1Only {\n      sharedLinked {\n        sharedScalar\n      }\n      id\n    }\n  }\n}","variables":{"productId":"UHJvZHVjdAppMzg2MzE4NTk="}}
        response:
          results:
            - |
              {
                "data": {
                  "productById": {
                    "subgraph1Only": {
                      "sharedLinked": {
                        "sharedScalar": "ProductAvailabilityMail: UHJvZHVjdEF2YWlsYWJpbGl0eU1haWw6Mg=="
                      },
                      "id": "UHJvZHVjdEF2YWlsYWJpbGl0eTox"
                    }
                  }
                }
              }
  - name: B
    schema: |
      schema {
        query: Query
      }
      
      interface Node {
        id: ID!
      }
      
      type ProductAvailability implements Node {
        sharedLinked: ProductAvailabilityMail!
        subgraph2Only: Boolean!
        id: ID!
      }
      
      type ProductAvailabilityMail {
        subgraph2Only: Boolean!
        sharedScalar: String!
      }
      
      type Query {
        node(id: ID!): Node @lookup
        productAvailabilityById(id: ID!): ProductAvailability @lookup
      }
    interactions:
      - request:
          body: |
            {"query":"query Op_90079d4b_2(\n  $__fusion_1_id: ID!\n) {\n  productAvailabilityById(id: $__fusion_1_id) {\n    subgraph2Only\n  }\n}","variables":{"__fusion_1_id":"UHJvZHVjdEF2YWlsYWJpbGl0eTox"}}
        response:
          results:
            - |
              {
                "data": {
                  "productAvailabilityById": {
                    "subgraph2Only": true
                  }
                }
              }
      - request:
          body: |
            {"query":"query Op_90079d4b_3(\n  $__fusion_2_id: ID!\n) {\n  productAvailabilityById(id: $__fusion_2_id) {\n    sharedLinked {\n      subgraph2Only\n    }\n  }\n}","variables":{"__fusion_2_id":"UHJvZHVjdEF2YWlsYWJpbGl0eTox"}}
        response:
          results:
            - |
              {
                "data": {
                  "productAvailabilityById": {
                    "sharedLinked": {
                      "subgraph2Only": true
                    }
                  }
                }
              }
operationPlan:
  operation:
    - document: |
        query(
          $productId: ID!
        ) {
          productById(id: $productId) {
            subgraph1Only {
              subgraph2Only
              sharedLinked {
                subgraph2Only
                sharedScalar
              }
              id @fusion__requirement
            }
          }
        }
      hash: 90079d4b5c5cadf6c4ff7cd99819d1cd
      searchSpace: 1
  nodes:
    - id: 1
      type: Operation
      schema: A
      operation: |
        query Op_90079d4b_1(
          $productId: ID!
        ) {
          productById(id: $productId) {
            subgraph1Only {
              sharedLinked {
                sharedScalar
              }
              id
            }
          }
        }
    - id: 2
      type: Operation
      schema: B
      operation: |
        query Op_90079d4b_2(
          $__fusion_1_id: ID!
        ) {
          productAvailabilityById(id: $__fusion_1_id) {
            subgraph2Only
          }
        }
      source: $.productAvailabilityById
      target: $.productById.subgraph1Only
      requirements:
        - name: __fusion_1_id
          selectionMap: >-
            id
      dependencies:
        - id: 1
    - id: 3
      type: Operation
      schema: B
      operation: |
        query Op_90079d4b_3(
          $__fusion_2_id: ID!
        ) {
          productAvailabilityById(id: $__fusion_2_id) {
            sharedLinked {
              subgraph2Only
            }
          }
        }
      source: $.productAvailabilityById
      target: $.productById.subgraph1Only
      requirements:
        - name: __fusion_2_id
          selectionMap: >-
            id
      dependencies:
        - id: 1
