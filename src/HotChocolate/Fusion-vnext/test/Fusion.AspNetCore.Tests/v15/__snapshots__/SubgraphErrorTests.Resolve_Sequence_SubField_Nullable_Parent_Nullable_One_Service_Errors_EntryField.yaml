name: Resolve_Sequence_SubField_Nullable_Parent_Nullable_One_Service_Errors_EntryField
request:
  document: >-
    {
      product {
        id
        brand {
          id
          name
        }
      }
    }
response: >-
  {
    "data": {
      "product": {
        "id": "UHJvZHVjdDox",
        "brand": {
          "id": "QnJhbmQ6Mg==",
          "name": null
        }
      }
    },
    "errors": [
      {
        "message": "Unexpected Execution Error",
        "path": [
          "product",
          "brand",
          "name"
        ]
      }
    ]
  }
sourceSchemas:
  - name: A
    schema: >-
      schema {
        query: Query
      }
      
      type Brand {
        id: ID!
      }
      
      type Product {
        id: ID!
        brand: Brand
      }
      
      type Query {
        product: Product
      }
    interactions:
      - request: {"query":"query Op_e358ecef_1 {\n  product {\n    id\n    brand {\n      id\n    }\n  }\n}"}
        response: {"data":{"product":{"id":"UHJvZHVjdDox","brand":{"id":"QnJhbmQ6Mg=="}}}}
  - name: B
    schema: >-
      schema {
        query: Query
      }
      
      type Brand {
        id: ID!
        name: String
      }
      
      type Query {
        brandById(id: ID!): Brand @lookup @error
      }
      
      directive @error(atIndex: Int) on FIELD_DEFINITION
    interactions:
      - request: {"query":"query Op_e358ecef_2(\n  $__fusion_1_id: ID!\n) {\n  brandById(id: $__fusion_1_id) {\n    name\n  }\n}","variables":{"__fusion_1_id":"QnJhbmQ6Mg=="}}
        response: {"errors":[{"message":"Unexpected Execution Error","locations":[{"line":4,"column":3}],"path":["brandById"]}],"data":{"brandById":null}}
