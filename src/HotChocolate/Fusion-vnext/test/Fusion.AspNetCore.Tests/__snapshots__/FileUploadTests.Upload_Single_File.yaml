title: Upload_Single_File
request:
  document: |
    query(
      $file: Upload!
    ) {
      singleUpload(file: $file) {
        fileName
        contentType
        content
      }
    }
  variables: |
    {
      "file": {
        "FileName": "test.txt",
        "ContentType": "text/plain"
      }
    }
response:
  body: |
    {
      "data": {
        "singleUpload": {
          "fileName": "test.txt",
          "contentType": "text/plain",
          "content": "abc"
        }
      }
    }
sourceSchemas:
  - name: A
    schema: |
      schema {
        query: Query
      }

      type FileUploadResult {
        fileName: String!
        contentType: String
        content: String!
      }

      type Query {
        singleUpload(file: Upload!): FileUploadResult!
        singleUploadWithInput(input: FileInput!): FileUploadResult!
        multiUpload(files: [Upload!]!): [FileUploadResult!]!
        multiUploadWithInput(input: FilesInput!): [FileUploadResult!]!
      }

      input FileInput {
        file: Upload!
      }

      input FilesInput {
        files: [Upload!]!
      }

      "The `Upload` scalar type represents a file upload."
      scalar Upload
operationPlan:
  operation:
    - document: |
        query(
          $file: Upload!
        ) {
          singleUpload(file: $file) {
            fileName
            contentType
            content
          }
        }
      hash: 6e1beb142822946e961b9f062df288a0
      searchSpace: 1
  nodes:
    - id: 1
      type: Operation
      schema: A
      operation: |
        query Op_6e1beb14_1(
          $file: Upload!
        ) {
          singleUpload(file: $file) {
            fileName
            contentType
            content
          }
        }
      forwardedVariables:
        - file
