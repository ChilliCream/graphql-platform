name: Union_Field_Concrete_Type_Has_Dependency
request:
  document: >-
    query testQuery {
      post {
        ... on Photo {
          subgraph2
        }
        ... on Discussion {
          subgraph1
        }
      }
    }
response: >-
  {
    "data": {
      "post": {
        "subgraph2": "Photo: UGhvdG86MQ=="
      }
    }
  }
sourceSchemas:
  - name: A
    schema: >-
      schema {
        query: Query
      }
      
      type Discussion {
        id: ID!
        subgraph1: String
      }
      
      type Photo @key(fields: "id") {
        id: ID!
      }
      
      type Query {
        post: Post
      }
      
      union Post = Photo | Discussion
    interactions:
      - request: {"query":"query testQuery_3d3597da_1 {\n  post {\n    __typename\n    ... on Photo {\n      id\n    }\n    ... on Discussion {\n      subgraph1\n    }\n  }\n}"}
        response: {"data":{"post":{"__typename":"Photo","id":"UGhvdG86MQ=="}}}
  - name: B
    schema: >-
      schema {
        query: Query
      }
      
      type Photo @key(fields: "id") {
        id: ID!
        subgraph2: String!
      }
      
      type Query {
        photoById(id: ID!): Photo @lookup
      }
    interactions:
      - request: {"query":"query testQuery_3d3597da_2(\n  $__fusion_1_id: ID!\n) {\n  photoById(id: $__fusion_1_id) {\n    subgraph2\n  }\n}","variables":{"__fusion_1_id":"UGhvdG86MQ=="}}
        response: {"data":{"photoById":{"subgraph2":"Photo: UGhvdG86MQ=="}}}
