name: Object_List_Union_List_Concrete_Type_Selection_Has_Dependency
request:
  document: >-
    query testQuery {
      users {
        posts {
          ... on Photo {
            product {
              subgraph2
            }
          }
          ... on Discussion {
            author {
              subgraph3
            }
          }
        }
      }
    }
response: >-
  {
    "data": {
      "users": [
        {
          "posts": [
            {
              "product": {
                "subgraph2": "Product: UHJvZHVjdDoxNQ=="
              }
            },
            {
              "author": {
                "subgraph3": "Author: QXV0aG9yOjE0"
              }
            },
            {
              "product": {
                "subgraph2": "Product: UHJvZHVjdDoxMw=="
              }
            }
          ]
        },
        {
          "posts": [
            {
              "product": {
                "subgraph2": "Product: UHJvZHVjdDoxOA=="
              }
            },
            {
              "author": {
                "subgraph3": "Author: QXV0aG9yOjE3"
              }
            },
            {
              "product": {
                "subgraph2": "Product: UHJvZHVjdDoxNg=="
              }
            }
          ]
        },
        {
          "posts": [
            {
              "product": {
                "subgraph2": "Product: UHJvZHVjdDoyMQ=="
              }
            },
            {
              "author": {
                "subgraph3": "Author: QXV0aG9yOjIw"
              }
            },
            {
              "product": {
                "subgraph2": "Product: UHJvZHVjdDoxOQ=="
              }
            }
          ]
        }
      ]
    }
  }
sourceSchemas:
  - name: A
    schema: >-
      schema {
        query: Query
      }
      
      type Author @key(fields: "id") {
        id: ID!
      }
      
      type Discussion {
        id: ID!
        author: Author
      }
      
      type Photo {
        id: ID!
        product: Product
      }
      
      type Product @key(fields: "id") {
        id: ID!
      }
      
      type Query {
        users: [User]
      }
      
      type User {
        posts: [Post]
      }
      
      union Post = Photo | Discussion
    interactions:
      - request: {"query":"query testQuery_eb2214e5_1 {\n  users {\n    posts {\n      __typename\n      ... on Photo {\n        product {\n          id\n        }\n      }\n      ... on Discussion {\n        author {\n          id\n        }\n      }\n    }\n  }\n}"}
        response: {"data":{"users":[{"posts":[{"__typename":"Photo","product":{"id":"UHJvZHVjdDoxNQ=="}},{"__typename":"Discussion","author":{"id":"QXV0aG9yOjE0"}},{"__typename":"Photo","product":{"id":"UHJvZHVjdDoxMw=="}}]},{"posts":[{"__typename":"Photo","product":{"id":"UHJvZHVjdDoxOA=="}},{"__typename":"Discussion","author":{"id":"QXV0aG9yOjE3"}},{"__typename":"Photo","product":{"id":"UHJvZHVjdDoxNg=="}}]},{"posts":[{"__typename":"Photo","product":{"id":"UHJvZHVjdDoyMQ=="}},{"__typename":"Discussion","author":{"id":"QXV0aG9yOjIw"}},{"__typename":"Photo","product":{"id":"UHJvZHVjdDoxOQ=="}}]}]}}
  - name: B
    schema: >-
      schema {
        query: Query
      }
      
      type Product @key(fields: "id") {
        id: ID!
        subgraph2: String!
      }
      
      type Query {
        productById(id: ID!): Product @lookup
      }
    interactions:
      - request: {"query":"query testQuery_eb2214e5_3(\n  $__fusion_2_id: ID!\n) {\n  productById(id: $__fusion_2_id) {\n    subgraph2\n  }\n}","variables":[{"__fusion_2_id":"UHJvZHVjdDoxNQ=="},{"__fusion_2_id":"UHJvZHVjdDoxMw=="},{"__fusion_2_id":"UHJvZHVjdDoxOA=="},{"__fusion_2_id":"UHJvZHVjdDoxNg=="},{"__fusion_2_id":"UHJvZHVjdDoyMQ=="},{"__fusion_2_id":"UHJvZHVjdDoxOQ=="}]}
        response: {"variableIndex":0,"data":{"productById":{"subgraph2":"Product: UHJvZHVjdDoxNQ=="}}}
{"variableIndex":1,"data":{"productById":{"subgraph2":"Product: UHJvZHVjdDoxMw=="}}}
{"variableIndex":2,"data":{"productById":{"subgraph2":"Product: UHJvZHVjdDoxOA=="}}}
{"variableIndex":3,"data":{"productById":{"subgraph2":"Product: UHJvZHVjdDoxNg=="}}}
{"variableIndex":4,"data":{"productById":{"subgraph2":"Product: UHJvZHVjdDoyMQ=="}}}
{"variableIndex":5,"data":{"productById":{"subgraph2":"Product: UHJvZHVjdDoxOQ=="}}}

  - name: C
    schema: >-
      schema {
        query: Query
      }
      
      type Author @key(fields: "id") {
        id: ID!
        subgraph3: String!
      }
      
      type Query {
        authorById(id: ID!): Author @lookup
      }
    interactions:
      - request: {"query":"query testQuery_eb2214e5_2(\n  $__fusion_1_id: ID!\n) {\n  authorById(id: $__fusion_1_id) {\n    subgraph3\n  }\n}","variables":[{"__fusion_1_id":"QXV0aG9yOjE0"},{"__fusion_1_id":"QXV0aG9yOjE3"},{"__fusion_1_id":"QXV0aG9yOjIw"}]}
        response: {"variableIndex":0,"data":{"authorById":{"subgraph3":"Author: QXV0aG9yOjE0"}}}
{"variableIndex":1,"data":{"authorById":{"subgraph3":"Author: QXV0aG9yOjE3"}}}
{"variableIndex":2,"data":{"authorById":{"subgraph3":"Author: QXV0aG9yOjIw"}}}

