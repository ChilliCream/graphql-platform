title: Object_List_Union_List_Concrete_Type_Selection_Has_Dependency
request:
  document: |
    query testQuery {
      users {
        posts {
          ... on Photo {
            product {
              subgraph2
            }
          }
          ... on Discussion {
            author {
              subgraph3
            }
          }
        }
      }
    }
response:
  body: |
    {
      "data": {
        "users": [
          {
            "posts": [
              {
                "product": {
                  "subgraph2": "Product: UHJvZHVjdDoxNQ=="
                }
              },
              {
                "author": {
                  "subgraph3": "Author: QXV0aG9yOjE0"
                }
              },
              {
                "product": {
                  "subgraph2": "Product: UHJvZHVjdDoxMw=="
                }
              }
            ]
          },
          {
            "posts": [
              {
                "product": {
                  "subgraph2": "Product: UHJvZHVjdDoxOA=="
                }
              },
              {
                "author": {
                  "subgraph3": "Author: QXV0aG9yOjE3"
                }
              },
              {
                "product": {
                  "subgraph2": "Product: UHJvZHVjdDoxNg=="
                }
              }
            ]
          },
          {
            "posts": [
              {
                "product": {
                  "subgraph2": "Product: UHJvZHVjdDoyMQ=="
                }
              },
              {
                "author": {
                  "subgraph3": "Author: QXV0aG9yOjIw"
                }
              },
              {
                "product": {
                  "subgraph2": "Product: UHJvZHVjdDoxOQ=="
                }
              }
            ]
          }
        ]
      }
    }
sourceSchemas:
  - name: A
    schema: |
      schema {
        query: Query
      }
      
      type Author @key(fields: "id") {
        id: ID!
      }
      
      type Discussion {
        id: ID!
        author: Author
      }
      
      type Photo {
        id: ID!
        product: Product
      }
      
      type Product @key(fields: "id") {
        id: ID!
      }
      
      type Query {
        users: [User]
      }
      
      type User {
        posts: [Post]
      }
      
      union Post = Photo | Discussion
    interactions:
      - request:
          body: |
            {"query":"query testQuery_eb2214e5_1 {\n  users {\n    posts {\n      __typename\n      ... on Photo {\n        product {\n          id\n        }\n      }\n      ... on Discussion {\n        author {\n          id\n        }\n      }\n    }\n  }\n}"}
        response:
          results:
            - |
              {
                "data": {
                  "users": [
                    {
                      "posts": [
                        {
                          "__typename": "Photo",
                          "product": {
                            "id": "UHJvZHVjdDoxNQ=="
                          }
                        },
                        {
                          "__typename": "Discussion",
                          "author": {
                            "id": "QXV0aG9yOjE0"
                          }
                        },
                        {
                          "__typename": "Photo",
                          "product": {
                            "id": "UHJvZHVjdDoxMw=="
                          }
                        }
                      ]
                    },
                    {
                      "posts": [
                        {
                          "__typename": "Photo",
                          "product": {
                            "id": "UHJvZHVjdDoxOA=="
                          }
                        },
                        {
                          "__typename": "Discussion",
                          "author": {
                            "id": "QXV0aG9yOjE3"
                          }
                        },
                        {
                          "__typename": "Photo",
                          "product": {
                            "id": "UHJvZHVjdDoxNg=="
                          }
                        }
                      ]
                    },
                    {
                      "posts": [
                        {
                          "__typename": "Photo",
                          "product": {
                            "id": "UHJvZHVjdDoyMQ=="
                          }
                        },
                        {
                          "__typename": "Discussion",
                          "author": {
                            "id": "QXV0aG9yOjIw"
                          }
                        },
                        {
                          "__typename": "Photo",
                          "product": {
                            "id": "UHJvZHVjdDoxOQ=="
                          }
                        }
                      ]
                    }
                  ]
                }
              }
  - name: B
    schema: |
      schema {
        query: Query
      }
      
      type Product @key(fields: "id") {
        id: ID!
        subgraph2: String!
      }
      
      type Query {
        productById(id: ID!): Product @lookup
      }
    interactions:
      - request:
          body: |
            {"query":"query testQuery_eb2214e5_3(\n  $__fusion_2_id: ID!\n) {\n  productById(id: $__fusion_2_id) {\n    subgraph2\n  }\n}","variables":[{"__fusion_2_id":"UHJvZHVjdDoxNQ=="},{"__fusion_2_id":"UHJvZHVjdDoxMw=="},{"__fusion_2_id":"UHJvZHVjdDoxOA=="},{"__fusion_2_id":"UHJvZHVjdDoxNg=="},{"__fusion_2_id":"UHJvZHVjdDoyMQ=="},{"__fusion_2_id":"UHJvZHVjdDoxOQ=="}]}
        response:
          results:
            - |
              {
                "data": {
                  "productById": {
                    "subgraph2": "Product: UHJvZHVjdDoxNQ=="
                  }
                }
              }
            - |
              {
                "data": {
                  "productById": {
                    "subgraph2": "Product: UHJvZHVjdDoxMw=="
                  }
                }
              }
            - |
              {
                "data": {
                  "productById": {
                    "subgraph2": "Product: UHJvZHVjdDoxOA=="
                  }
                }
              }
            - |
              {
                "data": {
                  "productById": {
                    "subgraph2": "Product: UHJvZHVjdDoxNg=="
                  }
                }
              }
            - |
              {
                "data": {
                  "productById": {
                    "subgraph2": "Product: UHJvZHVjdDoyMQ=="
                  }
                }
              }
            - |
              {
                "data": {
                  "productById": {
                    "subgraph2": "Product: UHJvZHVjdDoxOQ=="
                  }
                }
              }
  - name: C
    schema: |
      schema {
        query: Query
      }
      
      type Author @key(fields: "id") {
        id: ID!
        subgraph3: String!
      }
      
      type Query {
        authorById(id: ID!): Author @lookup
      }
    interactions:
      - request:
          body: |
            {"query":"query testQuery_eb2214e5_2(\n  $__fusion_1_id: ID!\n) {\n  authorById(id: $__fusion_1_id) {\n    subgraph3\n  }\n}","variables":[{"__fusion_1_id":"QXV0aG9yOjE0"},{"__fusion_1_id":"QXV0aG9yOjE3"},{"__fusion_1_id":"QXV0aG9yOjIw"}]}
        response:
          results:
            - |
              {
                "data": {
                  "authorById": {
                    "subgraph3": "Author: QXV0aG9yOjE0"
                  }
                }
              }
            - |
              {
                "data": {
                  "authorById": {
                    "subgraph3": "Author: QXV0aG9yOjE3"
                  }
                }
              }
            - |
              {
                "data": {
                  "authorById": {
                    "subgraph3": "Author: QXV0aG9yOjIw"
                  }
                }
              }
operationPlan:
  operation:
    - document: |
        query testQuery {
          users {
            posts {
              __typename @fusion__requirement
              ... on Photo {
                product {
                  subgraph2
                  id @fusion__requirement
                }
              }
              ... on Discussion {
                author {
                  subgraph3
                  id @fusion__requirement
                }
              }
            }
          }
        }
      name: testQuery
      hash: eb2214e50d2491349ef9bd204249bb8e
      searchSpace: 1
  nodes:
    - id: 1
      type: Operation
      schema: A
      operation: |
        query testQuery_eb2214e5_1 {
          users {
            posts {
              __typename
              ... on Photo {
                product {
                  id
                }
              }
              ... on Discussion {
                author {
                  id
                }
              }
            }
          }
        }
    - id: 2
      type: Operation
      schema: C
      operation: |
        query testQuery_eb2214e5_2(
          $__fusion_1_id: ID!
        ) {
          authorById(id: $__fusion_1_id) {
            subgraph3
          }
        }
      source: $.authorById
      target: $.users.posts<Discussion>.author
      requirements:
        - name: __fusion_1_id
          selectionMap: >-
            id
      dependencies:
        - id: 1
    - id: 3
      type: Operation
      schema: B
      operation: |
        query testQuery_eb2214e5_3(
          $__fusion_2_id: ID!
        ) {
          productById(id: $__fusion_2_id) {
            subgraph2
          }
        }
      source: $.productById
      target: $.users.posts<Photo>.product
      requirements:
        - name: __fusion_2_id
          selectionMap: >-
            id
      dependencies:
        - id: 1
