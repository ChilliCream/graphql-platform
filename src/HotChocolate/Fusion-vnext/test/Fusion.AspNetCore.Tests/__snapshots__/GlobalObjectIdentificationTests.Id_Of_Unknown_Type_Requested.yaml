name: Id_Of_Unknown_Type_Requested
request:
  document: >-
    {
      node(id: "VXNlcjox") {
        ... on Discussion {
          title
        }
      }
    }
response: >-
  {
    "data": {
      "node": null
    },
    "errors": [
      {
        "message": "The node ID string has an invalid format.",
        "path": [
          "node"
        ],
        "extensions": {
          "originalValue": "VXNlcjox"
        }
      }
    ]
  }
sourceSchemas:
  - name: A
    schema: >-
      schema {
        query: Query
      }
      
      interface Node {
        id: ID!
      }
      
      type Discussion implements Node {
        id: ID!
        title: String!
      }
      
      type Query {
        node(id: ID!): Node @lookup
        discussionById(discussionId: ID! @is(field: "id")): Discussion @lookup
      }
  - name: B
    schema: >-
      schema {
        query: Query
      }
      
      interface Node {
        id: ID!
      }
      
      type Discussion implements Node {
        id: ID!
        commentCount: Int!
      }
      
      type Product implements Node {
        id: ID!
        name: String!
      }
      
      type Query {
        node(id: ID!): Node @lookup
        discussionById(id: ID!): Discussion @lookup @internal
      }
