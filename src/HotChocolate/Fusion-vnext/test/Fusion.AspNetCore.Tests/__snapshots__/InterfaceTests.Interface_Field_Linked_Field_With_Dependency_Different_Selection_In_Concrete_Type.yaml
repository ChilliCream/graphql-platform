name: Interface_Field_Linked_Field_With_Dependency_Different_Selection_In_Concrete_Type
request:
  document: >-
    query testQuery {
      authorable {
        author {
          id
          displayName
        }
        ... on Discussion {
          author {
            email
          }
        }
      }
    }
response: >-
  {
    "data": {
      "authorable": {
        "author": {
          "id": "QXV0aG9yOjI=",
          "displayName": "Author: QXV0aG9yOjI=",
          "email": "Author: QXV0aG9yOjI="
        }
      }
    },
    "extensions": {
      "fusion": {
        "operationPlan": {
          "id": "2a8fd63e1b4c89b83b24267944621885d354f8526845e72597065436eaf6f50c",
          "operation": {
            "name": "testQuery",
            "kind": "Query",
            "document": "query testQuery {\n  authorable {\n    __typename @fusion__requirement\n    author {\n      id\n      id @fusion__requirement\n      displayName\n    }\n    ... on Discussion {\n      author {\n        email\n        id @fusion__requirement\n      }\n    }\n  }\n}",
            "id": "1703e95bc9cba85c083d641b7c36486a",
            "hash": "1703e95bc9cba85c083d641b7c36486a",
            "shortHash": "1703e95b"
          },
          "searchSpace": 1,
          "nodes": [
            {
              "id": 1,
              "type": "Operation",
              "schema": "A",
              "operation": {
                "name": "testQuery_1703e95b_1",
                "kind": "Query",
                "document": "query testQuery_1703e95b_1 {\n  authorable {\n    __typename\n    author {\n      id\n    }\n    ... on Discussion {\n      author {\n        id\n      }\n    }\n  }\n}",
                "hash": "5427ba25441c9014bdbeabfeb3d2dd1ab1001a8ce3a8c953a559cb13256191fc",
                "shortHash": "5427ba25"
              },
              "responseNames": [
                "authorable"
              ]
            },
            {
              "id": 2,
              "type": "Operation",
              "schema": "B",
              "operation": {
                "name": "testQuery_1703e95b_2",
                "kind": "Query",
                "document": "query testQuery_1703e95b_2(\n  $__fusion_1_id: ID!\n) {\n  authorById(id: $__fusion_1_id) {\n    email\n  }\n}",
                "hash": "7c8d5f70c140b24e5cbec3e558df9185092e3e6b39c4b6e6e28cf29423ae46a9",
                "shortHash": "7c8d5f70"
              },
              "responseNames": [
                "email"
              ],
              "source": "$.authorById",
              "target": "$.authorable\u003CDiscussion\u003E.author",
              "requirements": [
                {
                  "name": "__fusion_1_id",
                  "type": "ID!",
                  "path": "$.authorable\u003CDiscussion\u003E.author",
                  "selectionMap": "id"
                }
              ],
              "forwardedVariables": [],
              "dependencies": [
                1
              ]
            },
            {
              "id": 3,
              "type": "Operation",
              "schema": "B",
              "operation": {
                "name": "testQuery_1703e95b_3",
                "kind": "Query",
                "document": "query testQuery_1703e95b_3(\n  $__fusion_2_id: ID!\n) {\n  authorById(id: $__fusion_2_id) {\n    displayName\n  }\n}",
                "hash": "9e5c838513a1337ae7ffdf3f408ac6f8e6b46423bd87114e7e4d2b4a2c31617c",
                "shortHash": "9e5c8385"
              },
              "responseNames": [
                "displayName"
              ],
              "source": "$.authorById",
              "target": "$.authorable.author",
              "requirements": [
                {
                  "name": "__fusion_2_id",
                  "type": "ID!",
                  "path": "$.authorable.author",
                  "selectionMap": "id"
                }
              ],
              "forwardedVariables": [],
              "dependencies": [
                1
              ]
            }
          ]
        }
      }
    }
  }
sourceSchemas:
  - name: A
    schema: >-
      schema {
        query: Query
      }
      
      interface Authorable {
        author: Author
      }
      
      type Author @key(fields: "id") {
        id: ID!
      }
      
      type Comment implements Authorable {
        author: Author
      }
      
      type Discussion implements Authorable {
        author: Author
      }
      
      type Query {
        authorable: Authorable
      }
      
      """
      The @key directive is used to designate an entity's unique key,
      which identifies how to uniquely reference an instance of
      an entity across different source schemas.
      """
      directive @key("The field selection set syntax." fields: FieldSelectionSet!) on OBJECT | INTERFACE
      
      scalar FieldSelectionMap
      
      scalar FieldSelectionSet
    interactions:
      - request: {"query":"query testQuery_1703e95b_1 {\n  authorable {\n    __typename\n    author {\n      id\n    }\n    ... on Discussion {\n      author {\n        id\n      }\n    }\n  }\n}"}
        response: 
  - name: B
    schema: >-
      schema {
        query: Query
      }
      
      type Author @key(fields: "id") {
        id: ID!
        displayName: String!
        email: String
      }
      
      type Query {
        authorById(id: ID!): Author @lookup
      }
      
      """
      The @key directive is used to designate an entity's unique key,
      which identifies how to uniquely reference an instance of
      an entity across different source schemas.
      """
      directive @key("The field selection set syntax." fields: FieldSelectionSet!) on OBJECT | INTERFACE
      
      """
      The @lookup directive is used within a source schema to specify output fields
      that can be used by the distributed GraphQL executor to resolve an entity by
      a stable key.
      """
      directive @lookup on FIELD_DEFINITION
      
      scalar FieldSelectionMap
      
      scalar FieldSelectionSet
    interactions:
      - request: {"query":"query testQuery_1703e95b_2(\n  $__fusion_1_id: ID!\n) {\n  authorById(id: $__fusion_1_id) {\n    email\n  }\n}","variables":{"__fusion_1_id":"QXV0aG9yOjI="}}
        response: 
      - request: {"query":"query testQuery_1703e95b_3(\n  $__fusion_2_id: ID!\n) {\n  authorById(id: $__fusion_2_id) {\n    displayName\n  }\n}","variables":{"__fusion_2_id":"QXV0aG9yOjI="}}
        response: 
