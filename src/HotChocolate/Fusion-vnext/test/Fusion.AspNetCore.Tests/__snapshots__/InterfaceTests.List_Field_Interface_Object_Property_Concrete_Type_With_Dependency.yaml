name: List_Field_Interface_Object_Property_Concrete_Type_With_Dependency
request:
  document: >-
    query testQuery {
      wrappers {
        votable {
          viewerCanVote
          ... on Discussion {
            viewerRating
          }
        }
      }
    }
response: >-
  {
    "data": {
      "wrappers": [
        {
          "votable": {
            "viewerCanVote": true,
            "viewerRating": 123.456
          }
        },
        {
          "votable": {
            "viewerCanVote": true,
            "viewerRating": 123.456
          }
        },
        {
          "votable": {
            "viewerCanVote": true,
            "viewerRating": 123.456
          }
        }
      ]
    },
    "extensions": {
      "fusion": {
        "operationPlan": {
          "id": "9e394356e7851d16d8c9e543ccbb9f376e2b13311808da566ed436ed6a2d8e40",
          "operation": {
            "name": "testQuery",
            "kind": "Query",
            "document": "query testQuery {\n  wrappers {\n    votable {\n      __typename @fusion__requirement\n      viewerCanVote\n      ... on Discussion {\n        viewerRating\n        id @fusion__requirement\n      }\n    }\n  }\n}",
            "id": "7a8e1f91cae63ceca6e1f391c7b88847",
            "hash": "7a8e1f91cae63ceca6e1f391c7b88847",
            "shortHash": "7a8e1f91"
          },
          "searchSpace": 1,
          "nodes": [
            {
              "id": 1,
              "type": "Operation",
              "schema": "A",
              "operation": {
                "name": "testQuery_7a8e1f91_1",
                "kind": "Query",
                "document": "query testQuery_7a8e1f91_1 {\n  wrappers {\n    votable {\n      __typename\n      viewerCanVote\n      ... on Discussion {\n        id\n      }\n    }\n  }\n}",
                "hash": "d1ae21360e4433448f1a7349d9c9a54130781ad0aa2eb915a9dcf6a0307ce6ce",
                "shortHash": "d1ae2136"
              },
              "responseNames": [
                "wrappers"
              ]
            },
            {
              "id": 2,
              "type": "Operation",
              "schema": "B",
              "operation": {
                "name": "testQuery_7a8e1f91_2",
                "kind": "Query",
                "document": "query testQuery_7a8e1f91_2(\n  $__fusion_1_id: ID!\n) {\n  discussionById(id: $__fusion_1_id) {\n    viewerRating\n  }\n}",
                "hash": "e99a989bf5f3e93c819f750616024c96bdaeaba004eca2546b149f5c38224e7c",
                "shortHash": "e99a989b"
              },
              "responseNames": [
                "viewerRating"
              ],
              "source": "$.discussionById",
              "target": "$.wrappers.votable\u003CDiscussion\u003E",
              "requirements": [
                {
                  "name": "__fusion_1_id",
                  "type": "ID!",
                  "path": "$.wrappers.votable\u003CDiscussion\u003E",
                  "selectionMap": "id"
                }
              ],
              "forwardedVariables": [],
              "dependencies": [
                1
              ]
            }
          ]
        }
      }
    }
  }
sourceSchemas:
  - name: A
    schema: >-
      schema {
        query: Query
      }
      
      interface Votable {
        viewerCanVote: Boolean!
      }
      
      type Comment implements Votable @key(fields: "id") {
        id: ID!
        viewerCanVote: Boolean!
      }
      
      type Discussion implements Votable @key(fields: "id") {
        id: ID!
        viewerCanVote: Boolean!
      }
      
      type Query {
        wrappers: [Wrapper]
        discussionById(id: ID!): Discussion @lookup
      }
      
      type Wrapper {
        votable: Votable
      }
      
      """
      The @key directive is used to designate an entity's unique key,
      which identifies how to uniquely reference an instance of
      an entity across different source schemas.
      """
      directive @key("The field selection set syntax." fields: FieldSelectionSet!) on OBJECT | INTERFACE
      
      """
      The @lookup directive is used within a source schema to specify output fields
      that can be used by the distributed GraphQL executor to resolve an entity by
      a stable key.
      """
      directive @lookup on FIELD_DEFINITION
      
      scalar FieldSelectionMap
      
      scalar FieldSelectionSet
    interactions:
      - request: {"query":"query testQuery_7a8e1f91_1 {\n  wrappers {\n    votable {\n      __typename\n      viewerCanVote\n      ... on Discussion {\n        id\n      }\n    }\n  }\n}"}
        response: {"data":{"wrappers":[{"votable":{"__typename":"Discussion","viewerCanVote":true,"id":"RGlzY3Vzc2lvbjo2"}},{"votable":{"__typename":"Discussion","viewerCanVote":true,"id":"RGlzY3Vzc2lvbjo1"}},{"votable":{"__typename":"Discussion","viewerCanVote":true,"id":"RGlzY3Vzc2lvbjo0"}}]}}
  - name: B
    schema: >-
      schema {
        query: Query
      }
      
      type Discussion @key(fields: "id") {
        id: ID!
        viewerRating: Float!
      }
      
      type Query {
        discussionById(id: ID!): Discussion @lookup
      }
      
      """
      The @key directive is used to designate an entity's unique key,
      which identifies how to uniquely reference an instance of
      an entity across different source schemas.
      """
      directive @key("The field selection set syntax." fields: FieldSelectionSet!) on OBJECT | INTERFACE
      
      """
      The @lookup directive is used within a source schema to specify output fields
      that can be used by the distributed GraphQL executor to resolve an entity by
      a stable key.
      """
      directive @lookup on FIELD_DEFINITION
      
      scalar FieldSelectionMap
      
      scalar FieldSelectionSet
    interactions:
      - request: {"query":"query testQuery_7a8e1f91_2(\n  $__fusion_1_id: ID!\n) {\n  discussionById(id: $__fusion_1_id) {\n    viewerRating\n  }\n}","variables":[{"__fusion_1_id":"RGlzY3Vzc2lvbjo2"},{"__fusion_1_id":"RGlzY3Vzc2lvbjo1"},{"__fusion_1_id":"RGlzY3Vzc2lvbjo0"}]}
        response: {"variableIndex":0,"data":{"discussionById":{"viewerRating":123.456}}}
{"variableIndex":1,"data":{"discussionById":{"viewerRating":123.456}}}
{"variableIndex":2,"data":{"discussionById":{"viewerRating":123.456}}}

