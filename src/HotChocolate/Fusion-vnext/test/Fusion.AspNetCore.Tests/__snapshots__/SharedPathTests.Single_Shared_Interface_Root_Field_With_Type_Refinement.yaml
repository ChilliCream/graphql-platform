title: Single_Shared_Interface_Root_Field_With_Type_Refinement
request:
  document: |
    {
      interface {
        ... on Review {
          schema1
          schema2
        }
      }
    }
response:
  body: |
    {
      "data": {
        "interface": {
          "schema1": "schema1",
          "schema2": "schema2"
        }
      }
    }
sourceSchemas:
  - name: A
    schema: |
      schema {
        query: Query
      }

      interface IInterface @key(fields: "id") {
        id: Int!
      }

      type Product implements IInterface {
        id: Int!
        schema1: String!
        shared: SharedProduct @shareable
      }

      type Query {
        productById(id: Int!): Product @lookup
        viewer: Viewer! @shareable
        schema1: String!
        interface: IInterface! @shareable
        unsharedInterface: IInterface!
        union: IUnion! @shareable
        topReview: Review! @shareable
      }

      type Review implements IInterface {
        id: Int!
        schema1: String!
      }

      type SharedProduct {
        schema1: String!
        shared2: SharedProduct2 @shareable
      }

      type SharedProduct2 {
        schema1: String!
      }

      type Viewer {
        schema1: String!
        settings: ViewerSettings! @shareable
      }

      type ViewerSettings {
        schema1: String!
      }

      union IUnion = Product | Review
    interactions:
      - request:
          document: |
            query Op_d8c31e9a_1 {
              interface {
                __typename
                ... on Review {
                  schema1
                }
              }
            }
        response:
          results:
            - |
              {
                "data": {
                  "interface": {
                    "__typename": "Review",
                    "schema1": "schema1"
                  }
                }
              }
  - name: B
    schema: |
      schema {
        query: Query
      }

      interface IInterface @key(fields: "id") {
        id: Int!
      }

      type Product implements IInterface {
        id: Int!
        schema2: String!
        shared: SharedProduct @shareable
      }

      type Query {
        product(id: Int!): Product @lookup
        viewer: Viewer! @shareable
        schema2: String!
        interface: IInterface! @shareable
        union: IUnion! @shareable
        topReview: Review! @shareable
      }

      type Review implements IInterface {
        id: Int!
        schema2: String!
      }

      type SharedProduct {
        schema2: String!
        shared2: SharedProduct2 @shareable
      }

      type SharedProduct2 {
        schema2: String!
      }

      type Viewer {
        schema2: String!
        settings: ViewerSettings! @shareable
      }

      type ViewerSettings {
        schema2: String!
      }

      union IUnion = Product | Review
    interactions:
      - request:
          document: |
            query Op_d8c31e9a_2 {
              interface {
                __typename
                ... on Review {
                  schema2
                }
              }
            }
        response:
          results:
            - |
              {
                "data": {
                  "interface": {
                    "__typename": "Review",
                    "schema2": "schema2"
                  }
                }
              }
operationPlan:
  operation:
    - document: |
        {
          interface {
            __typename @fusion__requirement
            ... on Review {
              schema1
              schema2
            }
          }
        }
      hash: d8c31e9a49eb72a79cc47298402807f5
      searchSpace: 2
  nodes:
    - id: 1
      type: Operation
      schema: A
      operation: |
        query Op_d8c31e9a_1 {
          interface {
            __typename
            ... on Review {
              schema1
            }
          }
        }
    - id: 2
      type: Operation
      schema: B
      operation: |
        query Op_d8c31e9a_2 {
          interface {
            __typename
            ... on Review {
              schema2
            }
          }
        }
