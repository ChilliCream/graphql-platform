name: Concrete_Type_Branch_Requested_Abstract_Lookup
request:
  document: >-
    {
      node(id: "UHJvZHVjdDox") {
        id
        ... on Product {
          name
        }
      }
    }
response: >-
  {
    "data": {
      "node": {
        "id": "UHJvZHVjdDox",
        "name": "Product: UHJvZHVjdDox"
      }
    }
  }
sourceSchemas:
  - name: A
    schema: >-
      schema {
        query: Query
      }
      
      interface Node {
        id: ID!
      }
      
      type Discussion implements Node {
        id: ID!
        title: String!
      }
      
      type Query {
        node(id: ID!): Node @lookup
        discussionById(discussionId: ID! @is(field: "id")): Discussion @lookup
      }
  - name: B
    schema: >-
      schema {
        query: Query
      }
      
      interface Node {
        id: ID!
      }
      
      type Discussion implements Node {
        id: ID!
        commentCount: Int!
      }
      
      type Product implements Node {
        id: ID!
        name: String!
      }
      
      type Query {
        node(id: ID!): Node @lookup
        discussionById(id: ID!): Discussion @lookup @internal
      }
    interactions:
      - request: {"query":"query Op_f71a6d9f_3 {\n  node(id: \u0022UHJvZHVjdDox\u0022) {\n    __typename\n    ... on Product {\n      __typename\n      id\n      name\n    }\n  }\n}"}
        response: {"data":{"node":{"__typename":"Product","id":"UHJvZHVjdDox","name":"Product: UHJvZHVjdDox"}}}
