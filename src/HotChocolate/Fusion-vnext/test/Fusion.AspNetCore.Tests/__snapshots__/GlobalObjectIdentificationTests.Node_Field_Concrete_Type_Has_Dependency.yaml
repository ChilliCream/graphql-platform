name: Node_Field_Concrete_Type_Has_Dependency
request:
  document: >-
    query testQuery(
      $id: ID!
    ) {
      node(id: $id) {
        ... on Discussion {
          name
          commentCount
        }
      }
    }
  variables: >-
    {
      "id": "RGlzY3Vzc2lvbjox"
    }
response: >-
  {
    "data": {
      "node": {
        "name": "Discussion: RGlzY3Vzc2lvbjox",
        "commentCount": 123
      }
    }
  }
sourceSchemas:
  - name: A
    schema: >-
      schema {
        query: Query
      }
      
      interface Node {
        id: ID!
      }
      
      type Discussion implements Node @key(fields: "id") {
        id: ID!
        name: String
      }
      
      type Query {
        node(id: ID!): Node @lookup
      }
    interactions:
      - request: {"query":"query testQuery_6945dbce_3(\n  $id: ID!\n) {\n  node(id: $id) {\n    __typename\n    ... on Discussion {\n      __typename\n      name\n      id\n    }\n  }\n}","variables":{"id":"RGlzY3Vzc2lvbjox"}}
        response: {"data":{"node":{"__typename":"Discussion","name":"Discussion: RGlzY3Vzc2lvbjox","id":"RGlzY3Vzc2lvbjox"}}}
  - name: B
    schema: >-
      schema {
        query: Query
      }
      
      interface Node {
        id: ID!
      }
      
      type Discussion implements Node @key(fields: "id") {
        id: ID!
        commentCount: Int
      }
      
      type Query {
        discussionById(discussionId: ID! @is(field: "id")): Discussion @lookup
      }
    interactions:
      - request: {"query":"query testQuery_6945dbce_4(\n  $__fusion_1_discussionId: ID!\n) {\n  discussionById(discussionId: $__fusion_1_discussionId) {\n    commentCount\n  }\n}","variables":{"__fusion_1_discussionId":"RGlzY3Vzc2lvbjox"}}
        response: {"data":{"discussionById":{"commentCount":123}}}
