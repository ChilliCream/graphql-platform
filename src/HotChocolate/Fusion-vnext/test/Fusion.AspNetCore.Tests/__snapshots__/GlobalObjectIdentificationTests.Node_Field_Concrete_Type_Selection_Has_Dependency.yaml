title: Node_Field_Concrete_Type_Selection_Has_Dependency
request:
  document: |
    query testQuery(
      $id: ID!
    ) {
      node(id: $id) {
        ... on Discussion {
          id
          viewerRating
          product {
            name
          }
        }
      }
    }
  variables: |
    {
      "id": "RGlzY3Vzc2lvbjox"
    }
response:
  body: |
    {
      "data": {
        "node": {
          "id": "RGlzY3Vzc2lvbjox",
          "viewerRating": 123.456,
          "product": {
            "name": "Product: UHJvZHVjdDox"
          }
        }
      }
    }
sourceSchemas:
  - name: A
    schema: |
      schema {
        query: Query
      }
      
      interface Node {
        id: ID!
      }
      
      type Discussion implements Node {
        id: ID!
        viewerRating: Float!
        product: Product
      }
      
      type Product @key(fields: "id") {
        id: ID!
      }
      
      type Query {
        node(id: ID!): Node @lookup @shareable
        discussionById(id: ID!): Discussion @lookup
      }
    interactions:
      - request:
          document: |
            query testQuery_163be4ff_3(
              $id: ID!
            ) {
              node: discussionById(id: $id) {
                __typename
                id
                viewerRating
                product {
                  id
                }
              }
            }
          variables: |
            {
              "id": "RGlzY3Vzc2lvbjox"
            }
        response:
          results:
            - |
              {
                "data": {
                  "node": {
                    "__typename": "Discussion",
                    "id": "RGlzY3Vzc2lvbjox",
                    "viewerRating": 123.456,
                    "product": {
                      "id": "UHJvZHVjdDox"
                    }
                  }
                }
              }
  - name: B
    schema: |
      schema {
        query: Query
      }
      
      interface Node {
        id: ID!
      }
      
      type Product implements Node {
        id: ID!
        name: String
      }
      
      type Query {
        node(id: ID!): Node @lookup @shareable
      }
    interactions:
      - request:
          document: |
            query testQuery_163be4ff_4(
              $__fusion_1_id: ID!
            ) {
              node(id: $__fusion_1_id) {
                __typename
                ... on Product {
                  name
                }
              }
            }
          variables: |
            {
              "__fusion_1_id": "UHJvZHVjdDox"
            }
        response:
          results:
            - |
              {
                "data": {
                  "node": {
                    "__typename": "Product",
                    "name": "Product: UHJvZHVjdDox"
                  }
                }
              }
operationPlan:
  operation:
    - document: |
        query testQuery(
          $id: ID!
        ) {
          node(id: $id) {
            __typename @fusion__requirement
            ... on Discussion {
              id
              viewerRating
              product {
                name
                id @fusion__requirement
              }
            }
          }
        }
      name: testQuery
      hash: 163be4ff29c153b6f235a2c4f2f1b2ad
      searchSpace: 1
  nodes:
    - id: 1
      type: Node
      idValue: $id
      responseName: node
      branches:
        - Discussion: 3
      fallback: 2
    - id: 2
      type: Operation
      operation: |
        query testQuery_163be4ff_2(
          $id: ID!
        ) {
          node(id: $id) {
            __typename
          }
        }
      dependencies:
        - id: 1
    - id: 3
      type: Operation
      schema: A
      operation: |
        query testQuery_163be4ff_3(
          $id: ID!
        ) {
          node: discussionById(id: $id) {
            __typename
            id
            viewerRating
            product {
              id
            }
          }
        }
      dependencies:
        - id: 1
    - id: 4
      type: Operation
      schema: B
      operation: |
        query testQuery_163be4ff_4(
          $__fusion_1_id: ID!
        ) {
          node(id: $__fusion_1_id) {
            __typename
            ... on Product {
              name
            }
          }
        }
      source: $.node<Product>
      target: $.node<Discussion>.product
      requirements:
        - name: __fusion_1_id
          selectionMap: >-
            id
      dependencies:
        - id: 3
