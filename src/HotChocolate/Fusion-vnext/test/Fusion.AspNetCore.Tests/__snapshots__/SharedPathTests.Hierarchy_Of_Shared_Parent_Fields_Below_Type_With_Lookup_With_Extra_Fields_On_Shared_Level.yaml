name: Hierarchy_Of_Shared_Parent_Fields_Below_Type_With_Lookup_With_Extra_Fields_On_Shared_Level
request:
  document: >-
    {
      productById(id: 1) {
        shared {
          schema1
          shared2 {
            schema2
            schema1
          }
          schema2
        }
      }
    }
response: >-
  {
    "data": {
      "productById": {
        "shared": {
          "schema1": "schema1",
          "shared2": {
            "schema2": "schema2",
            "schema1": "schema1"
          },
          "schema2": "schema2"
        }
      }
    }
  }
sourceSchemas:
  - name: A
    schema: >-
      schema {
        query: Query
      }
      
      interface IInterface {
        id: Int!
      }
      
      type Product implements IInterface {
        id: Int!
        schema1: String!
        shared: SharedProduct
      }
      
      type Query {
        productById(id: Int!): Product @lookup
        viewer: Viewer!
        schema1: String!
        interface: IInterface!
        unsharedInterface: IInterface!
        union: IUnion!
        topReview: Review!
      }
      
      type Review implements IInterface {
        id: Int!
        schema1: String!
      }
      
      type SharedProduct {
        schema1: String!
        shared2: SharedProduct2
      }
      
      type SharedProduct2 {
        schema1: String!
      }
      
      type Viewer {
        schema1: String!
        settings: ViewerSettings!
      }
      
      type ViewerSettings {
        schema1: String!
      }
      
      union IUnion = Product | Review
    interactions:
      - request: {"query":"query Op_c1c44a8c_1 {\n  productById(id: 1) {\n    shared {\n      schema1\n      shared2 {\n        schema1\n      }\n    }\n    id\n  }\n}"}
        response: {"data":{"productById":{"shared":{"schema1":"schema1","shared2":{"schema1":"schema1"}},"id":1}}}
  - name: B
    schema: >-
      schema {
        query: Query
      }
      
      interface IInterface {
        id: Int!
      }
      
      type Product implements IInterface {
        id: Int!
        schema2: String!
        shared: SharedProduct
      }
      
      type Query {
        product(id: Int!): Product @lookup
        viewer: Viewer!
        schema2: String!
        interface: IInterface!
        union: IUnion!
        topReview: Review!
      }
      
      type Review implements IInterface {
        id: Int!
        schema2: String!
      }
      
      type SharedProduct {
        schema2: String!
        shared2: SharedProduct2
      }
      
      type SharedProduct2 {
        schema2: String!
      }
      
      type Viewer {
        schema2: String!
        settings: ViewerSettings!
      }
      
      type ViewerSettings {
        schema2: String!
      }
      
      union IUnion = Product | Review
    interactions:
      - request: {"query":"query Op_c1c44a8c_2(\n  $__fusion_1_id: Int!\n) {\n  product(id: $__fusion_1_id) {\n    shared {\n      schema2\n    }\n  }\n}","variables":{"__fusion_1_id":1}}
        response: {"data":{"product":{"shared":{"schema2":"schema2"}}}}
      - request: {"query":"query Op_c1c44a8c_3(\n  $__fusion_2_id: Int!\n) {\n  product(id: $__fusion_2_id) {\n    shared {\n      shared2 {\n        schema2\n      }\n    }\n  }\n}","variables":{"__fusion_2_id":1}}
        response: {"data":{"product":{"shared":{"shared2":{"schema2":"schema2"}}}}}
