name: SourceSchema_Request_Fails_For_Lookup_On_List
request:
  document: >-
    {
      topProducts {
        price
        name
      }
    }
response: >-
  {
    "data": {
      "topProducts": [
        {
          "price": 13.99,
          "name": null
        },
        {
          "price": 13.99,
          "name": null
        },
        {
          "price": 13.99,
          "name": null
        }
      ]
    },
    "errors": [
      {
        "message": "Unexpected Execution Error",
        "path": [
          "topProducts",
          0,
          "name"
        ]
      },
      {
        "message": "Unexpected Execution Error",
        "path": [
          "topProducts",
          1,
          "name"
        ]
      },
      {
        "message": "Unexpected Execution Error",
        "path": [
          "topProducts",
          2,
          "name"
        ]
      }
    ]
  }
sourceSchemas:
  - name: A
    schema: >-
      schema {
        query: Query
      }
      
      type Product {
        id: Int!
        price: Float!
      }
      
      type Query {
        topProduct: Product!
        nullableTopProduct: Product
        topProducts: [Product!]!
        productById(id: Int!): Product @lookup @internal
      }
    interactions:
      - request: {"query":"query Op_67b3f75a_1 {\n  topProducts {\n    price\n    id\n  }\n}"}
        response: {"data":{"topProducts":[{"price":13.99,"id":1},{"price":13.99,"id":2},{"price":13.99,"id":3}]}}
  - name: B
    schema: >-
      schema {
        query: Query
      }
      
      type Product {
        name: String
        id: Int!
      }
      
      type Query {
        productById(id: Int!): Product @lookup
      }
    interactions:
      - request: {"query":"query Op_67b3f75a_2(\n  $__fusion_1_id: Int!\n) {\n  productById(id: $__fusion_1_id) {\n    name\n  }\n}","variables":[{"__fusion_1_id":1},{"__fusion_1_id":2},{"__fusion_1_id":3}]}
        response: 
