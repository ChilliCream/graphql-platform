title: Single_Shared_Root_Field
request:
  document: |
    {
      viewer {
        schema1
        schema2
      }
    }
response:
  body: |
    {
      "data": {
        "viewer": {
          "schema1": "schema1",
          "schema2": "schema2"
        }
      }
    }
sourceSchemas:
  - name: A
    schema: |
      schema {
        query: Query
      }
      
      interface IInterface @key(fields: "id") {
        id: Int!
      }
      
      type Product implements IInterface {
        id: Int!
        schema1: String!
        shared: SharedProduct @shareable
      }
      
      type Query {
        productById(id: Int!): Product @lookup
        viewer: Viewer! @shareable
        schema1: String!
        interface: IInterface! @shareable
        unsharedInterface: IInterface!
        union: IUnion! @shareable
        topReview: Review! @shareable
      }
      
      type Review implements IInterface {
        id: Int!
        schema1: String!
      }
      
      type SharedProduct {
        schema1: String!
        shared2: SharedProduct2 @shareable
      }
      
      type SharedProduct2 {
        schema1: String!
      }
      
      type Viewer {
        schema1: String!
        settings: ViewerSettings! @shareable
      }
      
      type ViewerSettings {
        schema1: String!
      }
      
      union IUnion = Product | Review
    interactions:
      - request:
          document: |
            query Op_c6e3b357_1 {
              viewer {
                schema1
              }
            }
        response:
          results:
            - |
              {
                "data": {
                  "viewer": {
                    "schema1": "schema1"
                  }
                }
              }
  - name: B
    schema: |
      schema {
        query: Query
      }
      
      interface IInterface @key(fields: "id") {
        id: Int!
      }
      
      type Product implements IInterface {
        id: Int!
        schema2: String!
        shared: SharedProduct @shareable
      }
      
      type Query {
        product(id: Int!): Product @lookup
        viewer: Viewer! @shareable
        schema2: String!
        interface: IInterface! @shareable
        union: IUnion! @shareable
        topReview: Review! @shareable
      }
      
      type Review implements IInterface {
        id: Int!
        schema2: String!
      }
      
      type SharedProduct {
        schema2: String!
        shared2: SharedProduct2 @shareable
      }
      
      type SharedProduct2 {
        schema2: String!
      }
      
      type Viewer {
        schema2: String!
        settings: ViewerSettings! @shareable
      }
      
      type ViewerSettings {
        schema2: String!
      }
      
      union IUnion = Product | Review
    interactions:
      - request:
          document: |
            query Op_c6e3b357_2 {
              viewer {
                schema2
              }
            }
        response:
          results:
            - |
              {
                "data": {
                  "viewer": {
                    "schema2": "schema2"
                  }
                }
              }
operationPlan:
  operation:
    - document: |
        {
          viewer {
            schema1
            schema2
          }
        }
      hash: c6e3b3570561284c71c82b7c60272002
      searchSpace: 2
  nodes:
    - id: 1
      type: Operation
      schema: A
      operation: |
        query Op_c6e3b357_1 {
          viewer {
            schema1
          }
        }
    - id: 2
      type: Operation
      schema: B
      operation: |
        query Op_c6e3b357_2 {
          viewer {
            schema2
          }
        }
