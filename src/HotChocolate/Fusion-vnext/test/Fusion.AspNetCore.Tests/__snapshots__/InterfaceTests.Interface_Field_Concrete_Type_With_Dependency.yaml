name: Interface_Field_Concrete_Type_With_Dependency
request:
  document: >-
    query testQuery {
      votable {
        viewerCanVote
        ... on Discussion {
          viewerRating
        }
      }
    }
response: >-
  {
    "data": {
      "votable": {
        "viewerCanVote": true,
        "viewerRating": 123.456
      }
    }
  }
sourceSchemas:
  - name: A
    schema: >-
      schema {
        query: Query
      }
      
      interface Votable {
        viewerCanVote: Boolean!
      }
      
      type Comment implements Votable @key(fields: "id") {
        id: ID!
        viewerCanVote: Boolean!
      }
      
      type Discussion implements Votable @key(fields: "id") {
        id: ID!
        viewerCanVote: Boolean!
      }
      
      type Query {
        votable: Votable
        discussionById(id: ID!): Discussion @lookup
      }
    interactions:
      - request: {"query":"query testQuery_4a61c641_1 {\n  votable {\n    __typename\n    viewerCanVote\n    ... on Discussion {\n      id\n    }\n  }\n}"}
        response: {"data":{"votable":{"__typename":"Discussion","viewerCanVote":true,"id":"RGlzY3Vzc2lvbjox"}}}
  - name: B
    schema: >-
      schema {
        query: Query
      }
      
      type Discussion @key(fields: "id") {
        id: ID!
        viewerRating: Float!
      }
      
      type Query {
        discussionById(id: ID!): Discussion @lookup
      }
    interactions:
      - request: {"query":"query testQuery_4a61c641_2(\n  $__fusion_1_id: ID!\n) {\n  discussionById(id: $__fusion_1_id) {\n    viewerRating\n  }\n}","variables":{"__fusion_1_id":"RGlzY3Vzc2lvbjox"}}
        response: {"data":{"discussionById":{"viewerRating":123.456}}}
