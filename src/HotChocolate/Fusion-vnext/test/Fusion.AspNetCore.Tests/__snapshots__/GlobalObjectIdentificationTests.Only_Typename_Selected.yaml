name: Only_Typename_Selected
request:
  document: >-
    query testQuery(
      $id: ID!
    ) {
      node(id: $id) {
        __typename
      }
    }
  variables: >-
    {
      "id": "RGlzY3Vzc2lvbjox"
    }
response: >-
  {
    "data": {
      "node": {
        "__typename": "Discussion"
      }
    }
  }
sourceSchemas:
  - name: A
    schema: >-
      schema {
        query: Query
      }
      
      interface Node {
        id: ID!
      }
      
      type Discussion implements Node @key(fields: "id") {
        id: ID!
        title: String!
      }
      
      type Query {
        node(id: ID!): Node @lookup
      }
    interactions:
      - request: {"query":"query testQuery_539ebaa0_2(\n  $id: ID!\n) {\n  node(id: $id) {\n    __typename\n  }\n}","variables":{"id":"RGlzY3Vzc2lvbjox"}}
        response: {"data":{"node":{"__typename":"Discussion"}}}
  - name: B
    schema: >-
      schema {
        query: Query
      }
      
      interface Node {
        id: ID!
      }
      
      type Author implements Node @key(fields: "id") {
        id: ID!
        username: String!
      }
      
      type Query {
        authorById(id: ID!): Author @lookup
        node(id: ID!): Node @lookup
      }
