name: No_By_Id_Lookup_On_Best_Matching_Source_Schema
request:
  document: >-
    {
      # Discussion:1
      node(id: "RGlzY3Vzc2lvbjox") {
        ... on Discussion {
          commentCount
        }
      }
    }
response: >-
  {
    "data": {
      "node": {
        "commentCount": 123
      }
    },
    "extensions": {
      "fusion": {
        "operationPlan": {
          "id": "2c74b568fc6bdd248cd5b3372f1750446818cad99800909607a5e7da8fe90b73",
          "operation": {
            "kind": "Query",
            "document": "{\n  node(id: \u0022RGlzY3Vzc2lvbjox\u0022) {\n    __typename @fusion__requirement\n    ... on Discussion {\n      commentCount\n    }\n    title @fusion__requirement\n  }\n}",
            "id": "7c1d9f5dd3eeed1783d0c9fbdc80eebf",
            "hash": "7c1d9f5dd3eeed1783d0c9fbdc80eebf",
            "shortHash": "7c1d9f5d"
          },
          "searchSpace": 1,
          "nodes": [
            {
              "id": 1,
              "type": "Node",
              "idValue": "\u0022RGlzY3Vzc2lvbjox\u0022",
              "responseName": "node",
              "branches": {
                "Discussion": 3
              },
              "fallback": 2
            },
            {
              "id": 2,
              "type": "Operation",
              "operation": {
                "name": "Op_7c1d9f5d_2",
                "kind": "Query",
                "document": "query Op_7c1d9f5d_2 {\n  node(id: \u0022RGlzY3Vzc2lvbjox\u0022) {\n    __typename\n  }\n}",
                "hash": "6165aa132410f8c3323ef247ca2463a455feae2e75c97a4ce802e6eaa191011e",
                "shortHash": "6165aa13"
              },
              "responseNames": [
                "node"
              ],
              "dependencies": [
                1
              ]
            },
            {
              "id": 3,
              "type": "Operation",
              "schema": "B",
              "operation": {
                "name": "Op_7c1d9f5d_3",
                "kind": "Query",
                "document": "query Op_7c1d9f5d_3 {\n  node: discussionById(discussionId: \u0022RGlzY3Vzc2lvbjox\u0022) {\n    __typename\n    title\n  }\n}",
                "hash": "8915607e3ece2bdc640ed1eb8522076131e2a973b6ef7495073facf79c670065",
                "shortHash": "8915607e"
              },
              "responseNames": [
                "node"
              ],
              "dependencies": [
                1
              ]
            },
            {
              "id": 4,
              "type": "Operation",
              "schema": "A",
              "operation": {
                "name": "Op_7c1d9f5d_4",
                "kind": "Query",
                "document": "query Op_7c1d9f5d_4(\n  $__fusion_1_title: String!\n) {\n  discussionByName(title: $__fusion_1_title) {\n    commentCount\n  }\n}",
                "hash": "b84128cd5befc64e4bc6655dbbedada580daa2ce1eddbf30d34744cf6b37461a",
                "shortHash": "b84128cd"
              },
              "responseNames": [
                "commentCount"
              ],
              "source": "$.discussionByName",
              "target": "$.node\u003CDiscussion\u003E",
              "requirements": [
                {
                  "name": "__fusion_1_title",
                  "type": "String!",
                  "path": "$.node\u003CDiscussion\u003E",
                  "selectionMap": "title"
                }
              ],
              "forwardedVariables": [],
              "dependencies": [
                3
              ]
            }
          ]
        }
      }
    }
  }
sourceSchemas:
  - name: A
    schema: >-
      schema {
        query: Query
      }
      
      type Discussion {
        id: ID!
        title: String!
        commentCount: Int!
      }
      
      type Query {
        discussionByName(title: String! @is(field: "title")): Discussion @lookup
      }
      
      """
      The @is directive is utilized on lookup fields to describe how the arguments
      can be mapped from the entity type that the lookup field resolves.
      """
      directive @is("The field selection map syntax." field: FieldSelectionMap!) on ARGUMENT_DEFINITION
      
      """
      The @lookup directive is used within a source schema to specify output fields
      that can be used by the distributed GraphQL executor to resolve an entity by
      a stable key.
      """
      directive @lookup on FIELD_DEFINITION
      
      scalar FieldSelectionMap
      
      scalar FieldSelectionSet
    interactions:
      - request: {"query":"query Op_7c1d9f5d_4(\n  $__fusion_1_title: String!\n) {\n  discussionByName(title: $__fusion_1_title) {\n    commentCount\n  }\n}","variables":{"__fusion_1_title":"Discussion: RGlzY3Vzc2lvbjox"}}
        response: {"data":{"discussionByName":{"commentCount":123}}}
  - name: B
    schema: >-
      schema {
        query: Query
      }
      
      interface Node {
        id: ID!
      }
      
      type Discussion implements Node {
        id: ID!
        title: String!
      }
      
      type Query {
        node(id: ID!): Node @lookup
        discussionById(discussionId: ID! @is(field: "id")): Discussion @lookup
      }
      
      """
      The @is directive is utilized on lookup fields to describe how the arguments
      can be mapped from the entity type that the lookup field resolves.
      """
      directive @is("The field selection map syntax." field: FieldSelectionMap!) on ARGUMENT_DEFINITION
      
      """
      The @lookup directive is used within a source schema to specify output fields
      that can be used by the distributed GraphQL executor to resolve an entity by
      a stable key.
      """
      directive @lookup on FIELD_DEFINITION
      
      scalar FieldSelectionMap
      
      scalar FieldSelectionSet
    interactions:
      - request: {"query":"query Op_7c1d9f5d_3 {\n  node: discussionById(discussionId: \u0022RGlzY3Vzc2lvbjox\u0022) {\n    __typename\n    title\n  }\n}"}
        response: {"data":{"node":{"__typename":"Discussion","title":"Discussion: RGlzY3Vzc2lvbjox"}}}
