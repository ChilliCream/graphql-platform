name: Object_List_Union_List_Concrete_Type_Has_Dependency
request:
  document: >-
    query testQuery {
      users {
        posts {
          ... on Photo {
            subgraph2
          }
          ... on Discussion {
            subgraph1
          }
        }
      }
    }
response: >-
  {
    "data": {
      "users": [
        {
          "posts": [
            {
              "subgraph2": "Photo: UGhvdG86MTA="
            },
            {
              "subgraph1": "Discussion: RGlzY3Vzc2lvbjoxMQ=="
            },
            {
              "subgraph2": "Photo: UGhvdG86MTI="
            }
          ]
        },
        {
          "posts": [
            {
              "subgraph2": "Photo: UGhvdG86Nw=="
            },
            {
              "subgraph1": "Discussion: RGlzY3Vzc2lvbjo4"
            },
            {
              "subgraph2": "Photo: UGhvdG86OQ=="
            }
          ]
        },
        {
          "posts": [
            {
              "subgraph2": "Photo: UGhvdG86NA=="
            },
            {
              "subgraph1": "Discussion: RGlzY3Vzc2lvbjo1"
            },
            {
              "subgraph2": "Photo: UGhvdG86Ng=="
            }
          ]
        }
      ]
    },
    "extensions": {
      "fusion": {
        "operationPlan": {
          "id": "505c881381684719373c8ee21122cd4914da2df3cd389d0007a96c45a4b786d6",
          "operation": {
            "name": "testQuery",
            "kind": "Query",
            "document": "query testQuery {\n  users {\n    posts {\n      __typename @fusion__requirement\n      ... on Photo {\n        subgraph2\n        id @fusion__requirement\n      }\n      ... on Discussion {\n        subgraph1\n      }\n    }\n  }\n}",
            "id": "e46e034a61084490859d3bc0946c71a4",
            "hash": "e46e034a61084490859d3bc0946c71a4",
            "shortHash": "e46e034a"
          },
          "searchSpace": 1,
          "nodes": [
            {
              "id": 1,
              "type": "Operation",
              "schema": "A",
              "operation": {
                "name": "testQuery_e46e034a_1",
                "kind": "Query",
                "document": "query testQuery_e46e034a_1 {\n  users {\n    posts {\n      __typename\n      ... on Photo {\n        id\n      }\n      ... on Discussion {\n        subgraph1\n      }\n    }\n  }\n}",
                "hash": "0cee6f3137371de7c09df29a7a679340a35b9a985487c5bd58ff63807b28301f",
                "shortHash": "0cee6f31"
              },
              "responseNames": [
                "users"
              ]
            },
            {
              "id": 2,
              "type": "Operation",
              "schema": "B",
              "operation": {
                "name": "testQuery_e46e034a_2",
                "kind": "Query",
                "document": "query testQuery_e46e034a_2(\n  $__fusion_1_id: ID!\n) {\n  photoById(id: $__fusion_1_id) {\n    subgraph2\n  }\n}",
                "hash": "b00716208d21000f24bd3d2477f4f4039d0af03e165284f32e2bd74cf626ff88",
                "shortHash": "b0071620"
              },
              "responseNames": [
                "subgraph2"
              ],
              "source": "$.photoById",
              "target": "$.users.posts\u003CPhoto\u003E",
              "requirements": [
                {
                  "name": "__fusion_1_id",
                  "type": "ID!",
                  "path": "$.users.posts\u003CPhoto\u003E",
                  "selectionMap": "id"
                }
              ],
              "forwardedVariables": [],
              "dependencies": [
                1
              ]
            }
          ]
        }
      }
    }
  }
sourceSchemas:
  - name: A
    schema: >-
      schema {
        query: Query
      }
      
      type Discussion {
        id: ID!
        subgraph1: String
      }
      
      type Photo @key(fields: "id") {
        id: ID!
      }
      
      type Query {
        users: [User]
      }
      
      type User {
        posts: [Post]
      }
      
      union Post = Photo | Discussion
      
      """
      The @key directive is used to designate an entity's unique key,
      which identifies how to uniquely reference an instance of
      an entity across different source schemas.
      """
      directive @key("The field selection set syntax." fields: FieldSelectionSet!) on OBJECT | INTERFACE
      
      scalar FieldSelectionMap
      
      scalar FieldSelectionSet
    interactions:
      - request: {"query":"query testQuery_e46e034a_1 {\n  users {\n    posts {\n      __typename\n      ... on Photo {\n        id\n      }\n      ... on Discussion {\n        subgraph1\n      }\n    }\n  }\n}"}
        response: {"data":{"users":[{"posts":[{"__typename":"Photo","id":"UGhvdG86MTA="},{"__typename":"Discussion","subgraph1":"Discussion: RGlzY3Vzc2lvbjoxMQ=="},{"__typename":"Photo","id":"UGhvdG86MTI="}]},{"posts":[{"__typename":"Photo","id":"UGhvdG86Nw=="},{"__typename":"Discussion","subgraph1":"Discussion: RGlzY3Vzc2lvbjo4"},{"__typename":"Photo","id":"UGhvdG86OQ=="}]},{"posts":[{"__typename":"Photo","id":"UGhvdG86NA=="},{"__typename":"Discussion","subgraph1":"Discussion: RGlzY3Vzc2lvbjo1"},{"__typename":"Photo","id":"UGhvdG86Ng=="}]}]}}
  - name: B
    schema: >-
      schema {
        query: Query
      }
      
      type Photo @key(fields: "id") {
        id: ID!
        subgraph2: String!
      }
      
      type Query {
        photoById(id: ID!): Photo @lookup
      }
      
      """
      The @key directive is used to designate an entity's unique key,
      which identifies how to uniquely reference an instance of
      an entity across different source schemas.
      """
      directive @key("The field selection set syntax." fields: FieldSelectionSet!) on OBJECT | INTERFACE
      
      """
      The @lookup directive is used within a source schema to specify output fields
      that can be used by the distributed GraphQL executor to resolve an entity by
      a stable key.
      """
      directive @lookup on FIELD_DEFINITION
      
      scalar FieldSelectionMap
      
      scalar FieldSelectionSet
    interactions:
      - request: {"query":"query testQuery_e46e034a_2(\n  $__fusion_1_id: ID!\n) {\n  photoById(id: $__fusion_1_id) {\n    subgraph2\n  }\n}","variables":[{"__fusion_1_id":"UGhvdG86MTA="},{"__fusion_1_id":"UGhvdG86MTI="},{"__fusion_1_id":"UGhvdG86Nw=="},{"__fusion_1_id":"UGhvdG86OQ=="},{"__fusion_1_id":"UGhvdG86NA=="},{"__fusion_1_id":"UGhvdG86Ng=="}]}
        response: {"variableIndex":0,"data":{"photoById":{"subgraph2":"Photo: UGhvdG86MTA="}}}
{"variableIndex":1,"data":{"photoById":{"subgraph2":"Photo: UGhvdG86MTI="}}}
{"variableIndex":2,"data":{"photoById":{"subgraph2":"Photo: UGhvdG86Nw=="}}}
{"variableIndex":3,"data":{"photoById":{"subgraph2":"Photo: UGhvdG86OQ=="}}}
{"variableIndex":4,"data":{"photoById":{"subgraph2":"Photo: UGhvdG86NA=="}}}
{"variableIndex":5,"data":{"photoById":{"subgraph2":"Photo: UGhvdG86Ng=="}}}

