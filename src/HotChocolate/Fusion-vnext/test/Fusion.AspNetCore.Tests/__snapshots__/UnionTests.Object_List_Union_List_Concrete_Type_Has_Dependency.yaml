title: Object_List_Union_List_Concrete_Type_Has_Dependency
request:
  document: >-
    query testQuery {
      users {
        posts {
          ... on Photo {
            subgraph2
          }
          ... on Discussion {
            subgraph1
          }
        }
      }
    }
response:
  body: >-
    {
      "data": {
        "users": [
          {
            "posts": [
              {
                "subgraph2": "Photo: UGhvdG86MTA="
              },
              {
                "subgraph1": "Discussion: RGlzY3Vzc2lvbjoxMQ=="
              },
              {
                "subgraph2": "Photo: UGhvdG86MTI="
              }
            ]
          },
          {
            "posts": [
              {
                "subgraph2": "Photo: UGhvdG86Nw=="
              },
              {
                "subgraph1": "Discussion: RGlzY3Vzc2lvbjo4"
              },
              {
                "subgraph2": "Photo: UGhvdG86OQ=="
              }
            ]
          },
          {
            "posts": [
              {
                "subgraph2": "Photo: UGhvdG86NA=="
              },
              {
                "subgraph1": "Discussion: RGlzY3Vzc2lvbjo1"
              },
              {
                "subgraph2": "Photo: UGhvdG86Ng=="
              }
            ]
          }
        ]
      }
    }
sourceSchemas:
  - name: A
    schema: >-
      schema {
        query: Query
      }
      
      type Discussion {
        id: ID!
        subgraph1: String
      }
      
      type Photo @key(fields: "id") {
        id: ID!
      }
      
      type Query {
        users: [User]
      }
      
      type User {
        posts: [Post]
      }
      
      union Post = Photo | Discussion
    interactions:
      - request:
          body: >-
            {"query":"query testQuery_e46e034a_1 {\n  users {\n    posts {\n      __typename\n      ... on Photo {\n        id\n      }\n      ... on Discussion {\n        subgraph1\n      }\n    }\n  }\n}"}
        response:
          body: >-
            {"data":{"users":[{"posts":[{"__typename":"Photo","id":"UGhvdG86MTA="},{"__typename":"Discussion","subgraph1":"Discussion: RGlzY3Vzc2lvbjoxMQ=="},{"__typename":"Photo","id":"UGhvdG86MTI="}]},{"posts":[{"__typename":"Photo","id":"UGhvdG86Nw=="},{"__typename":"Discussion","subgraph1":"Discussion: RGlzY3Vzc2lvbjo4"},{"__typename":"Photo","id":"UGhvdG86OQ=="}]},{"posts":[{"__typename":"Photo","id":"UGhvdG86NA=="},{"__typename":"Discussion","subgraph1":"Discussion: RGlzY3Vzc2lvbjo1"},{"__typename":"Photo","id":"UGhvdG86Ng=="}]}]}}
  - name: B
    schema: >-
      schema {
        query: Query
      }
      
      type Photo @key(fields: "id") {
        id: ID!
        subgraph2: String!
      }
      
      type Query {
        photoById(id: ID!): Photo @lookup
      }
    interactions:
      - request:
          body: >-
            {"query":"query testQuery_e46e034a_2(\n  $__fusion_1_id: ID!\n) {\n  photoById(id: $__fusion_1_id) {\n    subgraph2\n  }\n}","variables":[{"__fusion_1_id":"UGhvdG86MTA="},{"__fusion_1_id":"UGhvdG86MTI="},{"__fusion_1_id":"UGhvdG86Nw=="},{"__fusion_1_id":"UGhvdG86OQ=="},{"__fusion_1_id":"UGhvdG86NA=="},{"__fusion_1_id":"UGhvdG86Ng=="}]}
        response:
          body: >-
            {"variableIndex":0,"data":{"photoById":{"subgraph2":"Photo: UGhvdG86MTA="}}}
            {"variableIndex":1,"data":{"photoById":{"subgraph2":"Photo: UGhvdG86MTI="}}}
            {"variableIndex":2,"data":{"photoById":{"subgraph2":"Photo: UGhvdG86Nw=="}}}
            {"variableIndex":3,"data":{"photoById":{"subgraph2":"Photo: UGhvdG86OQ=="}}}
            {"variableIndex":4,"data":{"photoById":{"subgraph2":"Photo: UGhvdG86NA=="}}}
            {"variableIndex":5,"data":{"photoById":{"subgraph2":"Photo: UGhvdG86Ng=="}}}
operationPlan:
  operation:
    - document: >-
        query testQuery {
          users {
            posts {
              __typename @fusion__requirement
              ... on Photo {
                subgraph2
                id @fusion__requirement
              }
              ... on Discussion {
                subgraph1
              }
            }
          }
        }
      name: testQuery
      hash: e46e034a61084490859d3bc0946c71a4
      searchSpace: 1
  nodes:
    - id: 1
      type: Operation
      schema: A
      operation: >-
        query testQuery_e46e034a_1 {
          users {
            posts {
              __typename
              ... on Photo {
                id
              }
              ... on Discussion {
                subgraph1
              }
            }
          }
        }
    - id: 2
      type: Operation
      schema: B
      operation: >-
        query testQuery_e46e034a_2(
          $__fusion_1_id: ID!
        ) {
          photoById(id: $__fusion_1_id) {
            subgraph2
          }
        }
      source: $.photoById
      target: $.users.posts<Photo>
      requirements:
        - name: __fusion_1_id
          selectionMap: >-
            id
      dependencies:
        - id: 1
