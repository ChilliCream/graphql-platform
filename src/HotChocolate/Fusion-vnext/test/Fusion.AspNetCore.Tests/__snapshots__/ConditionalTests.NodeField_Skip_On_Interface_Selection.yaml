title: NodeField_Skip_On_Interface_Selection
request:
  document: |
    query testQuery(
      $skip: Boolean!
    ) {
      node(id: "RGlzY3Vzc2lvbjox") {
        ... on Authorable {
          author @skip(if: $skip) {
            username
          }
        }
        ... on Discussion {
          title
        }
      }
    }
  variables: |
    {
      "skip": true
    }
response:
  body: |
    {
      "data": {
        "node": {
          "title": "Discussion: RGlzY3Vzc2lvbjox"
        }
      }
    }
sourceSchemas:
  - name: A
    schema: |
      schema {
        query: Query
      }
      
      interface Authorable {
        author: Author
      }
      
      interface Node {
        id: ID!
      }
      
      type Author implements Node {
        id: ID!
      }
      
      type Discussion implements Node & Authorable {
        id: ID!
        title: String
        author: Author
      }
      
      type Query {
        node(id: ID!): Node @lookup
      }
    interactions:
      - request:
          document: |
            query testQuery_7ae73f43_3(
              $skip: Boolean!
            ) {
              node(id: "RGlzY3Vzc2lvbjox") {
                __typename
                ... on Discussion {
                  __typename
                  author @skip(if: $skip) {
                    id
                  }
                  title
                }
              }
            }
          variables: |
            {
              "skip": true
            }
        response:
          results:
            - |
              {
                "data": {
                  "node": {
                    "__typename": "Discussion",
                    "title": "Discussion: RGlzY3Vzc2lvbjox"
                  }
                }
              }
  - name: B
    schema: |
      schema {
        query: Query
      }
      
      type Author {
        id: ID!
        username: String
        rating: Int
      }
      
      type Query {
        authorById(id: ID!): Author @lookup
      }
operationPlan:
  operation:
    - document: |
        query testQuery(
          $skip: Boolean!
        ) {
          node(id: "RGlzY3Vzc2lvbjox") {
            __typename @fusion__requirement
            ... on Authorable {
              author @skip(if: $skip) {
                username
                id @fusion__requirement
              }
            }
            ... on Discussion {
              title
            }
          }
        }
      name: testQuery
      hash: 7ae73f43cd702c36dfd5051c12bf0ce7
      searchSpace: 1
  nodes:
    - id: 1
      type: Node
      idValue: "RGlzY3Vzc2lvbjox"
      responseName: node
      branches:
        - Discussion: 3
      fallback: 2
    - id: 2
      type: Operation
      operation: |
        query testQuery_7ae73f43_2 {
          node(id: "RGlzY3Vzc2lvbjox") {
            __typename
          }
        }
      dependencies:
        - id: 1
    - id: 3
      type: Operation
      schema: A
      operation: |
        query testQuery_7ae73f43_3(
          $skip: Boolean!
        ) {
          node(id: "RGlzY3Vzc2lvbjox") {
            __typename
            ... on Discussion {
              __typename
              author @skip(if: $skip) {
                id
              }
              title
            }
          }
        }
      dependencies:
        - id: 1
    - id: 4
      type: Operation
      schema: B
      operation: |
        query testQuery_7ae73f43_4(
          $__fusion_1_id: ID!
        ) {
          authorById(id: $__fusion_1_id) {
            username
          }
        }
      source: $.authorById
      target: $.node<Discussion>.author
      requirements:
        - name: __fusion_1_id
          selectionMap: >-
            id
      dependencies:
        - id: 3
