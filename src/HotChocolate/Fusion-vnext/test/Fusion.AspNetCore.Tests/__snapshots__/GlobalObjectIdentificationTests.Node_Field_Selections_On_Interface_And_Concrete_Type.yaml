name: Node_Field_Selections_On_Interface_And_Concrete_Type
request:
  document: >-
    query testQuery(
      $id: ID!
    ) {
      node(id: $id) {
        ... on Votable {
          viewerCanVote
        }
        ... on Discussion {
          viewerRating
        }
      }
    }
  variables: >-
    {
      "id": "RGlzY3Vzc2lvbjox"
    }
response: >-
  {
    "data": {
      "node": {
        "viewerCanVote": true,
        "viewerRating": 123.456
      }
    }
  }
sourceSchemas:
  - name: A
    schema: >-
      schema {
        query: Query
      }
      
      interface Node {
        id: ID!
      }
      
      interface Votable {
        viewerCanVote: Boolean!
      }
      
      type Comment implements Node & Votable @key(fields: "id") {
        id: ID!
        viewerCanVote: Boolean!
      }
      
      type Discussion implements Node & Votable @key(fields: "id") {
        id: ID!
        viewerCanVote: Boolean!
        viewerRating: Float!
      }
      
      type Query {
        node(id: ID!): Node @lookup
      }
    interactions:
      - request: {"query":"query testQuery_ef8b97ff_3(\n  $id: ID!\n) {\n  node(id: $id) {\n    __typename\n    ... on Discussion {\n      __typename\n      viewerCanVote\n      viewerRating\n    }\n  }\n}","variables":{"id":"RGlzY3Vzc2lvbjox"}}
        response: {"data":{"node":{"__typename":"Discussion","viewerCanVote":true,"viewerRating":123.456}}}
