name: Object_List_Union_List_Concrete_Type_Selections_Have_Same_Dependency
request:
  document: >-
    query testQuery {
      users {
        posts {
          ... on Photo {
            product {
              subgraph2
            }
          }
          ... on Discussion {
            product {
              subgraph2
            }
          }
        }
      }
    }
response: >-
  {
    "data": {
      "users": [
        {
          "posts": [
            {
              "product": {
                "subgraph2": "Product: UHJvZHVjdDoxNQ=="
              }
            },
            {
              "product": {
                "subgraph2": "Product: UHJvZHVjdDoxNA=="
              }
            },
            {
              "product": {
                "subgraph2": "Product: UHJvZHVjdDoxMw=="
              }
            }
          ]
        },
        {
          "posts": [
            {
              "product": {
                "subgraph2": "Product: UHJvZHVjdDoxOA=="
              }
            },
            {
              "product": {
                "subgraph2": "Product: UHJvZHVjdDoxNw=="
              }
            },
            {
              "product": {
                "subgraph2": "Product: UHJvZHVjdDoxNg=="
              }
            }
          ]
        },
        {
          "posts": [
            {
              "product": {
                "subgraph2": "Product: UHJvZHVjdDoyMQ=="
              }
            },
            {
              "product": {
                "subgraph2": "Product: UHJvZHVjdDoyMA=="
              }
            },
            {
              "product": {
                "subgraph2": "Product: UHJvZHVjdDoxOQ=="
              }
            }
          ]
        }
      ]
    },
    "extensions": {
      "fusion": {
        "operationPlan": {
          "id": "3aef9a1021b6ed5fced579975619173d427345a1771aaf1029539f0d2a90743e",
          "operation": {
            "name": "testQuery",
            "kind": "Query",
            "document": "query testQuery {\n  users {\n    posts {\n      __typename @fusion__requirement\n      ... on Photo {\n        product {\n          subgraph2\n          id @fusion__requirement\n        }\n      }\n      ... on Discussion {\n        product {\n          subgraph2\n          id @fusion__requirement\n        }\n      }\n    }\n  }\n}",
            "id": "3579b17401c33f0dcd43ce108220da63",
            "hash": "3579b17401c33f0dcd43ce108220da63",
            "shortHash": "3579b174"
          },
          "searchSpace": 1,
          "nodes": [
            {
              "id": 1,
              "type": "Operation",
              "schema": "A",
              "operation": {
                "name": "testQuery_3579b174_1",
                "kind": "Query",
                "document": "query testQuery_3579b174_1 {\n  users {\n    posts {\n      __typename\n      ... on Photo {\n        product {\n          id\n        }\n      }\n      ... on Discussion {\n        product {\n          id\n        }\n      }\n    }\n  }\n}",
                "hash": "7e9207e4482036a3d4c6977778ac248d3048f908b5312ba06d43795df090a708",
                "shortHash": "7e9207e4"
              },
              "responseNames": [
                "users"
              ]
            },
            {
              "id": 2,
              "type": "Operation",
              "schema": "B",
              "operation": {
                "name": "testQuery_3579b174_2",
                "kind": "Query",
                "document": "query testQuery_3579b174_2(\n  $__fusion_1_id: ID!\n) {\n  productById(id: $__fusion_1_id) {\n    subgraph2\n  }\n}",
                "hash": "c2f95e27b7b97503e40e7f88f87d7e515c1f7e2179028f13287314417ac44102",
                "shortHash": "c2f95e27"
              },
              "responseNames": [
                "subgraph2"
              ],
              "source": "$.productById",
              "target": "$.users.posts\u003CDiscussion\u003E.product",
              "requirements": [
                {
                  "name": "__fusion_1_id",
                  "type": "ID!",
                  "path": "$.users.posts\u003CDiscussion\u003E.product",
                  "selectionMap": "id"
                }
              ],
              "forwardedVariables": [],
              "dependencies": [
                1
              ]
            },
            {
              "id": 3,
              "type": "Operation",
              "schema": "B",
              "operation": {
                "name": "testQuery_3579b174_3",
                "kind": "Query",
                "document": "query testQuery_3579b174_3(\n  $__fusion_2_id: ID!\n) {\n  productById(id: $__fusion_2_id) {\n    subgraph2\n  }\n}",
                "hash": "fb259a03114e8e7d0fa3ce89fcefeb082054b538ab05cda1fc7331967303a798",
                "shortHash": "fb259a03"
              },
              "responseNames": [
                "subgraph2"
              ],
              "source": "$.productById",
              "target": "$.users.posts\u003CPhoto\u003E.product",
              "requirements": [
                {
                  "name": "__fusion_2_id",
                  "type": "ID!",
                  "path": "$.users.posts\u003CPhoto\u003E.product",
                  "selectionMap": "id"
                }
              ],
              "forwardedVariables": [],
              "dependencies": [
                1
              ]
            }
          ]
        }
      }
    }
  }
sourceSchemas:
  - name: A
    schema: >-
      schema {
        query: Query
      }
      
      type Discussion {
        id: ID!
        product: Product
      }
      
      type Photo {
        id: ID!
        product: Product
      }
      
      type Product @key(fields: "id") {
        id: ID!
      }
      
      type Query {
        users: [User]
      }
      
      type User {
        posts: [Post]
      }
      
      union Post = Photo | Discussion
      
      """
      The @key directive is used to designate an entity's unique key,
      which identifies how to uniquely reference an instance of
      an entity across different source schemas.
      """
      directive @key("The field selection set syntax." fields: FieldSelectionSet!) on OBJECT | INTERFACE
      
      scalar FieldSelectionMap
      
      scalar FieldSelectionSet
    interactions:
      - request: {"query":"query testQuery_3579b174_1 {\n  users {\n    posts {\n      __typename\n      ... on Photo {\n        product {\n          id\n        }\n      }\n      ... on Discussion {\n        product {\n          id\n        }\n      }\n    }\n  }\n}"}
        response: 
  - name: B
    schema: >-
      schema {
        query: Query
      }
      
      type Product @key(fields: "id") {
        id: ID!
        subgraph2: String!
      }
      
      type Query {
        productById(id: ID!): Product @lookup
      }
      
      """
      The @key directive is used to designate an entity's unique key,
      which identifies how to uniquely reference an instance of
      an entity across different source schemas.
      """
      directive @key("The field selection set syntax." fields: FieldSelectionSet!) on OBJECT | INTERFACE
      
      """
      The @lookup directive is used within a source schema to specify output fields
      that can be used by the distributed GraphQL executor to resolve an entity by
      a stable key.
      """
      directive @lookup on FIELD_DEFINITION
      
      scalar FieldSelectionMap
      
      scalar FieldSelectionSet
    interactions:
      - request: {"query":"query testQuery_3579b174_2(\n  $__fusion_1_id: ID!\n) {\n  productById(id: $__fusion_1_id) {\n    subgraph2\n  }\n}","variables":[{"__fusion_1_id":"UHJvZHVjdDoxNA=="},{"__fusion_1_id":"UHJvZHVjdDoxNw=="},{"__fusion_1_id":"UHJvZHVjdDoyMA=="}]}
        response: 
      - request: {"query":"query testQuery_3579b174_3(\n  $__fusion_2_id: ID!\n) {\n  productById(id: $__fusion_2_id) {\n    subgraph2\n  }\n}","variables":[{"__fusion_2_id":"UHJvZHVjdDoxNQ=="},{"__fusion_2_id":"UHJvZHVjdDoxMw=="},{"__fusion_2_id":"UHJvZHVjdDoxOA=="},{"__fusion_2_id":"UHJvZHVjdDoxNg=="},{"__fusion_2_id":"UHJvZHVjdDoyMQ=="},{"__fusion_2_id":"UHJvZHVjdDoxOQ=="}]}
        response: 
