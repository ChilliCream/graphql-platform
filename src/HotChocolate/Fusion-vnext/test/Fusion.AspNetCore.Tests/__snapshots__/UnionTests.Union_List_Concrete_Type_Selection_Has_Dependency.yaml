title: Union_List_Concrete_Type_Selection_Has_Dependency
request:
  document: |
    query testQuery {
      posts {
        ... on Photo {
          product {
            subgraph2
          }
        }
        ... on Discussion {
          author {
            subgraph3
          }
        }
      }
    }
response:
  body: |
    {
      "data": {
        "posts": [
          {
            "product": {
              "subgraph2": "Product: UHJvZHVjdDo2"
            }
          },
          {
            "author": {
              "subgraph3": "Author: QXV0aG9yOjU="
            }
          },
          {
            "product": {
              "subgraph2": "Product: UHJvZHVjdDo0"
            }
          }
        ]
      }
    }
sourceSchemas:
  - name: A
    schema: |
      schema {
        query: Query
      }
      
      type Author @key(fields: "id") {
        id: ID!
      }
      
      type Discussion {
        id: ID!
        author: Author
      }
      
      type Photo {
        id: ID!
        product: Product
      }
      
      type Product @key(fields: "id") {
        id: ID!
      }
      
      type Query {
        posts: [Post]
      }
      
      union Post = Photo | Discussion
    interactions:
      - request:
          body: |
            {"query":"query testQuery_c164a236_1 {\n  posts {\n    __typename\n    ... on Photo {\n      product {\n        id\n      }\n    }\n    ... on Discussion {\n      author {\n        id\n      }\n    }\n  }\n}"}
        response:
          results:
            - |
              {
                "data": {
                  "posts": [
                    {
                      "__typename": "Photo",
                      "product": {
                        "id": "UHJvZHVjdDo2"
                      }
                    },
                    {
                      "__typename": "Discussion",
                      "author": {
                        "id": "QXV0aG9yOjU="
                      }
                    },
                    {
                      "__typename": "Photo",
                      "product": {
                        "id": "UHJvZHVjdDo0"
                      }
                    }
                  ]
                }
              }
  - name: B
    schema: |
      schema {
        query: Query
      }
      
      type Product @key(fields: "id") {
        id: ID!
        subgraph2: String!
      }
      
      type Query {
        productById(id: ID!): Product @lookup
      }
    interactions:
      - request:
          body: |
            {"query":"query testQuery_c164a236_3(\n  $__fusion_2_id: ID!\n) {\n  productById(id: $__fusion_2_id) {\n    subgraph2\n  }\n}","variables":[{"__fusion_2_id":"UHJvZHVjdDo2"},{"__fusion_2_id":"UHJvZHVjdDo0"}]}
        response:
          results:
            - |
              {
                "data": {
                  "productById": {
                    "subgraph2": "Product: UHJvZHVjdDo2"
                  }
                }
              }
            - |
              {
                "data": {
                  "productById": {
                    "subgraph2": "Product: UHJvZHVjdDo0"
                  }
                }
              }
  - name: C
    schema: |
      schema {
        query: Query
      }
      
      type Author @key(fields: "id") {
        id: ID!
        subgraph3: String!
      }
      
      type Query {
        authorById(id: ID!): Author @lookup
      }
    interactions:
      - request:
          body: |
            {"query":"query testQuery_c164a236_2(\n  $__fusion_1_id: ID!\n) {\n  authorById(id: $__fusion_1_id) {\n    subgraph3\n  }\n}","variables":{"__fusion_1_id":"QXV0aG9yOjU="}}
        response:
          results:
            - |
              {
                "data": {
                  "authorById": {
                    "subgraph3": "Author: QXV0aG9yOjU="
                  }
                }
              }
operationPlan:
  operation:
    - document: |
        query testQuery {
          posts {
            __typename @fusion__requirement
            ... on Photo {
              product {
                subgraph2
                id @fusion__requirement
              }
            }
            ... on Discussion {
              author {
                subgraph3
                id @fusion__requirement
              }
            }
          }
        }
      name: testQuery
      hash: c164a236fc35b156db3c4c5634499687
      searchSpace: 1
  nodes:
    - id: 1
      type: Operation
      schema: A
      operation: |
        query testQuery_c164a236_1 {
          posts {
            __typename
            ... on Photo {
              product {
                id
              }
            }
            ... on Discussion {
              author {
                id
              }
            }
          }
        }
    - id: 2
      type: Operation
      schema: C
      operation: |
        query testQuery_c164a236_2(
          $__fusion_1_id: ID!
        ) {
          authorById(id: $__fusion_1_id) {
            subgraph3
          }
        }
      source: $.authorById
      target: $.posts<Discussion>.author
      requirements:
        - name: __fusion_1_id
          selectionMap: >-
            id
      dependencies:
        - id: 1
    - id: 3
      type: Operation
      schema: B
      operation: |
        query testQuery_c164a236_3(
          $__fusion_2_id: ID!
        ) {
          productById(id: $__fusion_2_id) {
            subgraph2
          }
        }
      source: $.productById
      target: $.posts<Photo>.product
      requirements:
        - name: __fusion_2_id
          selectionMap: >-
            id
      dependencies:
        - id: 1
