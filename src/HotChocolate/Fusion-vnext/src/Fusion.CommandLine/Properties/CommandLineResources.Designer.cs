//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HotChocolate.Fusion.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class CommandLineResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal CommandLineResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("HotChocolate.Fusion.Properties.CommandLineResources", typeof(CommandLineResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ERR.
        /// </summary>
        internal static string ComposeCommand_AbbreviatedSeverity_Error {
            get {
                return ResourceManager.GetString("ComposeCommand_AbbreviatedSeverity_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INF.
        /// </summary>
        internal static string ComposeCommand_AbbreviatedSeverity_Info {
            get {
                return ResourceManager.GetString("ComposeCommand_AbbreviatedSeverity_Info", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WRN.
        /// </summary>
        internal static string ComposeCommand_AbbreviatedSeverity_Warning {
            get {
                return ResourceManager.GetString("ComposeCommand_AbbreviatedSeverity_Warning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the path at which to write the composite schema file..
        /// </summary>
        internal static string ComposeCommand_CompositeSchemaFile_Description {
            get {
                return ResourceManager.GetString("ComposeCommand_CompositeSchemaFile_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ✅ Composite schema written to &apos;{0}&apos;..
        /// </summary>
        internal static string ComposeCommand_CompositeSchemaFile_Written {
            get {
                return ResourceManager.GetString("ComposeCommand_CompositeSchemaFile_Written", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Composes multiple source schemas into a single composite schema..
        /// </summary>
        internal static string ComposeCommand_Description {
            get {
                return ResourceManager.GetString("ComposeCommand_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ❌ No GraphQL schema files were found in the working directory..
        /// </summary>
        internal static string ComposeCommand_Error_NoSourceSchemaFilesFound {
            get {
                return ResourceManager.GetString("ComposeCommand_Error_NoSourceSchemaFilesFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ❌ Source schema file &apos;{0}&apos; does not exist..
        /// </summary>
        internal static string ComposeCommand_Error_SourceSchemaFileDoesNotExist {
            get {
                return ResourceManager.GetString("ComposeCommand_Error_SourceSchemaFileDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ❌ Working directory &apos;{0}&apos; does not exist..
        /// </summary>
        internal static string ComposeCommand_Error_WorkingDirectoryDoesNotExist {
            get {
                return ResourceManager.GetString("ComposeCommand_Error_WorkingDirectoryDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the path to a source schema file (.graphqls) to include in the composition..
        /// </summary>
        internal static string ComposeCommand_SourceSchemaFile_Description {
            get {
                return ResourceManager.GetString("ComposeCommand_SourceSchemaFile_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets the working directory for the command..
        /// </summary>
        internal static string ComposeCommand_WorkingDirectory_Description {
            get {
                return ResourceManager.GetString("ComposeCommand_WorkingDirectory_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fusion CLI.
        /// </summary>
        internal static string RootCommand_Description {
            get {
                return ResourceManager.GetString("RootCommand_Description", resourceCulture);
            }
        }
    }
}
