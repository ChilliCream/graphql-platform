//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HotChocolate.Fusion.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class CompositionResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal CompositionResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("HotChocolate.Fusion.Properties.CompositionResources", typeof(CompositionResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Post-merge validation failed..
        /// </summary>
        internal static string ErrorHelper_PostMergeValidationFailed {
            get {
                return ResourceManager.GetString("ErrorHelper_PostMergeValidationFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pre-merge validation failed..
        /// </summary>
        internal static string ErrorHelper_PreMergeValidationFailed {
            get {
                return ResourceManager.GetString("ErrorHelper_PreMergeValidationFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Source schema parsing failed..
        /// </summary>
        internal static string ErrorHelper_SourceSchemaParsingFailed {
            get {
                return ResourceManager.GetString("ErrorHelper_SourceSchemaParsingFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Source schema validation failed..
        /// </summary>
        internal static string ErrorHelper_SourceSchemaValidationFailed {
            get {
                return ResourceManager.GetString("ErrorHelper_SourceSchemaValidationFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The @external directive indicates that a field is recognized by the current source schema but is not directly contributed (resolved) by it..
        /// </summary>
        internal static string ExternalMutableDirectiveDefinition_Description {
            get {
                return ResourceManager.GetString("ExternalMutableDirectiveDefinition_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the source schema that provides the specified enum value..
        /// </summary>
        internal static string FusionEnumValueMutableDirectiveDefinition_Argument_Schema_Description {
            get {
                return ResourceManager.GetString("FusionEnumValueMutableDirectiveDefinition_Argument_Schema_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The @fusion__enumValue directive specifies which source schema provides an enum value..
        /// </summary>
        internal static string FusionEnumValueMutableDirectiveDefinition_Description {
            get {
                return ResourceManager.GetString("FusionEnumValueMutableDirectiveDefinition_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates that this field is only partially provided and must be combined with `provides`..
        /// </summary>
        internal static string FusionFieldMutableDirectiveDefinition_Argument_Partial_Description {
            get {
                return ResourceManager.GetString("FusionFieldMutableDirectiveDefinition_Argument_Partial_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A selection set of fields this field provides in the composite schema..
        /// </summary>
        internal static string FusionFieldMutableDirectiveDefinition_Argument_Provides_Description {
            get {
                return ResourceManager.GetString("FusionFieldMutableDirectiveDefinition_Argument_Provides_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the source schema that originally provided this field..
        /// </summary>
        internal static string FusionFieldMutableDirectiveDefinition_Argument_Schema_Description {
            get {
                return ResourceManager.GetString("FusionFieldMutableDirectiveDefinition_Argument_Schema_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The field type in the source schema if it differs in nullability or structure..
        /// </summary>
        internal static string FusionFieldMutableDirectiveDefinition_Argument_SourceType_Description {
            get {
                return ResourceManager.GetString("FusionFieldMutableDirectiveDefinition_Argument_SourceType_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The @fusion__field directive specifies which source schema provides a field in a composite type and what execution behavior it has..
        /// </summary>
        internal static string FusionFieldMutableDirectiveDefinition_Description {
            get {
                return ResourceManager.GetString("FusionFieldMutableDirectiveDefinition_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the interface type..
        /// </summary>
        internal static string FusionImplementsMutableDirectiveDefinition_Argument_Interface_Description {
            get {
                return ResourceManager.GetString("FusionImplementsMutableDirectiveDefinition_Argument_Interface_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the source schema on which the annotated type implements the specified interface..
        /// </summary>
        internal static string FusionImplementsMutableDirectiveDefinition_Argument_Schema_Description {
            get {
                return ResourceManager.GetString("FusionImplementsMutableDirectiveDefinition_Argument_Schema_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The @fusion__implements directive specifies on which source schema an interface is implemented by an object or interface type..
        /// </summary>
        internal static string FusionImplementsMutableDirectiveDefinition_Description {
            get {
                return ResourceManager.GetString("FusionImplementsMutableDirectiveDefinition_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the source schema that originally provided this input field..
        /// </summary>
        internal static string FusionInputFieldMutableDirectiveDefinition_Argument_Schema_Description {
            get {
                return ResourceManager.GetString("FusionInputFieldMutableDirectiveDefinition_Argument_Schema_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The field type in the source schema if it differs in nullability or structure..
        /// </summary>
        internal static string FusionInputFieldMutableDirectiveDefinition_Argument_SourceType_Description {
            get {
                return ResourceManager.GetString("FusionInputFieldMutableDirectiveDefinition_Argument_SourceType_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The @fusion__inputField directive specifies which source schema provides an input field in a composite input type..
        /// </summary>
        internal static string FusionInputFieldMutableDirectiveDefinition_Description {
            get {
                return ResourceManager.GetString("FusionInputFieldMutableDirectiveDefinition_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The GraphQL field definition in the source schema that can be used to look up the entity..
        /// </summary>
        internal static string FusionLookupMutableDirectiveDefinition_Argument_Field_Description {
            get {
                return ResourceManager.GetString("FusionLookupMutableDirectiveDefinition_Argument_Field_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A selection set on the annotated entity type that describes the stable key for the lookup..
        /// </summary>
        internal static string FusionLookupMutableDirectiveDefinition_Argument_Key_Description {
            get {
                return ResourceManager.GetString("FusionLookupMutableDirectiveDefinition_Argument_Key_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The map describes how the key values are resolved from the annotated entity type..
        /// </summary>
        internal static string FusionLookupMutableDirectiveDefinition_Argument_Map_Description {
            get {
                return ResourceManager.GetString("FusionLookupMutableDirectiveDefinition_Argument_Map_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path to the lookup field relative to the Query type..
        /// </summary>
        internal static string FusionLookupMutableDirectiveDefinition_Argument_Path_Description {
            get {
                return ResourceManager.GetString("FusionLookupMutableDirectiveDefinition_Argument_Path_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the source schema where the annotated entity type can be looked up from..
        /// </summary>
        internal static string FusionLookupMutableDirectiveDefinition_Argument_Schema_Description {
            get {
                return ResourceManager.GetString("FusionLookupMutableDirectiveDefinition_Argument_Schema_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The @fusion__lookup directive specifies how the distributed executor can resolve data for an entity type from a source schema by a stable key..
        /// </summary>
        internal static string FusionLookupMutableDirectiveDefinition_Description {
            get {
                return ResourceManager.GetString("FusionLookupMutableDirectiveDefinition_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The @fusion__requires directive specifies if a field has requirements on a source schema..
        /// </summary>
        internal static string FusionRequiresMutableDirectiveDefinition_Description {
            get {
                return ResourceManager.GetString("FusionRequiresMutableDirectiveDefinition_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The GraphQL field definition in the source schema that this field depends on..
        /// </summary>
        internal static string FusionRequiresMutableDirectiveDefinition_Field_Description {
            get {
                return ResourceManager.GetString("FusionRequiresMutableDirectiveDefinition_Field_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The map describes how the argument values for the source schema are resolved from the arguments of the field exposed in the client-facing composite schema and from required data relative to the current type..
        /// </summary>
        internal static string FusionRequiresMutableDirectiveDefinition_Map_Description {
            get {
                return ResourceManager.GetString("FusionRequiresMutableDirectiveDefinition_Map_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A selection set on the annotated field that describes its requirements..
        /// </summary>
        internal static string FusionRequiresMutableDirectiveDefinition_Requirements_Description {
            get {
                return ResourceManager.GetString("FusionRequiresMutableDirectiveDefinition_Requirements_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the source schema where this field has requirements to data on other source schemas..
        /// </summary>
        internal static string FusionRequiresMutableDirectiveDefinition_Schema_Description {
            get {
                return ResourceManager.GetString("FusionRequiresMutableDirectiveDefinition_Schema_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the source schema that originally provided part of the annotated type..
        /// </summary>
        internal static string FusionTypeMutableDirectiveDefinition_Argument_Schema_Description {
            get {
                return ResourceManager.GetString("FusionTypeMutableDirectiveDefinition_Argument_Schema_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The @fusion__type directive specifies which source schemas provide parts of a composite type..
        /// </summary>
        internal static string FusionTypeMutableDirectiveDefinition_Description {
            get {
                return ResourceManager.GetString("FusionTypeMutableDirectiveDefinition_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the member type..
        /// </summary>
        internal static string FusionUnionMemberMutableDirectiveDefinition_Argument_Member_Description {
            get {
                return ResourceManager.GetString("FusionUnionMemberMutableDirectiveDefinition_Argument_Member_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the source schema that provides the specified member type..
        /// </summary>
        internal static string FusionUnionMemberMutableDirectiveDefinition_Argument_Schema_Description {
            get {
                return ResourceManager.GetString("FusionUnionMemberMutableDirectiveDefinition_Argument_Schema_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The @fusion__unionMember directive specifies which source schema provides a member type of a union..
        /// </summary>
        internal static string FusionUnionMemberMutableDirectiveDefinition_Description {
            get {
                return ResourceManager.GetString("FusionUnionMemberMutableDirectiveDefinition_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The @inaccessible directive is used to prevent specific type system members from being accessible through the client-facing composite schema, even if they are accessible in the underlying source schemas..
        /// </summary>
        internal static string InaccessibleMutableDirectiveDefinition_Description {
            get {
                return ResourceManager.GetString("InaccessibleMutableDirectiveDefinition_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The @internal directive is used to mark types and fields as internal within a source schema..
        /// </summary>
        internal static string InternalMutableDirectiveDefinition_Description {
            get {
                return ResourceManager.GetString("InternalMutableDirectiveDefinition_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Represents a selection path map syntax..
        /// </summary>
        internal static string IsMutableDirectiveDefinition_Argument_Field_Description {
            get {
                return ResourceManager.GetString("IsMutableDirectiveDefinition_Argument_Field_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The @is directive is utilized on lookup fields to describe how the arguments can be mapped from the entity type that the lookup field resolves..
        /// </summary>
        internal static string IsMutableDirectiveDefinition_Description {
            get {
                return ResourceManager.GetString("IsMutableDirectiveDefinition_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Represents a selection set syntax..
        /// </summary>
        internal static string KeyMutableDirectiveDefinition_Argument_Fields_Description {
            get {
                return ResourceManager.GetString("KeyMutableDirectiveDefinition_Argument_Fields_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The @key directive is used to designate an entity’s unique key, which identifies how to uniquely reference an instance of an entity across different source schemas..
        /// </summary>
        internal static string KeyMutableDirectiveDefinition_Description {
            get {
                return ResourceManager.GetString("KeyMutableDirectiveDefinition_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The built-in scalar type &apos;{0}&apos; in schema &apos;{1}&apos; is not accessible..
        /// </summary>
        internal static string LogEntryHelper_DisallowedInaccessibleBuiltInScalar {
            get {
                return ResourceManager.GetString("LogEntryHelper_DisallowedInaccessibleBuiltInScalar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The built-in directive argument &apos;{0}&apos; in schema &apos;{1}&apos; is not accessible..
        /// </summary>
        internal static string LogEntryHelper_DisallowedInaccessibleDirectiveArgument {
            get {
                return ResourceManager.GetString("LogEntryHelper_DisallowedInaccessibleDirectiveArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The introspection argument &apos;{0}&apos; in schema &apos;{1}&apos; is not accessible..
        /// </summary>
        internal static string LogEntryHelper_DisallowedInaccessibleIntrospectionArgument {
            get {
                return ResourceManager.GetString("LogEntryHelper_DisallowedInaccessibleIntrospectionArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The introspection field &apos;{0}&apos; in schema &apos;{1}&apos; is not accessible..
        /// </summary>
        internal static string LogEntryHelper_DisallowedInaccessibleIntrospectionField {
            get {
                return ResourceManager.GetString("LogEntryHelper_DisallowedInaccessibleIntrospectionField", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The introspection type &apos;{0}&apos; in schema &apos;{1}&apos; is not accessible..
        /// </summary>
        internal static string LogEntryHelper_DisallowedInaccessibleIntrospectionType {
            get {
                return ResourceManager.GetString("LogEntryHelper_DisallowedInaccessibleIntrospectionType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The merged enum type &apos;{0}&apos; is empty..
        /// </summary>
        internal static string LogEntryHelper_EmptyMergedEnumType {
            get {
                return ResourceManager.GetString("LogEntryHelper_EmptyMergedEnumType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The merged input object type &apos;{0}&apos; is empty..
        /// </summary>
        internal static string LogEntryHelper_EmptyMergedInputObjectType {
            get {
                return ResourceManager.GetString("LogEntryHelper_EmptyMergedInputObjectType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The merged interface type &apos;{0}&apos; is empty..
        /// </summary>
        internal static string LogEntryHelper_EmptyMergedInterfaceType {
            get {
                return ResourceManager.GetString("LogEntryHelper_EmptyMergedInterfaceType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The merged object type &apos;{0}&apos; is empty..
        /// </summary>
        internal static string LogEntryHelper_EmptyMergedObjectType {
            get {
                return ResourceManager.GetString("LogEntryHelper_EmptyMergedObjectType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The merged union type &apos;{0}&apos; is empty..
        /// </summary>
        internal static string LogEntryHelper_EmptyMergedUnionType {
            get {
                return ResourceManager.GetString("LogEntryHelper_EmptyMergedUnionType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The default value of &apos;{0}&apos; references the inaccessible enum value &apos;{1}&apos;..
        /// </summary>
        internal static string LogEntryHelper_EnumTypeDefaultValueInaccessible {
            get {
                return ResourceManager.GetString("LogEntryHelper_EnumTypeDefaultValueInaccessible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The enum type &apos;{0}&apos; in schema &apos;{1}&apos; must define the value &apos;{2}&apos;..
        /// </summary>
        internal static string LogEntryHelper_EnumValuesMismatch {
            get {
                return ResourceManager.GetString("LogEntryHelper_EnumValuesMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The default value &apos;{0}&apos; of external argument &apos;{1}&apos; in schema &apos;{2}&apos; differs from the default value of &apos;{3}&apos; in schema &apos;{4}&apos;..
        /// </summary>
        internal static string LogEntryHelper_ExternalArgumentDefaultMismatch {
            get {
                return ResourceManager.GetString("LogEntryHelper_ExternalArgumentDefaultMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The external field &apos;{0}&apos; in schema &apos;{1}&apos; is not defined (non-external) in any other schema..
        /// </summary>
        internal static string LogEntryHelper_ExternalMissingOnBase {
            get {
                return ResourceManager.GetString("LogEntryHelper_ExternalMissingOnBase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The interface field &apos;{0}&apos; in schema &apos;{1}&apos; must not be marked as external..
        /// </summary>
        internal static string LogEntryHelper_ExternalOnInterface {
            get {
                return ResourceManager.GetString("LogEntryHelper_ExternalOnInterface", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The external field &apos;{0}&apos; in schema &apos;{1}&apos; is not referenced by a @provides directive in the schema..
        /// </summary>
        internal static string LogEntryHelper_ExternalUnused {
            get {
                return ResourceManager.GetString("LogEntryHelper_ExternalUnused", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The argument &apos;{0}&apos; has a different type shape in schema &apos;{1}&apos; than it does in schema &apos;{2}&apos;..
        /// </summary>
        internal static string LogEntryHelper_FieldArgumentTypesNotMergeable {
            get {
                return ResourceManager.GetString("LogEntryHelper_FieldArgumentTypesNotMergeable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The argument &apos;{0}&apos; must be defined as required in schema &apos;{1}&apos;. Arguments marked with @require are treated as non-required..
        /// </summary>
        internal static string LogEntryHelper_FieldWithMissingRequiredArgument {
            get {
                return ResourceManager.GetString("LogEntryHelper_FieldWithMissingRequiredArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The field &apos;{0}&apos; implementing interface field &apos;{1}&apos; is inaccessible in the composed schema..
        /// </summary>
        internal static string LogEntryHelper_ImplementedByInaccessible {
            get {
                return ResourceManager.GetString("LogEntryHelper_ImplementedByInaccessible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The default value &apos;{0}&apos; of input field &apos;{1}&apos; in schema &apos;{2}&apos; differs from the default value of &apos;{3}&apos; in schema &apos;{4}&apos;..
        /// </summary>
        internal static string LogEntryHelper_InputFieldDefaultMismatch {
            get {
                return ResourceManager.GetString("LogEntryHelper_InputFieldDefaultMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The input field &apos;{0}&apos; has a different type shape in schema &apos;{1}&apos; than it does in schema &apos;{2}&apos;..
        /// </summary>
        internal static string LogEntryHelper_InputFieldTypesNotMergeable {
            get {
                return ResourceManager.GetString("LogEntryHelper_InputFieldTypesNotMergeable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The input type &apos;{0}&apos; in schema &apos;{1}&apos; must define the required field &apos;{2}&apos;..
        /// </summary>
        internal static string LogEntryHelper_InputWithMissingRequiredFields {
            get {
                return ResourceManager.GetString("LogEntryHelper_InputWithMissingRequiredFields", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The merged object type &apos;{0}&apos; must implement the field &apos;{1}&apos; on interface &apos;{2}&apos;..
        /// </summary>
        internal static string LogEntryHelper_InterfaceFieldNoImplementation {
            get {
                return ResourceManager.GetString("LogEntryHelper_InterfaceFieldNoImplementation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid GraphQL in source schema. Exception message: {0}..
        /// </summary>
        internal static string LogEntryHelper_InvalidGraphQL {
            get {
                return ResourceManager.GetString("LogEntryHelper_InvalidGraphQL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The interface field &apos;{0}&apos; in schema &apos;{1}&apos; must not be marked as shareable..
        /// </summary>
        internal static string LogEntryHelper_InvalidShareableUsage {
            get {
                return ResourceManager.GetString("LogEntryHelper_InvalidShareableUsage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The @is directive on argument &apos;{0}&apos; in schema &apos;{1}&apos; specifies an invalid field selection against the composed schema..
        /// </summary>
        internal static string LogEntryHelper_IsInvalidField {
            get {
                return ResourceManager.GetString("LogEntryHelper_IsInvalidField", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The @is directive on argument &apos;{0}&apos; in schema &apos;{1}&apos; must specify a string value for the &apos;field&apos; argument..
        /// </summary>
        internal static string LogEntryHelper_IsInvalidFieldType {
            get {
                return ResourceManager.GetString("LogEntryHelper_IsInvalidFieldType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The @is directive on argument &apos;{0}&apos; in schema &apos;{1}&apos; contains invalid syntax in the &apos;field&apos; argument..
        /// </summary>
        internal static string LogEntryHelper_IsInvalidSyntax {
            get {
                return ResourceManager.GetString("LogEntryHelper_IsInvalidSyntax", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The @is directive on argument &apos;{0}&apos; in schema &apos;{1}&apos; is invalid because the declaring field is not a lookup field..
        /// </summary>
        internal static string LogEntryHelper_IsInvalidUsage {
            get {
                return ResourceManager.GetString("LogEntryHelper_IsInvalidUsage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A @key directive on type &apos;{0}&apos; in schema &apos;{1}&apos; references field &apos;{2}&apos;, which must not include directive applications..
        /// </summary>
        internal static string LogEntryHelper_KeyDirectiveInFieldsArgument {
            get {
                return ResourceManager.GetString("LogEntryHelper_KeyDirectiveInFieldsArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A @key directive on type &apos;{0}&apos; in schema &apos;{1}&apos; references field &apos;{2}&apos;, which must not have arguments..
        /// </summary>
        internal static string LogEntryHelper_KeyFieldsHasArguments {
            get {
                return ResourceManager.GetString("LogEntryHelper_KeyFieldsHasArguments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A @key directive on type &apos;{0}&apos; in schema &apos;{1}&apos; references field &apos;{2}&apos;, which must not be a list, interface, or union type..
        /// </summary>
        internal static string LogEntryHelper_KeyFieldsSelectInvalidType {
            get {
                return ResourceManager.GetString("LogEntryHelper_KeyFieldsSelectInvalidType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A @key directive on type &apos;{0}&apos; in schema &apos;{1}&apos; specifies an invalid field selection..
        /// </summary>
        internal static string LogEntryHelper_KeyInvalidFields {
            get {
                return ResourceManager.GetString("LogEntryHelper_KeyInvalidFields", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A @key directive on type &apos;{0}&apos; in schema &apos;{1}&apos; must specify a string value for the &apos;fields&apos; argument..
        /// </summary>
        internal static string LogEntryHelper_KeyInvalidFieldsType {
            get {
                return ResourceManager.GetString("LogEntryHelper_KeyInvalidFieldsType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A @key directive on type &apos;{0}&apos; in schema &apos;{1}&apos; contains invalid syntax in the &apos;fields&apos; argument..
        /// </summary>
        internal static string LogEntryHelper_KeyInvalidSyntax {
            get {
                return ResourceManager.GetString("LogEntryHelper_KeyInvalidSyntax", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The lookup field &apos;{0}&apos; in schema &apos;{1}&apos; must not return a list..
        /// </summary>
        internal static string LogEntryHelper_LookupReturnsList {
            get {
                return ResourceManager.GetString("LogEntryHelper_LookupReturnsList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The lookup field &apos;{0}&apos; in schema &apos;{1}&apos; should return a nullable type..
        /// </summary>
        internal static string LogEntryHelper_LookupReturnsNonNullableType {
            get {
                return ResourceManager.GetString("LogEntryHelper_LookupReturnsNonNullableType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The non-null input field &apos;{0}&apos; in schema &apos;{1}&apos; must be accessible in the composed schema..
        /// </summary>
        internal static string LogEntryHelper_NonNullInputFieldIsInaccessible {
            get {
                return ResourceManager.GetString("LogEntryHelper_NonNullInputFieldIsInaccessible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The merged query type has no accessible fields..
        /// </summary>
        internal static string LogEntryHelper_NoQueries {
            get {
                return ResourceManager.GetString("LogEntryHelper_NoQueries", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The output field &apos;{0}&apos; has a different type shape in schema &apos;{1}&apos; than it does in schema &apos;{2}&apos;..
        /// </summary>
        internal static string LogEntryHelper_OutputFieldTypesNotMergeable {
            get {
                return ResourceManager.GetString("LogEntryHelper_OutputFieldTypesNotMergeable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The @override directive on field &apos;{0}&apos; in schema &apos;{1}&apos; must not reference the same schema..
        /// </summary>
        internal static string LogEntryHelper_OverrideFromSelf {
            get {
                return ResourceManager.GetString("LogEntryHelper_OverrideFromSelf", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The interface field &apos;{0}&apos; in schema &apos;{1}&apos; must not be annotated with the @override directive..
        /// </summary>
        internal static string LogEntryHelper_OverrideOnInterface {
            get {
                return ResourceManager.GetString("LogEntryHelper_OverrideOnInterface", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The @provides directive on field &apos;{0}&apos; in schema &apos;{1}&apos; references field &apos;{2}&apos;, which must not include directive applications..
        /// </summary>
        internal static string LogEntryHelper_ProvidesDirectiveInFieldsArgument {
            get {
                return ResourceManager.GetString("LogEntryHelper_ProvidesDirectiveInFieldsArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The @provides directive on field &apos;{0}&apos; in schema &apos;{1}&apos; references field &apos;{2}&apos;, which must not have arguments..
        /// </summary>
        internal static string LogEntryHelper_ProvidesFieldsHasArguments {
            get {
                return ResourceManager.GetString("LogEntryHelper_ProvidesFieldsHasArguments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The @provides directive on field &apos;{0}&apos; in schema &apos;{1}&apos; references field &apos;{2}&apos;, which must be marked as external..
        /// </summary>
        internal static string LogEntryHelper_ProvidesFieldsMissingExternal {
            get {
                return ResourceManager.GetString("LogEntryHelper_ProvidesFieldsMissingExternal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The @provides directive on field &apos;{0}&apos; in schema &apos;{1}&apos; specifies an invalid field selection..
        /// </summary>
        internal static string LogEntryHelper_ProvidesInvalidFields {
            get {
                return ResourceManager.GetString("LogEntryHelper_ProvidesInvalidFields", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The @provides directive on field &apos;{0}&apos; in schema &apos;{1}&apos; must specify a string value for the &apos;fields&apos; argument..
        /// </summary>
        internal static string LogEntryHelper_ProvidesInvalidFieldsType {
            get {
                return ResourceManager.GetString("LogEntryHelper_ProvidesInvalidFieldsType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The @provides directive on field &apos;{0}&apos; in schema &apos;{1}&apos; contains invalid syntax in the &apos;fields&apos; argument..
        /// </summary>
        internal static string LogEntryHelper_ProvidesInvalidSyntax {
            get {
                return ResourceManager.GetString("LogEntryHelper_ProvidesInvalidSyntax", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The field &apos;{0}&apos; in schema &apos;{1}&apos; includes a @provides directive, but does not return a composite type..
        /// </summary>
        internal static string LogEntryHelper_ProvidesOnNonCompositeField {
            get {
                return ResourceManager.GetString("LogEntryHelper_ProvidesOnNonCompositeField", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The root query type in schema &apos;{0}&apos; must be accessible..
        /// </summary>
        internal static string LogEntryHelper_QueryRootTypeInaccessible {
            get {
                return ResourceManager.GetString("LogEntryHelper_QueryRootTypeInaccessible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The @require directive on argument &apos;{0}&apos; in schema &apos;{1}&apos; specifies an invalid field selection against the composed schema..
        /// </summary>
        internal static string LogEntryHelper_RequireInvalidFields {
            get {
                return ResourceManager.GetString("LogEntryHelper_RequireInvalidFields", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The @require directive on argument &apos;{0}&apos; in schema &apos;{1}&apos; must specify a string value for the &apos;field&apos; argument..
        /// </summary>
        internal static string LogEntryHelper_RequireInvalidFieldType {
            get {
                return ResourceManager.GetString("LogEntryHelper_RequireInvalidFieldType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The @require directive on argument &apos;{0}&apos; in schema &apos;{1}&apos; contains invalid syntax in the &apos;field&apos; argument..
        /// </summary>
        internal static string LogEntryHelper_RequireInvalidSyntax {
            get {
                return ResourceManager.GetString("LogEntryHelper_RequireInvalidSyntax", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The root mutation type in schema &apos;{0}&apos; must be named &apos;Mutation&apos;..
        /// </summary>
        internal static string LogEntryHelper_RootMutationUsed {
            get {
                return ResourceManager.GetString("LogEntryHelper_RootMutationUsed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The root query type in schema &apos;{0}&apos; must be named &apos;Query&apos;..
        /// </summary>
        internal static string LogEntryHelper_RootQueryUsed {
            get {
                return ResourceManager.GetString("LogEntryHelper_RootQueryUsed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The root subscription type in schema &apos;{0}&apos; must be named &apos;Subscription&apos;..
        /// </summary>
        internal static string LogEntryHelper_RootSubscriptionUsed {
            get {
                return ResourceManager.GetString("LogEntryHelper_RootSubscriptionUsed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type or directive &apos;{0}&apos; in schema &apos;{1}&apos; is incompatible with the built-in type or directive of the same name..
        /// </summary>
        internal static string LogEntryHelper_TypeDefinitionInvalid {
            get {
                return ResourceManager.GetString("LogEntryHelper_TypeDefinitionInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type &apos;{0}&apos; has a different kind in schema &apos;{1}&apos; ({2}) than it does in schema &apos;{3}&apos; ({4})..
        /// </summary>
        internal static string LogEntryHelper_TypeKindMismatch {
            get {
                return ResourceManager.GetString("LogEntryHelper_TypeKindMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The @lookup directive is used within a source schema to specify output fields that can be used by the distributed GraphQL executor to resolve an entity by a stable key..
        /// </summary>
        internal static string LookupMutableDirectiveDefinition_Description {
            get {
                return ResourceManager.GetString("LookupMutableDirectiveDefinition_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the source schema that originally provided this field..
        /// </summary>
        internal static string OverrideMutableDirectiveDefinition_Argument_From_Description {
            get {
                return ResourceManager.GetString("OverrideMutableDirectiveDefinition_Argument_From_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The @override directive is used to migrate a field from one source schema to another..
        /// </summary>
        internal static string OverrideMutableDirectiveDefinition_Description {
            get {
                return ResourceManager.GetString("OverrideMutableDirectiveDefinition_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Represents a selection set syntax describing the subfields of the returned type that can be provided by the current source schema..
        /// </summary>
        internal static string ProvidesMutableDirectiveDefinition_Argument_Fields_Description {
            get {
                return ResourceManager.GetString("ProvidesMutableDirectiveDefinition_Argument_Fields_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The @provides directive indicates that a field can provide certain subfields of its return type from the same source schema, without requiring an additional resolution step elsewhere..
        /// </summary>
        internal static string ProvidesMutableDirectiveDefinition_Description {
            get {
                return ResourceManager.GetString("ProvidesMutableDirectiveDefinition_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Represents a selection path map syntax..
        /// </summary>
        internal static string RequireMutableDirectiveDefinition_Argument_Field_Description {
            get {
                return ResourceManager.GetString("RequireMutableDirectiveDefinition_Argument_Field_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The @require directive is used to express data requirements with other source schemas..
        /// </summary>
        internal static string RequireMutableDirectiveDefinition_Description {
            get {
                return ResourceManager.GetString("RequireMutableDirectiveDefinition_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the source schema..
        /// </summary>
        internal static string SchemaNameMutableDirectiveDefinition_Argument_Value_Description {
            get {
                return ResourceManager.GetString("SchemaNameMutableDirectiveDefinition_Argument_Value_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The @schemaName directive is used to specify the name of a source schema..
        /// </summary>
        internal static string SchemaNameMutableDirectiveDefinition_Description {
            get {
                return ResourceManager.GetString("SchemaNameMutableDirectiveDefinition_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The @shareable directive allows multiple source schemas to define the same field, ensuring that this decision is both intentional and coordinated by requiring fields to be explicitly marked..
        /// </summary>
        internal static string ShareableMutableDirectiveDefinition_Description {
            get {
                return ResourceManager.GetString("ShareableMutableDirectiveDefinition_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The argument &apos;{0}&apos; is missing..
        /// </summary>
        internal static string TypeDefinitionInvalidRule_ArgumentMissing {
            get {
                return ResourceManager.GetString("TypeDefinitionInvalidRule_ArgumentMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The argument &apos;{0}&apos; has a different type..
        /// </summary>
        internal static string TypeDefinitionInvalidRule_ArgumentTypeDifferent {
            get {
                return ResourceManager.GetString("TypeDefinitionInvalidRule_ArgumentTypeDifferent", resourceCulture);
            }
        }
    }
}
