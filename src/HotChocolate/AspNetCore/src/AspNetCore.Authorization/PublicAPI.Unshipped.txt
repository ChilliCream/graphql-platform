HotChocolate.AspNetCore.Authorization.AuthorizeResult
HotChocolate.AspNetCore.Authorization.AuthorizeResult.Allowed = 0 -> HotChocolate.AspNetCore.Authorization.AuthorizeResult
HotChocolate.AspNetCore.Authorization.AuthorizeResult.NoDefaultPolicy = 3 -> HotChocolate.AspNetCore.Authorization.AuthorizeResult
HotChocolate.AspNetCore.Authorization.AuthorizeResult.NotAllowed = 1 -> HotChocolate.AspNetCore.Authorization.AuthorizeResult
HotChocolate.AspNetCore.Authorization.AuthorizeResult.NotAuthenticated = 2 -> HotChocolate.AspNetCore.Authorization.AuthorizeResult
HotChocolate.AspNetCore.Authorization.AuthorizeResult.PolicyNotFound = 4 -> HotChocolate.AspNetCore.Authorization.AuthorizeResult
HotChocolate.AspNetCore.Authorization.DefaultAuthorizationHandler
HotChocolate.AspNetCore.Authorization.DefaultAuthorizationHandler.AuthorizeAsync(HotChocolate.Resolvers.IMiddlewareContext! context, HotChocolate.AspNetCore.Authorization.AuthorizeDirective! directive) -> System.Threading.Tasks.ValueTask<HotChocolate.AspNetCore.Authorization.AuthorizeResult>
HotChocolate.AspNetCore.Authorization.DefaultAuthorizationHandler.DefaultAuthorizationHandler() -> void
HotChocolate.AspNetCore.Authorization.IAuthorizationHandler
HotChocolate.AspNetCore.Authorization.IAuthorizationHandler.AuthorizeAsync(HotChocolate.Resolvers.IMiddlewareContext! context, HotChocolate.AspNetCore.Authorization.AuthorizeDirective! directive) -> System.Threading.Tasks.ValueTask<HotChocolate.AspNetCore.Authorization.AuthorizeResult>
static Microsoft.Extensions.DependencyInjection.HotChocolateAuthorizeRequestExecutorBuilder.AddAuthorizationHandler<T>(this HotChocolate.Execution.Configuration.IRequestExecutorBuilder! builder) -> HotChocolate.Execution.Configuration.IRequestExecutorBuilder!