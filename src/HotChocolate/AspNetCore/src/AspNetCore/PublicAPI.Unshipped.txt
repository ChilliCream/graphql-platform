HotChocolate.AspNetCore.Extensions.BananaCakePopEndpointConventionBuilder
HotChocolate.AspNetCore.Extensions.BananaCakePopEndpointConventionBuilder.Add(System.Action<Microsoft.AspNetCore.Builder.EndpointBuilder!>! convention) -> void
HotChocolate.AspNetCore.Extensions.GraphQLHttpEndpointConventionBuilder
HotChocolate.AspNetCore.Extensions.GraphQLHttpEndpointConventionBuilder.Add(System.Action<Microsoft.AspNetCore.Builder.EndpointBuilder!>! convention) -> void
HotChocolate.AspNetCore.GraphQLHttpOptions
HotChocolate.AspNetCore.GraphQLHttpOptions.AllowedGetOperations.get -> HotChocolate.AspNetCore.AllowedGetOperations
HotChocolate.AspNetCore.GraphQLHttpOptions.AllowedGetOperations.set -> void
HotChocolate.AspNetCore.GraphQLHttpOptions.EnableGetRequests.get -> bool
HotChocolate.AspNetCore.GraphQLHttpOptions.EnableGetRequests.set -> void
HotChocolate.AspNetCore.GraphQLHttpOptions.EnableMultipartRequests.get -> bool
HotChocolate.AspNetCore.GraphQLHttpOptions.EnableMultipartRequests.set -> void
HotChocolate.AspNetCore.GraphQLHttpOptions.GraphQLHttpOptions() -> void
HotChocolate.AspNetCore.GraphQLToolOptions.GaTrackingId.get -> string?
HotChocolate.AspNetCore.GraphQLToolOptions.GaTrackingId.set -> void
HotChocolate.AspNetCore.GraphQLToolOptions.GraphQLEndpoint.get -> string?
HotChocolate.AspNetCore.GraphQLToolOptions.GraphQLEndpoint.set -> void
HotChocolate.AspNetCore.GraphQLToolOptions.Title.get -> string?
HotChocolate.AspNetCore.GraphQLToolOptions.Title.set -> void
HotChocolate.AspNetCore.GraphQLToolOptions.UseBrowserUrlAsGraphQLEndpoint.get -> bool
HotChocolate.AspNetCore.GraphQLToolOptions.UseBrowserUrlAsGraphQLEndpoint.set -> void
HotChocolate.AspNetCore.HttpGetSchemaMiddleware.HttpGetSchemaMiddleware(Microsoft.AspNetCore.Http.RequestDelegate! next, HotChocolate.Execution.IRequestExecutorResolver! executorResolver, HotChocolate.AspNetCore.Serialization.IHttpResultSerializer! resultSerializer, HotChocolate.NameString schemaName, HotChocolate.AspNetCore.MiddlewareRoutingType routing) -> void
HotChocolate.AspNetCore.MiddlewareRoutingType
HotChocolate.AspNetCore.MiddlewareRoutingType.Explicit = 1 -> HotChocolate.AspNetCore.MiddlewareRoutingType
HotChocolate.AspNetCore.MiddlewareRoutingType.Integrated = 0 -> HotChocolate.AspNetCore.MiddlewareRoutingType
HotChocolate.AspNetCore.Subscriptions.Messages.DataStartMessageHandler.DataStartMessageHandler(HotChocolate.Execution.IRequestExecutor! requestExecutor, HotChocolate.AspNetCore.ISocketSessionInterceptor! socketSessionInterceptor, HotChocolate.IErrorHandler! errorHandler, HotChocolate.Execution.Instrumentation.IExecutionDiagnosticEvents! diagnosticEvents) -> void
HotChocolate.AspNetCore.ToolOptionsFileMiddleware.ToolOptionsFileMiddleware(Microsoft.AspNetCore.Http.RequestDelegate! next, Microsoft.AspNetCore.Http.PathString matchUrl) -> void
static HotChocolate.AspNetCore.Subscriptions.WebSocketSession.New(Microsoft.AspNetCore.Http.HttpContext! httpContext, HotChocolate.AspNetCore.Subscriptions.IMessagePipeline! messagePipeline, HotChocolate.AspNetCore.ISocketSessionInterceptor! socketSessionInterceptor) -> HotChocolate.AspNetCore.Subscriptions.WebSocketSession!
*REMOVED*static HotChocolate.AspNetCore.Subscriptions.WebSocketSession.New(Microsoft.AspNetCore.Http.HttpContext! httpContext, HotChocolate.AspNetCore.Subscriptions.IMessagePipeline! messagePipeline) -> HotChocolate.AspNetCore.Subscriptions.WebSocketSession!
static Microsoft.AspNetCore.Builder.EndpointRouteBuilderExtensions.MapBananaCakePop(this Microsoft.AspNetCore.Routing.IEndpointRouteBuilder! endpointRouteBuilder, Microsoft.AspNetCore.Http.PathString? toolPath = null, string? relativeRequestPath = "..") -> HotChocolate.AspNetCore.Extensions.BananaCakePopEndpointConventionBuilder!
*REMOVED*HotChocolate.AspNetCore.ToolOptionsFileMiddleware.ToolOptionsFileMiddleware(Microsoft.AspNetCore.Http.RequestDelegate! next, HotChocolate.Execution.IRequestExecutorResolver! executorResolver, HotChocolate.AspNetCore.Serialization.IHttpResultSerializer! resultSerializer, HotChocolate.NameString schemaName, Microsoft.AspNetCore.Http.PathString matchUrl) -> void
static Microsoft.AspNetCore.Builder.EndpointRouteBuilderExtensions.MapGraphQLHttp(this Microsoft.AspNetCore.Routing.IEndpointRouteBuilder! endpointRouteBuilder, Microsoft.AspNetCore.Routing.Patterns.RoutePattern? pattern = null, HotChocolate.NameString schemaName = default(HotChocolate.NameString)) -> HotChocolate.AspNetCore.Extensions.GraphQLHttpEndpointConventionBuilder!
static Microsoft.AspNetCore.Builder.EndpointRouteBuilderExtensions.MapGraphQLHttp(this Microsoft.AspNetCore.Routing.IEndpointRouteBuilder! endpointRouteBuilder, string! pattern, HotChocolate.NameString schemaName = default(HotChocolate.NameString)) -> HotChocolate.AspNetCore.Extensions.GraphQLHttpEndpointConventionBuilder!
static Microsoft.AspNetCore.Builder.EndpointRouteBuilderExtensions.MapGraphQLSchema(this Microsoft.AspNetCore.Routing.IEndpointRouteBuilder! endpointRouteBuilder, Microsoft.AspNetCore.Routing.Patterns.RoutePattern? pattern = null, HotChocolate.NameString schemaName = default(HotChocolate.NameString)) -> Microsoft.AspNetCore.Builder.IEndpointConventionBuilder!
static Microsoft.AspNetCore.Builder.EndpointRouteBuilderExtensions.MapGraphQLSchema(this Microsoft.AspNetCore.Routing.IEndpointRouteBuilder! endpointRouteBuilder, string! pattern, HotChocolate.NameString schemaName = default(HotChocolate.NameString)) -> Microsoft.AspNetCore.Builder.IEndpointConventionBuilder!
static Microsoft.AspNetCore.Builder.EndpointRouteBuilderExtensions.MapGraphQLWebSocket(this Microsoft.AspNetCore.Routing.IEndpointRouteBuilder! endpointRouteBuilder, Microsoft.AspNetCore.Routing.Patterns.RoutePattern? pattern = null, HotChocolate.NameString schemaName = default(HotChocolate.NameString)) -> Microsoft.AspNetCore.Builder.IEndpointConventionBuilder!
static Microsoft.AspNetCore.Builder.EndpointRouteBuilderExtensions.MapGraphQLWebSocket(this Microsoft.AspNetCore.Routing.IEndpointRouteBuilder! endpointRouteBuilder, string! pattern, HotChocolate.NameString schemaName = default(HotChocolate.NameString)) -> Microsoft.AspNetCore.Builder.IEndpointConventionBuilder!
static Microsoft.AspNetCore.Builder.EndpointRouteBuilderExtensions.WithOptions(this HotChocolate.AspNetCore.Extensions.BananaCakePopEndpointConventionBuilder! builder, HotChocolate.AspNetCore.GraphQLToolOptions! toolOptions) -> HotChocolate.AspNetCore.Extensions.BananaCakePopEndpointConventionBuilder!
static Microsoft.AspNetCore.Builder.EndpointRouteBuilderExtensions.WithOptions(this HotChocolate.AspNetCore.Extensions.GraphQLHttpEndpointConventionBuilder! builder, HotChocolate.AspNetCore.GraphQLHttpOptions! httpOptions) -> HotChocolate.AspNetCore.Extensions.GraphQLHttpEndpointConventionBuilder!
*REMOVED*static Microsoft.AspNetCore.Builder.EndpointRouteBuilderExtensions.UseGraphQL(this Microsoft.AspNetCore.Builder.IApplicationBuilder! applicationBuilder, Microsoft.AspNetCore.Http.PathString pathMatch = default(Microsoft.AspNetCore.Http.PathString), HotChocolate.NameString schemaName = default(HotChocolate.NameString)) -> Microsoft.AspNetCore.Builder.IApplicationBuilder!
*REMOVED*HotChocolate.AspNetCore.Subscriptions.Messages.DataStartMessageHandler.DataStartMessageHandler(HotChocolate.Execution.IRequestExecutor! requestExecutor, HotChocolate.AspNetCore.ISocketSessionInterceptor! socketSessionInterceptor, HotChocolate.IErrorHandler! errorHandler, HotChocolate.Execution.Instrumentation.IDiagnosticEvents! diagnosticEvents) -> void
*REMOVED*HotChocolate.AspNetCore.HttpGetSchemaMiddleware.HttpGetSchemaMiddleware(Microsoft.AspNetCore.Http.RequestDelegate! next, HotChocolate.Execution.IRequestExecutorResolver! executorResolver, HotChocolate.AspNetCore.Serialization.IHttpResultSerializer! resultSerializer, HotChocolate.NameString schemaName) -> void