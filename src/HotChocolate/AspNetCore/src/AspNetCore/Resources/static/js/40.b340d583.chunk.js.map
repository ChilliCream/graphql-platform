{"version":3,"sources":["../../../node_modules/monaco-editor/esm/vs/basic-languages/msdax/msdax.js"],"names":["conf","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","notIn","language","defaultToken","tokenPostfix","ignoreCase","token","keywords","functions","tokenizer","root","include","cases","whitespace","next","comment","numbers","strings","string","complexIdentifiers","bracketedIdentifier","quotedIdentifier"],"mappings":"uIAAA,qFAIO,IAAIA,EAAO,CACdC,SAAU,CACNC,YAAa,KACbC,aAAc,CAAC,KAAM,OAEzBC,SAAU,CACN,CAAC,IAAK,KACN,CAAC,IAAK,KACN,CAAC,IAAK,MAEVC,iBAAkB,CACd,CAAEC,KAAM,IAAKC,MAAO,IAAKC,MAAO,CAAC,SAAU,YAC3C,CAAEF,KAAM,IAAKC,MAAO,IAAKC,MAAO,CAAC,SAAU,YAC3C,CAAEF,KAAM,IAAKC,MAAO,IAAKC,MAAO,CAAC,SAAU,YAC3C,CAAEF,KAAM,IAAKC,MAAO,IAAKC,MAAO,CAAC,SAAU,YAC3C,CAAEF,KAAM,IAAKC,MAAO,IAAKC,MAAO,CAAC,SAAU,cAGxCC,EAAW,CAClBC,aAAc,GACdC,aAAc,SACdC,YAAY,EACZR,SAAU,CACN,CAAEE,KAAM,IAAKC,MAAO,IAAKM,MAAO,oBAChC,CAAEP,KAAM,IAAKC,MAAO,IAAKM,MAAO,sBAChC,CAAEP,KAAM,IAAKC,MAAO,IAAKM,MAAO,0BAEpCC,SAAU,CAEN,MACA,SACA,MACA,WACA,YACA,QACA,KACA,QACA,KACA,SACA,UACA,MACA,OACA,KAEA,UACA,SACA,UACA,WACA,WACA,UAEJC,UAAW,CAEP,sBACA,wBACA,qBACA,UACA,eACA,gBACA,WACA,WACA,WACA,aACA,eACA,YACA,YACA,gBACA,WACA,eACA,UACA,YACA,cACA,WACA,sBACA,wBACA,qBACA,iBACA,cACA,gBACA,kBACA,eACA,qBACA,eACA,iBACA,cACA,WACA,WACA,WACA,aACA,kBACA,MACA,YACA,gBACA,cACA,YACA,iBACA,WACA,eACA,cACA,YACA,eACA,YACA,aACA,WACA,UACA,WACA,SACA,SACA,UACA,WACA,cACA,UACA,SACA,YACA,cACA,cACA,cACA,mBACA,uBACA,UACA,eACA,SACA,sBACA,cACA,mBACA,MACA,SACA,gBACA,sBACA,YACA,mBACA,OACA,UACA,QACA,kBACA,SACA,MACA,OACA,OACA,eACA,WACA,kBACA,aACA,UACA,WACA,WACA,QACA,SACA,UACA,aACA,YACA,SACA,gBACA,SACA,UACA,WACA,MACA,OACA,OACA,SACA,UACA,MACA,OACA,OACA,iBACA,iBACA,kBACA,kBACA,UACA,WACA,UACA,QACA,UACA,UACA,WACA,WACA,QACA,QACA,SACA,SACA,OACA,OAEA,OACA,WACA,YACA,MACA,QACA,UACA,OACA,SACA,QACA,MACA,SACA,OACA,YACA,QACA,UACA,UACA,OACA,WACA,WACA,cACA,aACA,QACA,eACA,cACA,UACA,kBACA,UACA,UACA,SACA,aACA,YACA,YACA,WACA,QACA,aACA,SACA,WACA,oBACA,MACA,QACA,KACA,UACA,MACA,KACA,SACA,OACA,MACA,OACA,QACA,OACA,QACA,OACA,QACA,OACA,QACA,YACA,WACA,UACA,aACA,gBACA,YACA,eACA,SACA,UACA,kBACA,eACA,MACA,OACA,MACA,OACA,WACA,UACA,OACA,MACA,aACA,OACA,QACA,MACA,MACA,cACA,MACA,KACA,MACA,QACA,MACA,SACA,MACA,SACA,KACA,eACA,QACA,WACA,UACA,OACA,cACA,QACA,YACA,UACA,OACA,MACA,OACA,OACA,SACA,MACA,OACA,QACA,QACA,cACA,eACA,QACA,OACA,QACA,SACA,OACA,MACA,QACA,MACA,UACA,OACA,QACA,SACA,aACA,OACA,UACA,UACA,QACA,SAEJC,UAAW,CACPC,KAAM,CACF,CAAEC,QAAS,aACX,CAAEA,QAAS,eACX,CAAEA,QAAS,YACX,CAAEA,QAAS,YACX,CAAEA,QAAS,uBACX,CAAC,QAAS,aACV,CAAC,SAAU,aACX,CACI,sBACA,CACIC,MAAO,CACH,YAAa,UACb,aAAc,UACd,WAAY,gBAIxB,CAAC,mBAAoB,aAEzBC,WAAY,CAAC,CAAC,MAAO,UACrBnB,SAAU,CACN,CAAC,UAAW,WACZ,CAAC,OAAQ,CAAEY,MAAO,gBAAiBQ,KAAM,cAE7CC,QAAS,CACL,CAAC,SAAU,WACX,CAAC,OAAQ,CAAET,MAAO,gBAAiBQ,KAAM,SACzC,CAAC,IAAK,YAEVE,QAAS,CACL,CAAC,oBAAqB,UACtB,CAAC,sBAAuB,UACxB,CAAC,0CAA2C,WAEhDC,QAAS,CACL,CAAC,KAAM,CAAEX,MAAO,SAAUQ,KAAM,YAChC,CAAC,IAAK,CAAER,MAAO,SAAUQ,KAAM,aAEnCI,OAAQ,CACJ,CAAC,QAAS,UACV,CAAC,KAAM,UACP,CAAC,IAAK,CAAEZ,MAAO,SAAUQ,KAAM,UAEnCK,mBAAoB,CAChB,CAAC,KAAM,CAAEb,MAAO,mBAAoBQ,KAAM,yBAC1C,CAAC,IAAK,CAAER,MAAO,mBAAoBQ,KAAM,uBAE7CM,oBAAqB,CACjB,CAAC,SAAU,cACX,CAAC,KAAM,cACP,CAAC,IAAK,CAAEd,MAAO,mBAAoBQ,KAAM,UAE7CO,iBAAkB,CACd,CAAC,QAAS,cACV,CAAC,KAAM,cACP,CAAC,IAAK,CAAEf,MAAO,mBAAoBQ,KAAM","file":"static/js/40.b340d583.chunk.js","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport var conf = {\n    comments: {\n        lineComment: '//',\n        blockComment: ['/*', '*/']\n    },\n    brackets: [\n        ['[', ']'],\n        ['(', ')'],\n        ['{', '}']\n    ],\n    autoClosingPairs: [\n        { open: '\"', close: '\"', notIn: ['string', 'comment'] },\n        { open: \"'\", close: \"'\", notIn: ['string', 'comment'] },\n        { open: '[', close: ']', notIn: ['string', 'comment'] },\n        { open: '(', close: ')', notIn: ['string', 'comment'] },\n        { open: '{', close: '}', notIn: ['string', 'comment'] }\n    ]\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.msdax',\n    ignoreCase: true,\n    brackets: [\n        { open: '[', close: ']', token: 'delimiter.square' },\n        { open: '{', close: '}', token: 'delimiter.brackets' },\n        { open: '(', close: ')', token: 'delimiter.parenthesis' }\n    ],\n    keywords: [\n        // Query keywords\n        'VAR',\n        'RETURN',\n        'NOT',\n        'EVALUATE',\n        'DATATABLE',\n        'ORDER',\n        'BY',\n        'START',\n        'AT',\n        'DEFINE',\n        'MEASURE',\n        'ASC',\n        'DESC',\n        'IN',\n        // Datatable types\n        'BOOLEAN',\n        'DOUBLE',\n        'INTEGER',\n        'DATETIME',\n        'CURRENCY',\n        'STRING'\n    ],\n    functions: [\n        // Relational\n        'CLOSINGBALANCEMONTH',\n        'CLOSINGBALANCEQUARTER',\n        'CLOSINGBALANCEYEAR',\n        'DATEADD',\n        'DATESBETWEEN',\n        'DATESINPERIOD',\n        'DATESMTD',\n        'DATESQTD',\n        'DATESYTD',\n        'ENDOFMONTH',\n        'ENDOFQUARTER',\n        'ENDOFYEAR',\n        'FIRSTDATE',\n        'FIRSTNONBLANK',\n        'LASTDATE',\n        'LASTNONBLANK',\n        'NEXTDAY',\n        'NEXTMONTH',\n        'NEXTQUARTER',\n        'NEXTYEAR',\n        'OPENINGBALANCEMONTH',\n        'OPENINGBALANCEQUARTER',\n        'OPENINGBALANCEYEAR',\n        'PARALLELPERIOD',\n        'PREVIOUSDAY',\n        'PREVIOUSMONTH',\n        'PREVIOUSQUARTER',\n        'PREVIOUSYEAR',\n        'SAMEPERIODLASTYEAR',\n        'STARTOFMONTH',\n        'STARTOFQUARTER',\n        'STARTOFYEAR',\n        'TOTALMTD',\n        'TOTALQTD',\n        'TOTALYTD',\n        'ADDCOLUMNS',\n        'ADDMISSINGITEMS',\n        'ALL',\n        'ALLEXCEPT',\n        'ALLNOBLANKROW',\n        'ALLSELECTED',\n        'CALCULATE',\n        'CALCULATETABLE',\n        'CALENDAR',\n        'CALENDARAUTO',\n        'CROSSFILTER',\n        'CROSSJOIN',\n        'CURRENTGROUP',\n        'DATATABLE',\n        'DETAILROWS',\n        'DISTINCT',\n        'EARLIER',\n        'EARLIEST',\n        'EXCEPT',\n        'FILTER',\n        'FILTERS',\n        'GENERATE',\n        'GENERATEALL',\n        'GROUPBY',\n        'IGNORE',\n        'INTERSECT',\n        'ISONORAFTER',\n        'KEEPFILTERS',\n        'LOOKUPVALUE',\n        'NATURALINNERJOIN',\n        'NATURALLEFTOUTERJOIN',\n        'RELATED',\n        'RELATEDTABLE',\n        'ROLLUP',\n        'ROLLUPADDISSUBTOTAL',\n        'ROLLUPGROUP',\n        'ROLLUPISSUBTOTAL',\n        'ROW',\n        'SAMPLE',\n        'SELECTCOLUMNS',\n        'SUBSTITUTEWITHINDEX',\n        'SUMMARIZE',\n        'SUMMARIZECOLUMNS',\n        'TOPN',\n        'TREATAS',\n        'UNION',\n        'USERELATIONSHIP',\n        'VALUES',\n        'SUM',\n        'SUMX',\n        'PATH',\n        'PATHCONTAINS',\n        'PATHITEM',\n        'PATHITEMREVERSE',\n        'PATHLENGTH',\n        'AVERAGE',\n        'AVERAGEA',\n        'AVERAGEX',\n        'COUNT',\n        'COUNTA',\n        'COUNTAX',\n        'COUNTBLANK',\n        'COUNTROWS',\n        'COUNTX',\n        'DISTINCTCOUNT',\n        'DIVIDE',\n        'GEOMEAN',\n        'GEOMEANX',\n        'MAX',\n        'MAXA',\n        'MAXX',\n        'MEDIAN',\n        'MEDIANX',\n        'MIN',\n        'MINA',\n        'MINX',\n        'PERCENTILE.EXC',\n        'PERCENTILE.INC',\n        'PERCENTILEX.EXC',\n        'PERCENTILEX.INC',\n        'PRODUCT',\n        'PRODUCTX',\n        'RANK.EQ',\n        'RANKX',\n        'STDEV.P',\n        'STDEV.S',\n        'STDEVX.P',\n        'STDEVX.S',\n        'VAR.P',\n        'VAR.S',\n        'VARX.P',\n        'VARX.S',\n        'XIRR',\n        'XNPV',\n        // Scalar\n        'DATE',\n        'DATEDIFF',\n        'DATEVALUE',\n        'DAY',\n        'EDATE',\n        'EOMONTH',\n        'HOUR',\n        'MINUTE',\n        'MONTH',\n        'NOW',\n        'SECOND',\n        'TIME',\n        'TIMEVALUE',\n        'TODAY',\n        'WEEKDAY',\n        'WEEKNUM',\n        'YEAR',\n        'YEARFRAC',\n        'CONTAINS',\n        'CONTAINSROW',\n        'CUSTOMDATA',\n        'ERROR',\n        'HASONEFILTER',\n        'HASONEVALUE',\n        'ISBLANK',\n        'ISCROSSFILTERED',\n        'ISEMPTY',\n        'ISERROR',\n        'ISEVEN',\n        'ISFILTERED',\n        'ISLOGICAL',\n        'ISNONTEXT',\n        'ISNUMBER',\n        'ISODD',\n        'ISSUBTOTAL',\n        'ISTEXT',\n        'USERNAME',\n        'USERPRINCIPALNAME',\n        'AND',\n        'FALSE',\n        'IF',\n        'IFERROR',\n        'NOT',\n        'OR',\n        'SWITCH',\n        'TRUE',\n        'ABS',\n        'ACOS',\n        'ACOSH',\n        'ACOT',\n        'ACOTH',\n        'ASIN',\n        'ASINH',\n        'ATAN',\n        'ATANH',\n        'BETA.DIST',\n        'BETA.INV',\n        'CEILING',\n        'CHISQ.DIST',\n        'CHISQ.DIST.RT',\n        'CHISQ.INV',\n        'CHISQ.INV.RT',\n        'COMBIN',\n        'COMBINA',\n        'CONFIDENCE.NORM',\n        'CONFIDENCE.T',\n        'COS',\n        'COSH',\n        'COT',\n        'COTH',\n        'CURRENCY',\n        'DEGREES',\n        'EVEN',\n        'EXP',\n        'EXPON.DIST',\n        'FACT',\n        'FLOOR',\n        'GCD',\n        'INT',\n        'ISO.CEILING',\n        'LCM',\n        'LN',\n        'LOG',\n        'LOG10',\n        'MOD',\n        'MROUND',\n        'ODD',\n        'PERMUT',\n        'PI',\n        'POISSON.DIST',\n        'POWER',\n        'QUOTIENT',\n        'RADIANS',\n        'RAND',\n        'RANDBETWEEN',\n        'ROUND',\n        'ROUNDDOWN',\n        'ROUNDUP',\n        'SIGN',\n        'SIN',\n        'SINH',\n        'SQRT',\n        'SQRTPI',\n        'TAN',\n        'TANH',\n        'TRUNC',\n        'BLANK',\n        'CONCATENATE',\n        'CONCATENATEX',\n        'EXACT',\n        'FIND',\n        'FIXED',\n        'FORMAT',\n        'LEFT',\n        'LEN',\n        'LOWER',\n        'MID',\n        'REPLACE',\n        'REPT',\n        'RIGHT',\n        'SEARCH',\n        'SUBSTITUTE',\n        'TRIM',\n        'UNICHAR',\n        'UNICODE',\n        'UPPER',\n        'VALUE'\n    ],\n    tokenizer: {\n        root: [\n            { include: '@comments' },\n            { include: '@whitespace' },\n            { include: '@numbers' },\n            { include: '@strings' },\n            { include: '@complexIdentifiers' },\n            [/[;,.]/, 'delimiter'],\n            [/[({})]/, '@brackets'],\n            [\n                /[a-z_][a-zA-Z0-9_]*/,\n                {\n                    cases: {\n                        '@keywords': 'keyword',\n                        '@functions': 'keyword',\n                        '@default': 'identifier'\n                    }\n                }\n            ],\n            [/[<>=!%&+\\-*/|~^]/, 'operator']\n        ],\n        whitespace: [[/\\s+/, 'white']],\n        comments: [\n            [/\\/\\/+.*/, 'comment'],\n            [/\\/\\*/, { token: 'comment.quote', next: '@comment' }]\n        ],\n        comment: [\n            [/[^*/]+/, 'comment'],\n            [/\\*\\//, { token: 'comment.quote', next: '@pop' }],\n            [/./, 'comment']\n        ],\n        numbers: [\n            [/0[xX][0-9a-fA-F]*/, 'number'],\n            [/[$][+-]*\\d*(\\.\\d*)?/, 'number'],\n            [/((\\d+(\\.\\d*)?)|(\\.\\d+))([eE][\\-+]?\\d+)?/, 'number']\n        ],\n        strings: [\n            [/N\"/, { token: 'string', next: '@string' }],\n            [/\"/, { token: 'string', next: '@string' }]\n        ],\n        string: [\n            [/[^\"]+/, 'string'],\n            [/\"\"/, 'string'],\n            [/\"/, { token: 'string', next: '@pop' }]\n        ],\n        complexIdentifiers: [\n            [/\\[/, { token: 'identifier.quote', next: '@bracketedIdentifier' }],\n            [/'/, { token: 'identifier.quote', next: '@quotedIdentifier' }]\n        ],\n        bracketedIdentifier: [\n            [/[^\\]]+/, 'identifier'],\n            [/]]/, 'identifier'],\n            [/]/, { token: 'identifier.quote', next: '@pop' }]\n        ],\n        quotedIdentifier: [\n            [/[^']+/, 'identifier'],\n            [/''/, 'identifier'],\n            [/'/, { token: 'identifier.quote', next: '@pop' }]\n        ]\n    }\n};\n"],"sourceRoot":""}