{"version":3,"sources":["../../../node_modules/monaco-editor/esm/vs/basic-languages/xml/xml.js"],"names":["conf","comments","blockComment","brackets","autoClosingPairs","open","close","surroundingPairs","language","defaultToken","tokenPostfix","ignoreCase","qualifiedName","tokenizer","root","include","token","next","cdata","tag","whitespace","comment"],"mappings":"uIAAA,qFAIO,IAAIA,EAAO,CACdC,SAAU,CACNC,aAAc,CAAC,UAAQ,WAE3BC,SAAU,CAAC,CAAC,IAAK,MACjBC,iBAAkB,CACd,CAAEC,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,MAExBC,iBAAkB,CACd,CAAEF,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,OAGjBE,EAAW,CAClBC,aAAc,GACdC,aAAc,OACdC,YAAY,EAEZC,cAAe,2BACfC,UAAW,CACPC,KAAM,CACF,CAAC,SAAU,IACX,CAAEC,QAAS,eAEX,CAAC,sBAAuB,CAAC,CAAEC,MAAO,aAAe,CAAEA,MAAO,MAAOC,KAAM,UAEvE,CACI,gCACA,CAAC,CAAED,MAAO,aAAe,CAAEA,MAAO,OAAS,GAAI,CAAEA,MAAO,eAG5D,CAAC,wBAAyB,CAAC,CAAEA,MAAO,aAAe,CAAEA,MAAO,UAAWC,KAAM,UAE7E,CAAC,wBAAyB,CAAC,CAAED,MAAO,aAAe,CAAEA,MAAO,UAAWC,KAAM,UAE7E,CAAC,eAAgB,CAAED,MAAO,kBAAmBC,KAAM,WACnD,CAAC,QAAS,kBAEdC,MAAO,CACH,CAAC,SAAU,IACX,CAAC,QAAS,CAAEF,MAAO,kBAAmBC,KAAM,SAC5C,CAAC,KAAM,KAEXE,IAAK,CACD,CAAC,aAAc,IACf,CACI,6CACA,CAAC,iBAAkB,GAAI,oBAE3B,CACI,+DACA,CAAC,iBAAkB,GAAI,oBAE3B,CACI,6CACA,CAAC,iBAAkB,GAAI,oBAE3B,CAAC,iBAAkB,kBACnB,CAAC,MAAO,CAAEH,MAAO,YAAaC,KAAM,SACpC,CAAC,UAAW,CAAC,CAAED,MAAO,OAAS,CAAEA,MAAO,YAAaC,KAAM,UAC3D,CAAC,IAAK,CAAED,MAAO,YAAaC,KAAM,UAEtCG,WAAY,CACR,CAAC,aAAc,IACf,CAAC,OAAQ,CAAEJ,MAAO,UAAWC,KAAM,cAEvCI,QAAS,CACL,CAAC,UAAW,mBACZ,CAAC,MAAO,CAAEL,MAAO,UAAWC,KAAM,SAClC,CAAC,OAAQ,2BACT,CAAC,QAAS","file":"static/js/74.7ad55ae4.chunk.js","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport var conf = {\n    comments: {\n        blockComment: ['<!--', '-->']\n    },\n    brackets: [['<', '>']],\n    autoClosingPairs: [\n        { open: '<', close: '>' },\n        { open: \"'\", close: \"'\" },\n        { open: '\"', close: '\"' }\n    ],\n    surroundingPairs: [\n        { open: '<', close: '>' },\n        { open: \"'\", close: \"'\" },\n        { open: '\"', close: '\"' }\n    ]\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.xml',\n    ignoreCase: true,\n    // Useful regular expressions\n    qualifiedName: /(?:[\\w\\.\\-]+:)?[\\w\\.\\-]+/,\n    tokenizer: {\n        root: [\n            [/[^<&]+/, ''],\n            { include: '@whitespace' },\n            // Standard opening tag\n            [/(<)(@qualifiedName)/, [{ token: 'delimiter' }, { token: 'tag', next: '@tag' }]],\n            // Standard closing tag\n            [\n                /(<\\/)(@qualifiedName)(\\s*)(>)/,\n                [{ token: 'delimiter' }, { token: 'tag' }, '', { token: 'delimiter' }]\n            ],\n            // Meta tags - instruction\n            [/(<\\?)(@qualifiedName)/, [{ token: 'delimiter' }, { token: 'metatag', next: '@tag' }]],\n            // Meta tags - declaration\n            [/(<\\!)(@qualifiedName)/, [{ token: 'delimiter' }, { token: 'metatag', next: '@tag' }]],\n            // CDATA\n            [/<\\!\\[CDATA\\[/, { token: 'delimiter.cdata', next: '@cdata' }],\n            [/&\\w+;/, 'string.escape']\n        ],\n        cdata: [\n            [/[^\\]]+/, ''],\n            [/\\]\\]>/, { token: 'delimiter.cdata', next: '@pop' }],\n            [/\\]/, '']\n        ],\n        tag: [\n            [/[ \\t\\r\\n]+/, ''],\n            [\n                /(@qualifiedName)(\\s*=\\s*)(\"[^\"]*\"|'[^']*')/,\n                ['attribute.name', '', 'attribute.value']\n            ],\n            [\n                /(@qualifiedName)(\\s*=\\s*)(\"[^\">?\\/]*|'[^'>?\\/]*)(?=[\\?\\/]\\>)/,\n                ['attribute.name', '', 'attribute.value']\n            ],\n            [\n                /(@qualifiedName)(\\s*=\\s*)(\"[^\">]*|'[^'>]*)/,\n                ['attribute.name', '', 'attribute.value']\n            ],\n            [/@qualifiedName/, 'attribute.name'],\n            [/\\?>/, { token: 'delimiter', next: '@pop' }],\n            [/(\\/)(>)/, [{ token: 'tag' }, { token: 'delimiter', next: '@pop' }]],\n            [/>/, { token: 'delimiter', next: '@pop' }]\n        ],\n        whitespace: [\n            [/[ \\t\\r\\n]+/, ''],\n            [/<!--/, { token: 'comment', next: '@comment' }]\n        ],\n        comment: [\n            [/[^<\\-]+/, 'comment.content'],\n            [/-->/, { token: 'comment', next: '@pop' }],\n            [/<!--/, 'comment.content.invalid'],\n            [/[<\\-]/, 'comment.content']\n        ]\n    }\n};\n"],"sourceRoot":""}