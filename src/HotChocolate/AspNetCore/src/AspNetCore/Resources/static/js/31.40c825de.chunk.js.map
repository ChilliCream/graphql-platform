{"version":3,"sources":["../../../node_modules/monaco-editor/esm/vs/basic-languages/ini/ini.js"],"names":["conf","comments","lineComment","brackets","autoClosingPairs","open","close","surroundingPairs","language","defaultToken","tokenPostfix","escapes","tokenizer","root","include","whitespace","string","cases","token","next"],"mappings":"uIAAA,qFAIO,IAAIA,EAAO,CACdC,SAAU,CACNC,YAAa,KAEjBC,SAAU,CACN,CAAC,IAAK,KACN,CAAC,IAAK,KACN,CAAC,IAAK,MAEVC,iBAAkB,CACd,CAAEC,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,MAExBC,iBAAkB,CACd,CAAEF,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,OAGjBE,EAAW,CAClBC,aAAc,GACdC,aAAc,OAEdC,QAAS,wEAETC,UAAW,CACPC,KAAM,CAEF,CAAC,cAAe,WAEhB,CAAC,kBAAmB,CAAC,MAAO,GAAI,cAEhC,CAAEC,QAAS,eAEX,CAAC,MAAO,UAER,CAAC,kBAAmB,kBACpB,CAAC,kBAAmB,kBACpB,CAAC,IAAK,SAAU,aAChB,CAAC,IAAK,SAAU,cAEpBC,WAAY,CACR,CAAC,aAAc,IACf,CAAC,cAAe,YAEpBC,OAAQ,CACJ,CAAC,WAAY,UACb,CAAC,WAAY,iBACb,CAAC,MAAO,yBACR,CACI,OACA,CACIC,MAAO,CACH,UAAW,CAAEC,MAAO,SAAUC,KAAM,QACpC,WAAY","file":"static/js/31.40c825de.chunk.js","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport var conf = {\n    comments: {\n        lineComment: '#'\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: \"'\", close: \"'\" }\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: \"'\", close: \"'\" }\n    ]\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.ini',\n    // we include these common regular expressions\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n    // The main tokenizer for our languages\n    tokenizer: {\n        root: [\n            // sections\n            [/^\\[[^\\]]*\\]/, 'metatag'],\n            // keys\n            [/(^\\w+)(\\s*)(\\=)/, ['key', '', 'delimiter']],\n            // whitespace\n            { include: '@whitespace' },\n            // numbers\n            [/\\d+/, 'number'],\n            // strings: recover on non-terminated strings\n            [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\n            [/'([^'\\\\]|\\\\.)*$/, 'string.invalid'],\n            [/\"/, 'string', '@string.\"'],\n            [/'/, 'string', \"@string.'\"]\n        ],\n        whitespace: [\n            [/[ \\t\\r\\n]+/, ''],\n            [/^\\s*[#;].*$/, 'comment']\n        ],\n        string: [\n            [/[^\\\\\"']+/, 'string'],\n            [/@escapes/, 'string.escape'],\n            [/\\\\./, 'string.escape.invalid'],\n            [\n                /[\"']/,\n                {\n                    cases: {\n                        '$#==$S2': { token: 'string', next: '@pop' },\n                        '@default': 'string'\n                    }\n                }\n            ]\n        ]\n    }\n};\n"],"sourceRoot":""}