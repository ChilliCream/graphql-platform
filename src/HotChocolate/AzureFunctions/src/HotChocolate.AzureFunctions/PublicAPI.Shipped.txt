#nullable enable
HotChocolate.AzureFunctions.GraphQLAttribute
HotChocolate.AzureFunctions.GraphQLAttribute.GraphQLAttribute() -> void
HotChocolate.AzureFunctions.IGraphQLRequestExecutor
HotChocolate.AzureFunctions.IGraphQLRequestExecutor.ExecuteAsync(Microsoft.AspNetCore.Http.HttpRequest! request) -> System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.IActionResult!>!
Microsoft.Azure.Functions.Extensions.DependencyInjection.HotChocolateFunctionsHostBuilderExtensions
Microsoft.Extensions.DependencyInjection.HotChocolateAzureFunctionServiceCollectionExtensions
static Microsoft.Azure.Functions.Extensions.DependencyInjection.HotChocolateFunctionsHostBuilderExtensions.AddGraphQLFunction(this Microsoft.Azure.Functions.Extensions.DependencyInjection.IFunctionsHostBuilder! builder, int maxAllowedRequestSize = 20000000, string! apiRoute = "/api/graphql") -> HotChocolate.Execution.Configuration.IRequestExecutorBuilder!
static Microsoft.Extensions.DependencyInjection.HotChocolateAzureFunctionServiceCollectionExtensions.AddGraphQLFunction(this Microsoft.Extensions.DependencyInjection.IServiceCollection! services, int maxAllowedRequestSize = 20000000, string! apiRoute = "/api/graphql") -> HotChocolate.Execution.Configuration.IRequestExecutorBuilder!
static Microsoft.Extensions.DependencyInjection.HotChocolateAzureFunctionServiceCollectionExtensions.ModifyFunctionOptions(this HotChocolate.Execution.Configuration.IRequestExecutorBuilder! builder, System.Action<HotChocolate.AspNetCore.GraphQLServerOptions!>! configure) -> HotChocolate.Execution.Configuration.IRequestExecutorBuilder!
