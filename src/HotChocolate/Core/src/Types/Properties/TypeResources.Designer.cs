//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HotChocolate.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class TypeResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal TypeResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("HotChocolate.Properties.TypeResources", typeof(TypeResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cycle in object graph detected..
        /// </summary>
        internal static string AnyType_CycleInObjectGraph {
            get {
                return ResourceManager.GetString("AnyType_CycleInObjectGraph", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An Applied Directive is an instances of a directive as applied to a schema element. This type is NOT specified by the graphql specification presently..
        /// </summary>
        internal static string AppliedDirective_Description {
            get {
                return ResourceManager.GetString("AppliedDirective_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The argument `{0}` has no type. Specify the type with `.Argument(&quot;{0}&quot;, a.Type&lt;MyType&gt;())` to fix this issue..
        /// </summary>
        internal static string Argument_TypeIsNull {
            get {
                return ResourceManager.GetString("Argument_TypeIsNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The argument type has to be an input-type..
        /// </summary>
        internal static string ArgumentDescriptor_InputTypeViolation {
            get {
                return ResourceManager.GetString("ArgumentDescriptor_InputTypeViolation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument `{0}` of non-null type `{1}` must not be null..
        /// </summary>
        internal static string ArgumentValueBuilder_NonNull {
            get {
                return ResourceManager.GetString("ArgumentValueBuilder_NonNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified binding cannot be handled..
        /// </summary>
        internal static string BindingCompiler_AddBinding_BindingCannotBeHandled {
            get {
                return ResourceManager.GetString("BindingCompiler_AddBinding_BindingCannotBeHandled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The `Boolean` scalar type represents `true` or `false`..
        /// </summary>
        internal static string BooleanType_Description {
            get {
                return ResourceManager.GetString("BooleanType_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The `Byte` scalar type represents non-fractional whole numeric values. Byte can represent values between 0 and 255..
        /// </summary>
        internal static string ByteType_Description {
            get {
                return ResourceManager.GetString("ByteType_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not resolve the claims principal..
        /// </summary>
        internal static string ClaimsPrincipalParameterExpressionBuilder_NoClaimsFound {
            get {
                return ResourceManager.GetString("ClaimsPrincipalParameterExpressionBuilder_NoClaimsFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A segment of a collection..
        /// </summary>
        internal static string CollectionSegmentType_Description {
            get {
                return ResourceManager.GetString("CollectionSegmentType_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A flattened list of the items..
        /// </summary>
        internal static string CollectionSegmentType_Items_Description {
            get {
                return ResourceManager.GetString("CollectionSegmentType_Items_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Information to aid in pagination..
        /// </summary>
        internal static string CollectionSegmentType_PageInfo_Description {
            get {
                return ResourceManager.GetString("CollectionSegmentType_PageInfo_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified IComplexTypeFieldBindingBuilder-implementation is not supported..
        /// </summary>
        internal static string ComplexTypeBindingBuilder_FieldBuilderNotSupported {
            get {
                return ResourceManager.GetString("ComplexTypeBindingBuilder_FieldBuilderNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The field binding builder is not completed and cannot be added..
        /// </summary>
        internal static string ComplexTypeBindingBuilder_FieldNotComplete {
            get {
                return ResourceManager.GetString("ComplexTypeBindingBuilder_FieldNotComplete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A connection to a list of items..
        /// </summary>
        internal static string ConnectionType_Description {
            get {
                return ResourceManager.GetString("ConnectionType_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A list of edges..
        /// </summary>
        internal static string ConnectionType_Edges_Description {
            get {
                return ResourceManager.GetString("ConnectionType_Edges_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A flattened list of the nodes..
        /// </summary>
        internal static string ConnectionType_Nodes_Description {
            get {
                return ResourceManager.GetString("ConnectionType_Nodes_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Information to aid in pagination..
        /// </summary>
        internal static string ConnectionType_PageInfo_Description {
            get {
                return ResourceManager.GetString("ConnectionType_PageInfo_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Identifies the total count of items in the connection..
        /// </summary>
        internal static string ConnectionType_TotalCount_Description {
            get {
                return ResourceManager.GetString("ConnectionType_TotalCount_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The DataLoader key cannot be null or empty..
        /// </summary>
        internal static string DataLoaderRegistry_KeyNullOrEmpty {
            get {
                return ResourceManager.GetString("DataLoaderRegistry_KeyNullOrEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The DataLoader `{0}` needs to be register with the dependency injection provider..
        /// </summary>
        internal static string DataLoaderResolverContextExtensions_CreateDataLoader_AbstractType {
            get {
                return ResourceManager.GetString("DataLoaderResolverContextExtensions_CreateDataLoader_AbstractType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to create DataLoader `{0}`..
        /// </summary>
        internal static string DataLoaderResolverContextExtensions_CreateDataLoader_UnableToCreate {
            get {
                return ResourceManager.GetString("DataLoaderResolverContextExtensions_CreateDataLoader_UnableToCreate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No DataLoader registry was registered with your dependency injection..
        /// </summary>
        internal static string DataLoaderResolverContextExtensions_RegistryIsNull {
            get {
                return ResourceManager.GetString("DataLoaderResolverContextExtensions_RegistryIsNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to register a DataLoader with your DataLoader registry..
        /// </summary>
        internal static string DataLoaderResolverContextExtensions_UnableToRegister {
            get {
                return ResourceManager.GetString("DataLoaderResolverContextExtensions_UnableToRegister", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The `DateTime` scalar represents an ISO-8601 compliant date time type..
        /// </summary>
        internal static string DateTimeType_Description {
            get {
                return ResourceManager.GetString("DateTimeType_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The `Date` scalar represents an ISO-8601 compliant date type..
        /// </summary>
        internal static string DateType_Description {
            get {
                return ResourceManager.GetString("DateType_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The `Decimal` scalar type represents a decimal floating-point number..
        /// </summary>
        internal static string DecimalType_Description {
            get {
                return ResourceManager.GetString("DecimalType_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The DataLoader `{0}` was not of the requested type `{1}`..
        /// </summary>
        internal static string DefaultDataLoaderRegistry_GetOrRegister {
            get {
                return ResourceManager.GetString("DefaultDataLoaderRegistry_GetOrRegister", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The fieldName cannot be null or empty..
        /// </summary>
        internal static string DefaultNamingConventions_FormatFieldName_EmptyOrNull {
            get {
                return ResourceManager.GetString("DefaultNamingConventions_FormatFieldName_EmptyOrNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only methods are allowed..
        /// </summary>
        internal static string DefaultResolverCompilerService_CompileSubscribe_OnlyMethodsAllowed {
            get {
                return ResourceManager.GetString("DefaultResolverCompilerService_CompileSubscribe_OnlyMethodsAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The public method should already have ensured that we do not have members other than method or property at this point..
        /// </summary>
        internal static string DefaultResolverCompilerService_CreateResolver_ArgumentValidationError {
            get {
                return ResourceManager.GetString("DefaultResolverCompilerService_CreateResolver_ArgumentValidationError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified member has to be a method or a property..
        /// </summary>
        internal static string DefaultTypeInspector_MemberInvalid {
            get {
                return ResourceManager.GetString("DefaultTypeInspector_MemberInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The `@defer` directive may be provided for fragment spreads and inline fragments to inform the executor to delay the execution of the current fragment to indicate deprioritization of the current fragment. A query with `@defer` directive will cause the request to potentially return multiple responses, where non-deferred data is delivered in the initial response and data deferred is delivered in a subsequent response. `@include` and `@skip` take precedence over `@defer`..
        /// </summary>
        internal static string DeferDirectiveType_Description {
            get {
                return ResourceManager.GetString("DeferDirectiveType_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deferred when true..
        /// </summary>
        internal static string DeferDirectiveType_If_Description {
            get {
                return ResourceManager.GetString("DeferDirectiveType_If_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If this argument label has a value other than null, it will be passed on to the result of this defer directive. This label is intended to give client applications a way to identify to which fragment a deferred result belongs to..
        /// </summary>
        internal static string DeferDirectiveType_Label_Description {
            get {
                return ResourceManager.GetString("DeferDirectiveType_Label_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only type system objects are allowed as schema type..
        /// </summary>
        internal static string DependencyDescriptorBase_OnlyTsoIsAllowed {
            get {
                return ResourceManager.GetString("DependencyDescriptorBase_OnlyTsoIsAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deprecations include a reason for why it is deprecated, which is formatted using Markdown syntax (as specified by CommonMark)..
        /// </summary>
        internal static string DeprecatedDirectiveType_ReasonDescription {
            get {
                return ResourceManager.GetString("DeprecatedDirectiveType_ReasonDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The @deprecated directive is used within the type system definition language to indicate deprecated portions of a GraphQL service’s schema,such as deprecated fields on a type or deprecated enum values..
        /// </summary>
        internal static string DeprecatedDirectiveType_TypeDescription {
            get {
                return ResourceManager.GetString("DeprecatedDirectiveType_TypeDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.
        ///
        ///In some cases, you need to provide options to alter GraphQL&apos;s execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor..
        /// </summary>
        internal static string Directive_Description {
            get {
                return ResourceManager.GetString("Directive_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The argument name is invalid..
        /// </summary>
        internal static string Directive_GetArgument_ArgumentNameIsInvalid {
            get {
                return ResourceManager.GetString("Directive_GetArgument_ArgumentNameIsInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The directive &apos;{0}&apos; has no argument with the name &apos;{1}&apos;..
        /// </summary>
        internal static string Directive_GetArgumentValue_UnknownArgument {
            get {
                return ResourceManager.GetString("Directive_GetArgumentValue_UnknownArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use `locations`..
        /// </summary>
        internal static string Directive_UseLocation {
            get {
                return ResourceManager.GetString("Directive_UseLocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Directive arguments can have names and values. The values are in graphql SDL syntax printed as a string. This type is NOT specified by the graphql specification presently..
        /// </summary>
        internal static string DirectiveArgument_Description {
            get {
                return ResourceManager.GetString("DirectiveArgument_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified directive `@{0}` is unique and cannot be added twice..
        /// </summary>
        internal static string DirectiveCollection_DirectiveIsUnique {
            get {
                return ResourceManager.GetString("DirectiveCollection_DirectiveIsUnique", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified directive `@{0}` is not allowed on the current location `{1}`..
        /// </summary>
        internal static string DirectiveCollection_LocationNotAllowed {
            get {
                return ResourceManager.GetString("DirectiveCollection_LocationNotAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Location adjacent to an argument definition.
        /// </summary>
        internal static string DirectiveLocation_ArgumentDefinition {
            get {
                return ResourceManager.GetString("DirectiveLocation_ArgumentDefinition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A Directive can be adjacent to many parts of the GraphQL language, a __DirectiveLocation describes one such possible adjacencies..
        /// </summary>
        internal static string DirectiveLocation_Description {
            get {
                return ResourceManager.GetString("DirectiveLocation_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Location adjacent to an enum definition..
        /// </summary>
        internal static string DirectiveLocation_Enum {
            get {
                return ResourceManager.GetString("DirectiveLocation_Enum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Location adjacent to an enum value definition..
        /// </summary>
        internal static string DirectiveLocation_EnumValue {
            get {
                return ResourceManager.GetString("DirectiveLocation_EnumValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Location adjacent to a field..
        /// </summary>
        internal static string DirectiveLocation_Field {
            get {
                return ResourceManager.GetString("DirectiveLocation_Field", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Location adjacent to a field definition..
        /// </summary>
        internal static string DirectiveLocation_FieldDefinition {
            get {
                return ResourceManager.GetString("DirectiveLocation_FieldDefinition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Location adjacent to a fragment definition..
        /// </summary>
        internal static string DirectiveLocation_FragmentDefinition {
            get {
                return ResourceManager.GetString("DirectiveLocation_FragmentDefinition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Location adjacent to a fragment spread..
        /// </summary>
        internal static string DirectiveLocation_FragmentSpread {
            get {
                return ResourceManager.GetString("DirectiveLocation_FragmentSpread", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Location adjacent to an inline fragment..
        /// </summary>
        internal static string DirectiveLocation_InlineFragment {
            get {
                return ResourceManager.GetString("DirectiveLocation_InlineFragment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Location adjacent to an input object field definition..
        /// </summary>
        internal static string DirectiveLocation_InputFieldDefinition {
            get {
                return ResourceManager.GetString("DirectiveLocation_InputFieldDefinition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Location adjacent to an input object type definition..
        /// </summary>
        internal static string DirectiveLocation_InputObject {
            get {
                return ResourceManager.GetString("DirectiveLocation_InputObject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Location adjacent to an interface definition..
        /// </summary>
        internal static string DirectiveLocation_Interface {
            get {
                return ResourceManager.GetString("DirectiveLocation_Interface", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Location adjacent to a mutation operation..
        /// </summary>
        internal static string DirectiveLocation_Mutation {
            get {
                return ResourceManager.GetString("DirectiveLocation_Mutation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Location adjacent to an object type definition..
        /// </summary>
        internal static string DirectiveLocation_Object {
            get {
                return ResourceManager.GetString("DirectiveLocation_Object", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Location adjacent to a query operation..
        /// </summary>
        internal static string DirectiveLocation_Query {
            get {
                return ResourceManager.GetString("DirectiveLocation_Query", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Location adjacent to a scalar definition..
        /// </summary>
        internal static string DirectiveLocation_Scalar {
            get {
                return ResourceManager.GetString("DirectiveLocation_Scalar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Location adjacent to a schema definition..
        /// </summary>
        internal static string DirectiveLocation_Schema {
            get {
                return ResourceManager.GetString("DirectiveLocation_Schema", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Location adjacent to a subscription operation..
        /// </summary>
        internal static string DirectiveLocation_Subscription {
            get {
                return ResourceManager.GetString("DirectiveLocation_Subscription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Location adjacent to a union definition..
        /// </summary>
        internal static string DirectiveLocation_Union {
            get {
                return ResourceManager.GetString("DirectiveLocation_Union", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Location adjacent to a variable definition..
        /// </summary>
        internal static string DirectiveLocation_VariableDefinition {
            get {
                return ResourceManager.GetString("DirectiveLocation_VariableDefinition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The `{0}` directive does not declare any location on which it is valid..
        /// </summary>
        internal static string DirectiveType_NoLocations {
            get {
                return ResourceManager.GetString("DirectiveType_NoLocations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Replace Middleware with `Use`..
        /// </summary>
        internal static string DirectiveType_ReplaceWithUse {
            get {
                return ResourceManager.GetString("DirectiveType_ReplaceWithUse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to convert the argument value to the specified type..
        /// </summary>
        internal static string DirectiveType_UnableToConvert {
            get {
                return ResourceManager.GetString("DirectiveType_UnableToConvert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only property expressions are allowed to describe a directive type argument..
        /// </summary>
        internal static string DirectiveTypeDescriptor_OnlyProperties {
            get {
                return ResourceManager.GetString("DirectiveTypeDescriptor_OnlyProperties", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified location `{0}` is not supported..
        /// </summary>
        internal static string DirectiveTypeFactory_LocationNotSupported {
            get {
                return ResourceManager.GetString("DirectiveTypeFactory_LocationNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A cursor for use in pagination..
        /// </summary>
        internal static string EdgeType_Cursor_Description {
            get {
                return ResourceManager.GetString("EdgeType_Cursor_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An edge in a connection..
        /// </summary>
        internal static string EdgeType_Description {
            get {
                return ResourceManager.GetString("EdgeType_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Edge types that have a non-object node are not supported..
        /// </summary>
        internal static string EdgeType_IsInstanceOfType_NonObject {
            get {
                return ResourceManager.GetString("EdgeType_IsInstanceOfType_NonObject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The item at the end of the edge..
        /// </summary>
        internal static string EdgeType_Node_Description {
            get {
                return ResourceManager.GetString("EdgeType_Node_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The enum type `{0}` has no values..
        /// </summary>
        internal static string EnumType_NoValues {
            get {
                return ResourceManager.GetString("EnumType_NoValues", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The enum type extension can only be merged with an enum type..
        /// </summary>
        internal static string EnumTypeExtension_CannotMerge {
            get {
                return ResourceManager.GetString("EnumTypeExtension_CannotMerge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The enum value `{0}` of the enum type extension is not assignable with the target enum type..
        /// </summary>
        internal static string EnumTypeExtension_ValueTypeInvalid {
            get {
                return ResourceManager.GetString("EnumTypeExtension_ValueTypeInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One possible value for a given Enum. Enum values are unique values, not a placeholder for a string or numeric value. However an Enum value is returned in a JSON response as a string..
        /// </summary>
        internal static string EnumValue_Description {
            get {
                return ResourceManager.GetString("EnumValue_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The inner value of enum value cannot be null or empty..
        /// </summary>
        internal static string EnumValue_ValueIsNull {
            get {
                return ResourceManager.GetString("EnumValue_ValueIsNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The field `{0}` must only declare additional arguments to an implemented field that are nullable..
        /// </summary>
        internal static string ErrorHelper_AdditionalArgumentNotNullable {
            get {
                return ResourceManager.GetString("ErrorHelper_AdditionalArgumentNotNullable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The argument `{0}` of the implemented field `{1}` must be defined. The field `{2}` must include an argument of the same name for every argument defined on the implemented field of the interface type `{3}`..
        /// </summary>
        internal static string ErrorHelper_ArgumentNotImplemented {
            get {
                return ResourceManager.GetString("ErrorHelper_ArgumentNotImplemented", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to resolve the interface type. For more details look at the error object..
        /// </summary>
        internal static string ErrorHelper_CompleteInterfacesHelper_UnableToResolveInterface {
            get {
                return ResourceManager.GetString("ErrorHelper_CompleteInterfacesHelper_UnableToResolveInterface", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The argument `{0}` does not exist on the directive `{1}`..
        /// </summary>
        internal static string ErrorHelper_DirectiveCollection_ArgumentDoesNotExist {
            get {
                return ResourceManager.GetString("ErrorHelper_DirectiveCollection_ArgumentDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The argument `{0}` of directive `{1}` mustn&apos;t be null..
        /// </summary>
        internal static string ErrorHelper_DirectiveCollection_ArgumentNonNullViolation {
            get {
                return ResourceManager.GetString("ErrorHelper_DirectiveCollection_ArgumentNonNullViolation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The directive arguments have invalid values: &apos;{0}&apos; at {1}..
        /// </summary>
        internal static string ErrorHelper_DirectiveCollection_ArgumentValueTypeIsWrong {
            get {
                return ResourceManager.GetString("ErrorHelper_DirectiveCollection_ArgumentValueTypeIsWrong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The field `{0}` declares the data middleware `{1}` more than once..
        /// </summary>
        internal static string ErrorHelper_DuplicateDataMiddlewareDetected_Message {
            get {
                return ResourceManager.GetString("ErrorHelper_DuplicateDataMiddlewareDetected_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following {0}{1} `{2}` {3} declared multiple times on `{4}`..
        /// </summary>
        internal static string ErrorHelper_DuplicateFieldName_Message {
            get {
                return ResourceManager.GetString("ErrorHelper_DuplicateFieldName_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The maximum number of nodes that can be fetched at once is {0}. This selection tried to fetch {1} nodes that exceeded the maximum allowed amount..
        /// </summary>
        internal static string ErrorHelper_FetchedToManyNodesAtOnce {
            get {
                return ResourceManager.GetString("ErrorHelper_FetchedToManyNodesAtOnce", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The field `{0}` must be implemented by {1} type `{2}`..
        /// </summary>
        internal static string ErrorHelper_FieldNotImplemented {
            get {
                return ResourceManager.GetString("ErrorHelper_FieldNotImplemented", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot reference Input Object `{0}` within itself through a series of non-null fields `{1}`..
        /// </summary>
        internal static string ErrorHelper_InputObjectMustNotHaveRecursiveNonNullableReferencesToSelf {
            get {
                return ResourceManager.GetString("ErrorHelper_InputObjectMustNotHaveRecursiveNonNullableReferencesToSelf", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is no object type implementing interface `{0}`..
        /// </summary>
        internal static string ErrorHelper_InterfaceHasNoImplementation {
            get {
                return ResourceManager.GetString("ErrorHelper_InterfaceHasNoImplementation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The named argument `{0}` on field `{1}` must accept the same type `{2}` (invariant) as that named argument on the interface `{3}`..
        /// </summary>
        internal static string ErrorHelper_InvalidArgumentType {
            get {
                return ResourceManager.GetString("ErrorHelper_InvalidArgumentType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Field `{0}` must return a type which is equal to or a subtype of (covariant) the return type `{1}` of the interface field..
        /// </summary>
        internal static string ErrorHelper_InvalidFieldType {
            get {
                return ResourceManager.GetString("ErrorHelper_InvalidFieldType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The middleware pipeline order for the field `{0}` is invalid. Middleware order is important especially with data pipelines. The correct order of a data pipeline is as follows: UseDbContext -&gt; UsePaging -&gt; UseProjection -&gt; UseFiltering -&gt; UseSorting. You may omit any of these middleware or have other middleware in between but you need to abide by the overall order. Your order is: {1}..
        /// </summary>
        internal static string ErrorHelper_MiddlewareOrderInvalid {
            get {
                return ResourceManager.GetString("ErrorHelper_MiddlewareOrderInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {0} type `{1}` has to at least define one field in order to be valid..
        /// </summary>
        internal static string ErrorHelper_NeedsOneAtLeastField {
            get {
                return ResourceManager.GetString("ErrorHelper_NeedsOneAtLeastField", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The node resolver `{0}` must specify exactly one argument..
        /// </summary>
        internal static string ErrorHelper_NodeResolver_MustHaveExactlyOneIdArg {
            get {
                return ResourceManager.GetString("ErrorHelper_NodeResolver_MustHaveExactlyOneIdArg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The node resolver `{0}` must return an object type..
        /// </summary>
        internal static string ErrorHelper_NodeResolver_MustReturnObject {
            get {
                return ResourceManager.GetString("ErrorHelper_NodeResolver_MustReturnObject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type `{0}` implementing the node interface must expose an id field..
        /// </summary>
        internal static string ErrorHelper_NodeResolver_NodeTypeHasNoId {
            get {
                return ResourceManager.GetString("ErrorHelper_NodeResolver_NodeTypeHasNoId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type `{0}` implements the node interface but does not provide a node resolver for re-fetching..
        /// </summary>
        internal static string ErrorHelper_NodeResolverMissing {
            get {
                return ResourceManager.GetString("ErrorHelper_NodeResolverMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type {0} is invalid because the runtime type is a {1}. It is not supported to have type system members as runtime types..
        /// </summary>
        internal static string ErrorHelper_NoSchemaTypesAllowedAsRuntimeType {
            get {
                return ResourceManager.GetString("ErrorHelper_NoSchemaTypesAllowedAsRuntimeType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {0} type must also declare all interfaces declared by implemented interfaces..
        /// </summary>
        internal static string ErrorHelper_NotTransitivelyImplemented {
            get {
                return ResourceManager.GetString("ErrorHelper_NotTransitivelyImplemented", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The field `{0}.{1}` has no resolver..
        /// </summary>
        internal static string ErrorHelper_ObjectField_HasNoResolver {
            get {
                return ResourceManager.GetString("ErrorHelper_ObjectField_HasNoResolver", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to infer or resolve the type of field {0}.{1}. Try to explicitly provide the type like the following: `descriptor.Field(&quot;field&quot;).Type&lt;List&lt;StringType&gt;&gt;()`..
        /// </summary>
        internal static string ErrorHelper_ObjectType_UnableToInferOrResolveType {
            get {
                return ResourceManager.GetString("ErrorHelper_ObjectType_UnableToInferOrResolveType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Oneof Input Object `{0}` must only have nullable fields without default values. Edit your type and make the field{1} `{2}` nullable and remove any defaults..
        /// </summary>
        internal static string ErrorHelper_OneofInputObjectMustHaveNullableFieldsWithoutDefaults {
            get {
                return ResourceManager.GetString("ErrorHelper_OneofInputObjectMustHaveNullableFieldsWithoutDefaults", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is no node resolver registered for type `{0}`..
        /// </summary>
        internal static string ErrorHelper_Relay_NoNodeResolver {
            get {
                return ResourceManager.GetString("ErrorHelper_Relay_NoNodeResolver", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Required argument {0} cannot be deprecated..
        /// </summary>
        internal static string ErrorHelper_RequiredArgumentCannotBeDeprecated {
            get {
                return ResourceManager.GetString("ErrorHelper_RequiredArgumentCannotBeDeprecated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Required input field {0} cannot be deprecated..
        /// </summary>
        internal static string ErrorHelper_RequiredFieldCannotBeDeprecated {
            get {
                return ResourceManager.GetString("ErrorHelper_RequiredFieldCannotBeDeprecated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Field names starting with `__` are reserved for the GraphQL specification..
        /// </summary>
        internal static string ErrorHelper_TwoUnderscoresNotAllowedField {
            get {
                return ResourceManager.GetString("ErrorHelper_TwoUnderscoresNotAllowedField", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument names starting with `__` are reserved for the GraphQL specification..
        /// </summary>
        internal static string ErrorHelper_TwoUnderscoresNotAllowedOnArgument {
            get {
                return ResourceManager.GetString("ErrorHelper_TwoUnderscoresNotAllowedOnArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Names starting with `__` are reserved for the GraphQL specification..
        /// </summary>
        internal static string ErrorHelper_TwoUnderscoresNotAllowedOnDirectiveName {
            get {
                return ResourceManager.GetString("ErrorHelper_TwoUnderscoresNotAllowedOnDirectiveName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The event message parameter can only be used in a subscription context..
        /// </summary>
        internal static string EventMessageParameterExpressionBuilder_MessageNotFound {
            get {
                return ResourceManager.GetString("EventMessageParameterExpressionBuilder_MessageNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified key `{0}` does not exist on `context.ContextData`..
        /// </summary>
        internal static string ExpressionHelper_GetGlobalStateWithDefault_NoDefaults {
            get {
                return ResourceManager.GetString("ExpressionHelper_GetGlobalStateWithDefault_NoDefaults", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified key `{0}` does not exist on `context.ScopedContextData`..
        /// </summary>
        internal static string ExpressionHelper_GetScopedStateWithDefault_NoDefaultValue {
            get {
                return ResourceManager.GetString("ExpressionHelper_GetScopedStateWithDefault_NoDefaultValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified context key does not exist..
        /// </summary>
        internal static string ExpressionHelper_ResolveScopedContextData_KeyDoesNotExist {
            get {
                return ResourceManager.GetString("ExpressionHelper_ResolveScopedContextData_KeyDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The non-generic IExecutable interface cannot be used as a type in the schema..
        /// </summary>
        internal static string ExtendedTypeReferenceHandler_NonGenericExecutableNotAllowed {
            get {
                return ResourceManager.GetString("ExtendedTypeReferenceHandler_NonGenericExecutableNotAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type..
        /// </summary>
        internal static string Field_Description {
            get {
                return ResourceManager.GetString("Field_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The max expected field count cannot be smaller than 1..
        /// </summary>
        internal static string FieldInitHelper_CompleteFields_MaxFieldCountToSmall {
            get {
                return ResourceManager.GetString("FieldInitHelper_CompleteFields_MaxFieldCountToSmall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not parse the native value of input field `{0}`..
        /// </summary>
        internal static string FieldInitHelper_InvalidDefaultValue {
            get {
                return ResourceManager.GetString("FieldInitHelper_InvalidDefaultValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} `{1}` has no fields declared..
        /// </summary>
        internal static string FieldInitHelper_NoFields {
            get {
                return ResourceManager.GetString("FieldInitHelper_NoFields", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](http://en.wikipedia.org/wiki/IEEE_floating_point)..
        /// </summary>
        internal static string FloatType_Description {
            get {
                return ResourceManager.GetString("FloatType_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to decode the id string..
        /// </summary>
        internal static string IdSerializer_UnableToDecode {
            get {
                return ResourceManager.GetString("IdSerializer_UnableToDecode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to encode data..
        /// </summary>
        internal static string IdSerializer_UnableToEncode {
            get {
                return ResourceManager.GetString("IdSerializer_UnableToEncode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `&quot;4&quot;`) or integer (such as `4`) input value will be accepted as an ID..
        /// </summary>
        internal static string IdType_Description {
            get {
                return ResourceManager.GetString("IdType_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Included when true..
        /// </summary>
        internal static string IncludeDirectiveType_IfDescription {
            get {
                return ResourceManager.GetString("IncludeDirectiveType_IfDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Directs the executor to include this field or fragment only when the `if` argument is true..
        /// </summary>
        internal static string IncludeDirectiveType_TypeDescription {
            get {
                return ResourceManager.GetString("IncludeDirectiveType_TypeDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to set the input field value..
        /// </summary>
        internal static string InputField_CannotSetValue {
            get {
                return ResourceManager.GetString("InputField_CannotSetValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The input object type can only parse object value literals..
        /// </summary>
        internal static string InputObjectType_CannotParseLiteral {
            get {
                return ResourceManager.GetString("InputObjectType_CannotParseLiteral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The input object `{0}` does not have any fields..
        /// </summary>
        internal static string InputObjectType_NoFields {
            get {
                return ResourceManager.GetString("InputObjectType_NoFields", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only properties are allowed for input types..
        /// </summary>
        internal static string InputObjectTypeDescriptor_OnlyProperties {
            get {
                return ResourceManager.GetString("InputObjectTypeDescriptor_OnlyProperties", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The input object type extension can only be merged with an input object type..
        /// </summary>
        internal static string InputObjectTypeExtension_CannotMerge {
            get {
                return ResourceManager.GetString("InputObjectTypeExtension_CannotMerge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The input value of type `{0}` must not be null..
        /// </summary>
        internal static string InputTypeNonNullCheck_ValueIsNull {
            get {
                return ResourceManager.GetString("InputTypeNonNullCheck_ValueIsNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A GraphQL-formatted string representing the default value for this input value..
        /// </summary>
        internal static string InputValue_DefaultValue {
            get {
                return ResourceManager.GetString("InputValue_DefaultValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value..
        /// </summary>
        internal static string InputValue_Description {
            get {
                return ResourceManager.GetString("InputValue_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The arguments of the interface field {0} from interface {1} and {2} do not match and are implemented by object type {3}..
        /// </summary>
        internal static string InterfaceImplRule_ArgumentsDoNotMatch {
            get {
                return ResourceManager.GetString("InterfaceImplRule_ArgumentsDoNotMatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Object type {0} does not implement all arguments of field {1} from interface {2}..
        /// </summary>
        internal static string InterfaceImplRule_ArgumentsNotImpl {
            get {
                return ResourceManager.GetString("InterfaceImplRule_ArgumentsNotImpl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Object type {0} does not implement the field {1} from interface {2}..
        /// </summary>
        internal static string InterfaceImplRule_FieldNotImpl {
            get {
                return ResourceManager.GetString("InterfaceImplRule_FieldNotImpl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The return type of the interface field {0} from interface {1} and {2} do not match and are implemented by object type {3}..
        /// </summary>
        internal static string InterfaceImplRule_FieldTypeInvalid {
            get {
                return ResourceManager.GetString("InterfaceImplRule_FieldTypeInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The return type of the interface field {0} does not match the field declared by object type {1}..
        /// </summary>
        internal static string InterfaceImplRule_ReturnTypeInvalid {
            get {
                return ResourceManager.GetString("InterfaceImplRule_ReturnTypeInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The interface base class cannot be used as interface implementation declaration..
        /// </summary>
        internal static string InterfaceTypeDescriptor_InterfaceBaseClass {
            get {
                return ResourceManager.GetString("InterfaceTypeDescriptor_InterfaceBaseClass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A field of an interface can only be inferred from a property or a method..
        /// </summary>
        internal static string InterfaceTypeDescriptor_MustBePropertyOrMethod {
            get {
                return ResourceManager.GetString("InterfaceTypeDescriptor_MustBePropertyOrMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The interface type extension can only be merged with an interface type..
        /// </summary>
        internal static string InterfaceTypeExtension_CannotMerge {
            get {
                return ResourceManager.GetString("InterfaceTypeExtension_CannotMerge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1..
        /// </summary>
        internal static string IntType_Description {
            get {
                return ResourceManager.GetString("IntType_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The `Long` scalar type represents non-fractional signed whole 64-bit numeric values. Long can represent values between -(2^63) and 2^63 - 1..
        /// </summary>
        internal static string LongType_Description {
            get {
                return ResourceManager.GetString("LongType_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The multiplier path scalar represents a valid GraphQL multiplier path string..
        /// </summary>
        internal static string Name_Cannot_BeEmpty {
            get {
                return ResourceManager.GetString("Name_Cannot_BeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name scalar represents a valid GraphQL name as specified in the spec and can be used to refer to fields or types..
        /// </summary>
        internal static string NameType_Description {
            get {
                return ResourceManager.GetString("NameType_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The ID field must be a property or a method..
        /// </summary>
        internal static string NodeDescriptor_IdField_MustBePropertyOrMethod {
            get {
                return ResourceManager.GetString("NodeDescriptor_IdField_MustBePropertyOrMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An ID-member must be a property-expression or a method-call-expression..
        /// </summary>
        internal static string NodeDescriptor_IdMember {
            get {
                return ResourceManager.GetString("NodeDescriptor_IdMember", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A node-resolver-expression must be a method-call-expression..
        /// </summary>
        internal static string NodeDescriptor_MustBeMethod {
            get {
                return ResourceManager.GetString("NodeDescriptor_MustBeMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The node interface is implemented by entities that have a global unique identifier..
        /// </summary>
        internal static string NodeType_TypeDescription {
            get {
                return ResourceManager.GetString("NodeType_TypeDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified type is not an input type..
        /// </summary>
        internal static string NonNamedType_IsInstanceOfType_NotAnInputType {
            get {
                return ResourceManager.GetString("NonNamedType_IsInstanceOfType_NotAnInputType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified type is not an input type..
        /// </summary>
        internal static string NonNullType_NotAnInputType {
            get {
                return ResourceManager.GetString("NonNullType_NotAnInputType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The inner type of non-null type must be a nullable type..
        /// </summary>
        internal static string NonNullType_TypeIsNunNullType {
            get {
                return ResourceManager.GetString("NonNullType_TypeIsNunNullType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A non null type cannot parse null value literals..
        /// </summary>
        internal static string NonNullType_ValueIsNull {
            get {
                return ResourceManager.GetString("NonNullType_ValueIsNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The field-type must be an output-type..
        /// </summary>
        internal static string ObjectFieldDescriptorBase_FieldType {
            get {
                return ResourceManager.GetString("ObjectFieldDescriptorBase_FieldType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cycle in object graph detected..
        /// </summary>
        internal static string ObjectToDictionaryConverter_CycleInObjectGraph {
            get {
                return ResourceManager.GetString("ObjectToDictionaryConverter_CycleInObjectGraph", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The interface base class cannot be used as interface implementation declaration..
        /// </summary>
        internal static string ObjectTypeDescriptor_InterfaceBaseClass {
            get {
                return ResourceManager.GetString("ObjectTypeDescriptor_InterfaceBaseClass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A field-expression must be a property-expression or a method-call-expression..
        /// </summary>
        internal static string ObjectTypeDescriptor_MustBePropertyOrMethod {
            get {
                return ResourceManager.GetString("ObjectTypeDescriptor_MustBePropertyOrMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Schema types cannot be used as resolver types..
        /// </summary>
        internal static string ObjectTypeDescriptor_Resolver_SchemaType {
            get {
                return ResourceManager.GetString("ObjectTypeDescriptor_Resolver_SchemaType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The resolver type {0} cannot be used, a non-abstract type is required..
        /// </summary>
        internal static string ObjectTypeDescriptor_ResolveWith_NonAbstract {
            get {
                return ResourceManager.GetString("ObjectTypeDescriptor_ResolveWith_NonAbstract", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The object type extension can only be merged with an object type..
        /// </summary>
        internal static string ObjectTypeExtension_CannotMerge {
            get {
                return ResourceManager.GetString("ObjectTypeExtension_CannotMerge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The `@oneOf` directive is used within the type system definition language
        /// to indicate:
        ///
        /// - an Input Object is a Oneof Input Object, or
        /// - an Object Type&apos;s Field is a Oneof Field..
        /// </summary>
        internal static string OneOfDirectiveType_Description {
            get {
                return ResourceManager.GetString("OneOfDirectiveType_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The member expression must specify a property or method that is public and that belongs to the type {0}.
        /// </summary>
        internal static string Reflection_MemberMust_BeMethodOrProperty {
            get {
                return ResourceManager.GetString("Reflection_MemberMust_BeMethodOrProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Member is not a method!.
        /// </summary>
        internal static string ReflectionUtils_ExtractMethod_MethodExpected {
            get {
                return ResourceManager.GetString("ReflectionUtils_ExtractMethod_MethodExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The object is not yet ready for this action..
        /// </summary>
        internal static string RegisteredType_Completion_NotYetReady {
            get {
                return ResourceManager.GetString("RegisteredType_Completion_NotYetReady", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The completion context can only be set once..
        /// </summary>
        internal static string RegisteredType_CompletionContext_Already_Set {
            get {
                return ResourceManager.GetString("RegisteredType_CompletionContext_Already_Set", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The completion context has not been initialized..
        /// </summary>
        internal static string RegisteredType_CompletionContext_Not_Initialized {
            get {
                return ResourceManager.GetString("RegisteredType_CompletionContext_Not_Initialized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fetches an object given its ID..
        /// </summary>
        internal static string Relay_NodeField_Description {
            get {
                return ResourceManager.GetString("Relay_NodeField_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ID of the object..
        /// </summary>
        internal static string Relay_NodeField_Id_Description {
            get {
                return ResourceManager.GetString("Relay_NodeField_Id_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lookup nodes by a list of IDs..
        /// </summary>
        internal static string Relay_NodesField_Description {
            get {
                return ResourceManager.GetString("Relay_NodesField_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The list of node IDs..
        /// </summary>
        internal static string Relay_NodesField_Ids_Description {
            get {
                return ResourceManager.GetString("Relay_NodesField_Ids_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A directive type mustn&apos;t be one of the base classes `DirectiveType` or `DirectiveType&lt;T&gt;` but must be a type inheriting from `DirectiveType` or `DirectiveType&lt;T&gt;`..
        /// </summary>
        internal static string ResolverCompiler_UnknownParameterType {
            get {
                return ResourceManager.GetString("ResolverCompiler_UnknownParameterType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified key `{0}` does not exist on `context.ContextData`.
        /// </summary>
        internal static string ResolverContextExtensions_ContextData_KeyNotFound {
            get {
                return ResourceManager.GetString("ResolverContextExtensions_ContextData_KeyNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The field name mustn&apos;t be null, empty or consist only of white spaces..
        /// </summary>
        internal static string ResolverContextExtensions_IsSelected_FieldNameEmpty {
            get {
                return ResourceManager.GetString("ResolverContextExtensions_IsSelected_FieldNameEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified key `{0}` does not exist on `context.LocalContextData`.
        /// </summary>
        internal static string ResolverContextExtensions_LocalContextData_KeyNotFound {
            get {
                return ResourceManager.GetString("ResolverContextExtensions_LocalContextData_KeyNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified key `{0}` does not exist on `context.ScopedContextData`.
        /// </summary>
        internal static string ResolverContextExtensions_ScopedContextData_KeyNotFound {
            get {
                return ResourceManager.GetString("ResolverContextExtensions_ScopedContextData_KeyNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified IResolverFieldBindingBuilder-implementation is not supported..
        /// </summary>
        internal static string ResolverTypeBindingBuilder_FieldBuilderNotSupported {
            get {
                return ResourceManager.GetString("ResolverTypeBindingBuilder_FieldBuilderNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The field binding builder is not completed and cannot be added..
        /// </summary>
        internal static string ResolverTypeBindingBuilder_FieldNotComplete {
            get {
                return ResourceManager.GetString("ResolverTypeBindingBuilder_FieldNotComplete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} cannot deserialize the given value..
        /// </summary>
        internal static string Scalar_Cannot_Deserialize {
            get {
                return ResourceManager.GetString("Scalar_Cannot_Deserialize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} cannot parse the given literal of type `{1}`..
        /// </summary>
        internal static string Scalar_Cannot_ParseLiteral {
            get {
                return ResourceManager.GetString("Scalar_Cannot_ParseLiteral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} cannot parse the given value of type `{1}`..
        /// </summary>
        internal static string Scalar_Cannot_ParseValue {
            get {
                return ResourceManager.GetString("Scalar_Cannot_ParseValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} cannot serialize the given value..
        /// </summary>
        internal static string Scalar_Cannot_Serialize {
            get {
                return ResourceManager.GetString("Scalar_Cannot_Serialize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, as well as the entry points for query, mutation, and subscription operations..
        /// </summary>
        internal static string Schema_Description {
            get {
                return ResourceManager.GetString("Schema_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A list of all directives supported by this server..
        /// </summary>
        internal static string Schema_Directives {
            get {
                return ResourceManager.GetString("Schema_Directives", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified type `{0}` does not exist..
        /// </summary>
        internal static string Schema_GetDirectiveType_DoesNotExist {
            get {
                return ResourceManager.GetString("Schema_GetDirectiveType_DoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If this server supports mutation, the type that mutation operations will be rooted at..
        /// </summary>
        internal static string Schema_MutationType {
            get {
                return ResourceManager.GetString("Schema_MutationType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type that query operations will be rooted at..
        /// </summary>
        internal static string Schema_QueryType {
            get {
                return ResourceManager.GetString("Schema_QueryType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If this server support subscription, the type that subscription operations will be rooted at..
        /// </summary>
        internal static string Schema_SubscriptionType {
            get {
                return ResourceManager.GetString("Schema_SubscriptionType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A list of all types supported by this server..
        /// </summary>
        internal static string Schema_Types {
            get {
                return ResourceManager.GetString("Schema_Types", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The root type `{0}` has already been registered..
        /// </summary>
        internal static string SchemaBuilder_AddRootType_TypeAlreadyRegistered {
            get {
                return ResourceManager.GetString("SchemaBuilder_AddRootType_TypeAlreadyRegistered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is no handler registered that can handle the specified schema binding..
        /// </summary>
        internal static string SchemaBuilder_Binding_CannotBeHandled {
            get {
                return ResourceManager.GetString("SchemaBuilder_Binding_CannotBeHandled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The schema binding is not valid..
        /// </summary>
        internal static string SchemaBuilder_Binding_Invalid {
            get {
                return ResourceManager.GetString("SchemaBuilder_Binding_Invalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified convention type is not supported..
        /// </summary>
        internal static string SchemaBuilder_Convention_NotSupported {
            get {
                return ResourceManager.GetString("SchemaBuilder_Convention_NotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified interceptor type is not supported..
        /// </summary>
        internal static string SchemaBuilder_Interceptor_NotSupported {
            get {
                return ResourceManager.GetString("SchemaBuilder_Interceptor_NotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The given schema has to inherit from TypeSystemObjectBase in order to be initializable..
        /// </summary>
        internal static string SchemaBuilder_ISchemaNotTso {
            get {
                return ResourceManager.GetString("SchemaBuilder_ISchemaNotTso", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to schemaType must be a schema type..
        /// </summary>
        internal static string SchemaBuilder_MustBeSchemaType {
            get {
                return ResourceManager.GetString("SchemaBuilder_MustBeSchemaType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The schema builder was unable to identify the query type of the schema. Either specify which type is the query type or set the schema builder to non-strict validation mode..
        /// </summary>
        internal static string SchemaBuilder_NoQueryType {
            get {
                return ResourceManager.GetString("SchemaBuilder_NoQueryType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A root type must be a class..
        /// </summary>
        internal static string SchemaBuilder_RootType_MustBeClass {
            get {
                return ResourceManager.GetString("SchemaBuilder_RootType_MustBeClass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A root type must be an object type..
        /// </summary>
        internal static string SchemaBuilder_RootType_MustBeObjectType {
            get {
                return ResourceManager.GetString("SchemaBuilder_RootType_MustBeObjectType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Non-generic schema types are not allowed..
        /// </summary>
        internal static string SchemaBuilder_RootType_NonGenericType {
            get {
                return ResourceManager.GetString("SchemaBuilder_RootType_NonGenericType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The given schema has to inherit from `Schema` in order to be initializable..
        /// </summary>
        internal static string SchemaBuilder_SchemaTypeInvalid {
            get {
                return ResourceManager.GetString("SchemaBuilder_SchemaTypeInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified type `{0}` is a GraphQL schema type. AddEnumType&lt;T&gt; is a helper method to register a runtime type as GraphQL enum type. Use AddType&lt;T&gt; to register GraphQL schema types..
        /// </summary>
        internal static string SchemaBuilderExtensions_AddEnumType_TIsSchemaType {
            get {
                return ResourceManager.GetString("SchemaBuilderExtensions_AddEnumType_TIsSchemaType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified type `{0}` is a GraphQL schema type. AddInputObjectType&lt;T&gt; is a helper method to register a runtime type as GraphQL input object type. Use AddType&lt;T&gt; to register GraphQL schema types..
        /// </summary>
        internal static string SchemaBuilderExtensions_AddInputObjectType_TIsSchemaType {
            get {
                return ResourceManager.GetString("SchemaBuilderExtensions_AddInputObjectType_TIsSchemaType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified type `{0}` is a GraphQL schema type. AddInterfaceType&lt;T&gt; is a helper method to register a runtime type as GraphQL interface type. Use AddType&lt;T&gt; to register GraphQL schema types..
        /// </summary>
        internal static string SchemaBuilderExtensions_AddInterfaceType_TIsSchemaType {
            get {
                return ResourceManager.GetString("SchemaBuilderExtensions_AddInterfaceType_TIsSchemaType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified type `{0}` is a GraphQL schema type. AddObjectType&lt;T&gt; is a helper method to register a runtime type as GraphQL object type. Use AddType&lt;T&gt; to register GraphQL schema types..
        /// </summary>
        internal static string SchemaBuilderExtensions_AddObjectType_TIsSchemaType {
            get {
                return ResourceManager.GetString("SchemaBuilderExtensions_AddObjectType_TIsSchemaType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The resolver type needs to be a public non-abstract non-static class..
        /// </summary>
        internal static string SchemaBuilderExtensions_AddResolver_TypeConditionNotMet {
            get {
                return ResourceManager.GetString("SchemaBuilderExtensions_AddResolver_TypeConditionNotMet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The schema builder context is invalid..
        /// </summary>
        internal static string SchemaBuilderExtensions_AddResolverConfig_ContextInvalid {
            get {
                return ResourceManager.GetString("SchemaBuilderExtensions_AddResolverConfig_ContextInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The resolver type needs to be a class or interface.
        /// </summary>
        internal static string SchemaBuilderExtensions_AddRootResolver_NeedsToBeClassOrInterface {
            get {
                return ResourceManager.GetString("SchemaBuilderExtensions_AddRootResolver_NeedsToBeClassOrInterface", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified type `{0}` is a GraphQL schema type. AddUnionType&lt;T&gt; is a helper method to register a runtime type as GraphQL union type. Use AddType&lt;T&gt; to register GraphQL schema types..
        /// </summary>
        internal static string SchemaBuilderExtensions_AddUnionType_TIsSchemaType {
            get {
                return ResourceManager.GetString("SchemaBuilderExtensions_AddUnionType_TIsSchemaType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A directive type mustn&apos;t be one of the base classes `DirectiveType` or `DirectiveType&lt;T&gt;` but must be a type inheriting from `DirectiveType` or `DirectiveType&lt;T&gt;`..
        /// </summary>
        internal static string SchemaBuilderExtensions_DirectiveTypeIsBaseType {
            get {
                return ResourceManager.GetString("SchemaBuilderExtensions_DirectiveTypeIsBaseType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A directive type must inherit from `DirectiveType` or `DirectiveType&lt;T&gt;`..
        /// </summary>
        internal static string SchemaBuilderExtensions_MustBeDirectiveType {
            get {
                return ResourceManager.GetString("SchemaBuilderExtensions_MustBeDirectiveType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The schema string cannot be null or empty..
        /// </summary>
        internal static string SchemaBuilderExtensions_SchemaIsEmpty {
            get {
                return ResourceManager.GetString("SchemaBuilderExtensions_SchemaIsEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The error message mustn&apos;t be null or empty..
        /// </summary>
        internal static string SchemaErrorBuilder_MessageIsNull {
            get {
                return ResourceManager.GetString("SchemaErrorBuilder_MessageIsNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For more details look at the `Errors` property..
        /// </summary>
        internal static string SchemaException_ErrorSummaryText {
            get {
                return ResourceManager.GetString("SchemaException_ErrorSummaryText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unexpected schema exception occurred..
        /// </summary>
        internal static string SchemaException_UnexpectedError {
            get {
                return ResourceManager.GetString("SchemaException_UnexpectedError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Access the current type schema of this server..
        /// </summary>
        internal static string SchemaField_Description {
            get {
                return ResourceManager.GetString("SchemaField_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown operation type..
        /// </summary>
        internal static string SchemaSyntaxVisitor_UnknownOperationType {
            get {
                return ResourceManager.GetString("SchemaSyntaxVisitor_UnknownOperationType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The schema types definition is in an invalid state..
        /// </summary>
        internal static string SchemaTypes_DefinitionInvalid {
            get {
                return ResourceManager.GetString("SchemaTypes_DefinitionInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified type `{0}` does not exist or is not of the specified kind `{1}`..
        /// </summary>
        internal static string SchemaTypes_GetType_DoesNotExist {
            get {
                return ResourceManager.GetString("SchemaTypes_GetType_DoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The middleware order is invalid since the service scope is missing..
        /// </summary>
        internal static string ServiceHelper_UseResolverServiceInternal_Order {
            get {
                return ResourceManager.GetString("ServiceHelper_UseResolverServiceInternal_Order", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The `Short` scalar type represents non-fractional signed whole 16-bit numeric values. Short can represent values between -(2^15) and 2^15 - 1..
        /// </summary>
        internal static string ShortType_Description {
            get {
                return ResourceManager.GetString("ShortType_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Skipped when true..
        /// </summary>
        internal static string SkipDirectiveType_IfDescription {
            get {
                return ResourceManager.GetString("SkipDirectiveType_IfDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Directs the executor to skip this field or fragment when the `if` argument is true..
        /// </summary>
        internal static string SkipDirectiveType_TypeDescription {
            get {
                return ResourceManager.GetString("SkipDirectiveType_TypeDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The `@specifiedBy` directive is used within the type system definition language to provide a URL for specifying the behavior of custom scalar definitions..
        /// </summary>
        internal static string SpecifiedByDirectiveType_TypeDescription {
            get {
                return ResourceManager.GetString("SpecifiedByDirectiveType_TypeDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specifiedBy URL points to a human-readable specification. This field will only read a result for scalar types..
        /// </summary>
        internal static string SpecifiedByDirectiveType_UrlDescription {
            get {
                return ResourceManager.GetString("SpecifiedByDirectiveType_UrlDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The `@stream` directive may be provided for a field of `List` type so that the backend can leverage technology such as asynchronous iterators to provide a partial list in the initial response, and additional list items in subsequent responses. `@include` and `@skip` take precedence over `@stream`..
        /// </summary>
        internal static string StreamDirectiveType_Description {
            get {
                return ResourceManager.GetString("StreamDirectiveType_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Streamed when true..
        /// </summary>
        internal static string StreamDirectiveType_If_Description {
            get {
                return ResourceManager.GetString("StreamDirectiveType_If_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The initial elements that shall be send down to the consumer..
        /// </summary>
        internal static string StreamDirectiveType_InitialCount_Description {
            get {
                return ResourceManager.GetString("StreamDirectiveType_InitialCount_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If this argument label has a value other than null, it will be passed on to the result of this stream directive. This label is intended to give client applications a way to identify to which fragment a streamed result belongs to..
        /// </summary>
        internal static string StreamDirectiveType_Label_Description {
            get {
                return ResourceManager.GetString("StreamDirectiveType_Label_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The `{0}` cannot be null or empty..
        /// </summary>
        internal static string String_Argument_NullOrEmpty {
            get {
                return ResourceManager.GetString("String_Argument_NullOrEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text..
        /// </summary>
        internal static string StringType_Description {
            get {
                return ResourceManager.GetString("StringType_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tag is not supported on the specified descriptor..
        /// </summary>
        internal static string TagDirective_Descriptor_NotSupported {
            get {
                return ResourceManager.GetString("TagDirective_Descriptor_NotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The tag name must follow the GraphQL type name rules..
        /// </summary>
        internal static string TagDirective_Name_NotValid {
            get {
                return ResourceManager.GetString("TagDirective_Name_NotValid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Convention of type {0} in scope {1} could not be created.
        /// </summary>
        internal static string ThrowHelper_Convention_ConventionCouldNotBeCreated {
            get {
                return ResourceManager.GetString("ThrowHelper_Convention_ConventionCouldNotBeCreated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There are two conventions registered for {0} in scope {1}. Only one convention is allowed. Use convention extensions if additional configuration is needed. Colliding conventions are {2} and {3}.
        /// </summary>
        internal static string ThrowHelper_Convention_TwoConventionsRegisteredForScope {
            get {
                return ResourceManager.GetString("ThrowHelper_Convention_TwoConventionsRegisteredForScope", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to create a convention instance from {0}..
        /// </summary>
        internal static string ThrowHelper_Convention_UnableToCreateConvention {
            get {
                return ResourceManager.GetString("ThrowHelper_Convention_UnableToCreateConvention", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The provided type {0} is not a dataloader.
        /// </summary>
        internal static string ThrowHelper_DataLoader_InvalidType {
            get {
                return ResourceManager.GetString("ThrowHelper_DataLoader_InvalidType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The event message is of the type `{0}` and cannot be casted to `{1}.`.
        /// </summary>
        internal static string ThrowHelper_EventMessage_InvalidCast {
            get {
                return ResourceManager.GetString("ThrowHelper_EventMessage_InvalidCast", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is no event message on the context..
        /// </summary>
        internal static string ThrowHelper_EventMessage_NotFound {
            get {
                return ResourceManager.GetString("ThrowHelper_EventMessage_NotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The field is already sealed and cannot be mutated..
        /// </summary>
        internal static string ThrowHelper_FieldBase_Sealed {
            get {
                return ResourceManager.GetString("ThrowHelper_FieldBase_Sealed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The shape of the enum {0} is not known.
        /// </summary>
        internal static string ThrowHelper_Flags_Enum_Shape_Unknown {
            get {
                return ResourceManager.GetString("ThrowHelper_Flags_Enum_Shape_Unknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One of the values of {0} does not have a valid name: {1}.
        /// </summary>
        internal static string ThrowHelper_Flags_IllegalFlagEnumName {
            get {
                return ResourceManager.GetString("ThrowHelper_Flags_IllegalFlagEnumName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Flags need to have at least one selection. Type: {0}.
        /// </summary>
        internal static string ThrowHelper_Flags_Parser_NoSelection {
            get {
                return ResourceManager.GetString("ThrowHelper_Flags_Parser_NoSelection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value {0} is not known for type {1}.
        /// </summary>
        internal static string ThrowHelper_Flags_Parser_UnknownSelection {
            get {
                return ResourceManager.GetString("ThrowHelper_Flags_Parser_UnknownSelection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type `{0}` does mot expect `{1}`..
        /// </summary>
        internal static string ThrowHelper_FormatResultLeaf_InvalidSyntaxKind {
            get {
                return ResourceManager.GetString("ThrowHelper_FormatResultLeaf_InvalidSyntaxKind", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The list result value of {0} must implement IList but is of the type {1}..
        /// </summary>
        internal static string ThrowHelper_FormatResultList_InvalidObjectKind {
            get {
                return ResourceManager.GetString("ThrowHelper_FormatResultList_InvalidObjectKind", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The input object `{1}` must to be of type `{2}` or serialized as `IReadOnlyDictionary&lt;string. object?&gt;` but not as `{0}`..
        /// </summary>
        internal static string ThrowHelper_FormatResultObject_InvalidObjectKind {
            get {
                return ResourceManager.GetString("ThrowHelper_FormatResultObject_InvalidObjectKind", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The list runtime value of {0} must implement IEnumerable or IList but is of the type {1}..
        /// </summary>
        internal static string ThrowHelper_FormatValueList_InvalidObjectKind {
            get {
                return ResourceManager.GetString("ThrowHelper_FormatValueList_InvalidObjectKind", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified type `{0}` is expected to be an input type..
        /// </summary>
        internal static string ThrowHelper_InputTypeExpected_Message {
            get {
                return ResourceManager.GetString("ThrowHelper_InputTypeExpected_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The fields `{0}` do not exist on the type `{1}`..
        /// </summary>
        internal static string ThrowHelper_InvalidInputFieldNames {
            get {
                return ResourceManager.GetString("ThrowHelper_InvalidInputFieldNames", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The field `{0}` does not exist on the type `{1}`..
        /// </summary>
        internal static string ThrowHelper_InvalidInputFieldNames_Single {
            get {
                return ResourceManager.GetString("ThrowHelper_InvalidInputFieldNames_Single", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {0}-directive is missing the if-argument..
        /// </summary>
        internal static string ThrowHelper_MissingDirectiveIfArgument {
            get {
                return ResourceManager.GetString("ThrowHelper_MissingDirectiveIfArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mutation conventions infer the error name from the mutation. In this case the error union was inferred from the mutation `{0}` as `{1}`, but the type initialization encountered another object with the name `{1}`. Either rename the error object or specify a naming exception for this particular mutation. You can do that by using the `UseMutationConventionAttribute` for instance..
        /// </summary>
        internal static string ThrowHelper_MutationDuplicateErrorName {
            get {
                return ResourceManager.GetString("ThrowHelper_MutationDuplicateErrorName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified id field `{0}` does not exist on `{1}`..
        /// </summary>
        internal static string ThrowHelper_NodeAttribute_IdFieldNotFound {
            get {
                return ResourceManager.GetString("ThrowHelper_NodeAttribute_IdFieldNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A field argument at this initialization state is guaranteed to have an argument type, but we found none..
        /// </summary>
        internal static string ThrowHelper_NodeResolver_ArgumentTypeMissing {
            get {
                return ResourceManager.GetString("ThrowHelper_NodeResolver_ArgumentTypeMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An object type at this point is guaranteed to have a type definition, but we found none..
        /// </summary>
        internal static string ThrowHelper_NodeResolver_ObjNoDefinition {
            get {
                return ResourceManager.GetString("ThrowHelper_NodeResolver_ObjNoDefinition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot accept null for non-nullable input..
        /// </summary>
        internal static string ThrowHelper_NonNullInputViolation {
            get {
                return ResourceManager.GetString("ThrowHelper_NonNullInputViolation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to `null` was set to the field `{0}`of the Oneof Input Object `{1}`. Oneof Input Objects are a special variant of Input Objects where the type system asserts that exactly one of the fields must be set and non-null..
        /// </summary>
        internal static string ThrowHelper_OneOfFieldIsNull {
            get {
                return ResourceManager.GetString("ThrowHelper_OneOfFieldIsNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to More than one field of the Oneof Input Object `{0}` is set. Oneof Input Objects are a special variant of Input Objects where the type system asserts that exactly one of the fields must be set and non-null..
        /// </summary>
        internal static string ThrowHelper_OneOfMoreThanOneFieldSet {
            get {
                return ResourceManager.GetString("ThrowHelper_OneOfMoreThanOneFieldSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Oneof Input Objects `{0}` require that exactly one field must be supplied and that field must not be `null`. Oneof Input Objects are a special variant of Input Objects where the type system asserts that exactly one of the fields must be set and non-null..
        /// </summary>
        internal static string ThrowHelper_OneOfNoFieldSet {
            get {
                return ResourceManager.GetString("ThrowHelper_OneOfNoFieldSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified type `{0}` is expected to be an output type..
        /// </summary>
        internal static string ThrowHelper_OutputTypeExpected_Message {
            get {
                return ResourceManager.GetString("ThrowHelper_OutputTypeExpected_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The input object `{1}` must to be serialized as `{2}` or as `IReadOnlyDictionary&lt;string. object?&gt;` but not as `{0}`..
        /// </summary>
        internal static string ThrowHelper_ParseInputObject_InvalidObjectKind {
            get {
                return ResourceManager.GetString("ThrowHelper_ParseInputObject_InvalidObjectKind", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The syntax node `{0}` is incompatible with the type `{1}`..
        /// </summary>
        internal static string ThrowHelper_ParseInputObject_InvalidSyntaxKind {
            get {
                return ResourceManager.GetString("ThrowHelper_ParseInputObject_InvalidSyntaxKind", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The list `{1}` must to be serialized as `{2}` or as `IList` but not as `{0}`..
        /// </summary>
        internal static string ThrowHelper_ParseList_InvalidObjectKind {
            get {
                return ResourceManager.GetString("ThrowHelper_ParseList_InvalidObjectKind", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The item syntax node for a nested list must be `ListValue` but the parser found `{0}`..
        /// </summary>
        internal static string ThrowHelper_ParseNestedList_InvalidSyntaxKind {
            get {
                return ResourceManager.GetString("ThrowHelper_ParseNestedList_InvalidSyntaxKind", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to resolve type from field `{0}`..
        /// </summary>
        internal static string ThrowHelper_RelayIdFieldHelpers_NoFieldType {
            get {
                return ResourceManager.GetString("ThrowHelper_RelayIdFieldHelpers_NoFieldType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The required input field `{0}` is missing..
        /// </summary>
        internal static string ThrowHelper_RequiredInputFieldIsMissing {
            get {
                return ResourceManager.GetString("ThrowHelper_RequiredInputFieldIsMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument `{0}` was not found on directive `@{1}`..
        /// </summary>
        internal static string ThrowHelper_Schema_GetMember_DirectiveArgumentNotFound {
            get {
                return ResourceManager.GetString("ThrowHelper_Schema_GetMember_DirectiveArgumentNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Directive `@{0}` not found..
        /// </summary>
        internal static string ThrowHelper_Schema_GetMember_DirectiveNotFound {
            get {
                return ResourceManager.GetString("ThrowHelper_Schema_GetMember_DirectiveNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enum value `{0}` was not found on type `{1}`..
        /// </summary>
        internal static string ThrowHelper_Schema_GetMember_EnumValueNotFound {
            get {
                return ResourceManager.GetString("ThrowHelper_Schema_GetMember_EnumValueNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument `{0}` was not found on field `{1}.{2}`..
        /// </summary>
        internal static string ThrowHelper_Schema_GetMember_FieldArgNotFound {
            get {
                return ResourceManager.GetString("ThrowHelper_Schema_GetMember_FieldArgNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Field `{0}` was not found on type `{1}`..
        /// </summary>
        internal static string ThrowHelper_Schema_GetMember_FieldNotFound {
            get {
                return ResourceManager.GetString("ThrowHelper_Schema_GetMember_FieldNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Input field `{0}` was not found on type `{1}`..
        /// </summary>
        internal static string ThrowHelper_Schema_GetMember_InputFieldNotFound {
            get {
                return ResourceManager.GetString("ThrowHelper_Schema_GetMember_InputFieldNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The coordinate `{0}` is invalid for the type `{1}`..
        /// </summary>
        internal static string ThrowHelper_Schema_GetMember_InvalidCoordinate {
            get {
                return ResourceManager.GetString("ThrowHelper_Schema_GetMember_InvalidCoordinate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A type with the name `{0}` was not found..
        /// </summary>
        internal static string ThrowHelper_Schema_GetMember_TypeNotFound {
            get {
                return ResourceManager.GetString("ThrowHelper_Schema_GetMember_TypeNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You need to specify the message type on {0}.{1}. (SubscribeAttribute).
        /// </summary>
        internal static string ThrowHelper_SubscribeAttribute_MessageTypeUnspecified {
            get {
                return ResourceManager.GetString("ThrowHelper_SubscribeAttribute_MessageTypeUnspecified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to find the subscribe resolver `{2}` defined on {0}.{1}. The subscribe resolver bust be a method that is public, non-static and on the same type as the resolver. (SubscribeAttribute).
        /// </summary>
        internal static string ThrowHelper_SubscribeAttribute_SubscribeResolverNotFound {
            get {
                return ResourceManager.GetString("ThrowHelper_SubscribeAttribute_SubscribeResolverNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You need to specify the topic type on {0}.{1}. (SubscribeAttribute).
        /// </summary>
        internal static string ThrowHelper_SubscribeAttribute_TopicTypeUnspecified {
            get {
                return ResourceManager.GetString("ThrowHelper_SubscribeAttribute_TopicTypeUnspecified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to resolve type reference `{0}`..
        /// </summary>
        internal static string ThrowHelper_TypeCompletionContext_UnableToResolveType {
            get {
                return ResourceManager.GetString("ThrowHelper_TypeCompletionContext_UnableToResolveType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to create instance of type `{0}`..
        /// </summary>
        internal static string ThrowHelper_TypeRegistrar_CreateInstanceFailed {
            get {
                return ResourceManager.GetString("ThrowHelper_TypeRegistrar_CreateInstanceFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to infer the element type from the current resolver. This often happens if the resolver is not an iterable type like IEnumerable, IQueryable, IList etc. Ensure that you either explicitly specify the element type or that the return type of your resolver is an iterable type..
        /// </summary>
        internal static string ThrowHelper_UsePagingAttribute_NodeTypeUnknown {
            get {
                return ResourceManager.GetString("ThrowHelper_UsePagingAttribute_NodeTypeUnknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The `TimeSpan` scalar represents an ISO-8601 compliant duration type..
        /// </summary>
        internal static string TimeSpanType_Description {
            get {
                return ResourceManager.GetString("TimeSpanType_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.
        ///
        ///Depending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name and description, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Type_Description {
            get {
                return ResourceManager.GetString("Type_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to `specifiedByURL` may return a String (in the form of a URL) for custom scalars, otherwise it will return `null`..
        /// </summary>
        internal static string Type_SpecifiedByUrl_Description {
            get {
                return ResourceManager.GetString("Type_SpecifiedByUrl_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The configuration delegate mustn&apos;t be null..
        /// </summary>
        internal static string TypeConfiguration_ConfigureIsNull {
            get {
                return ResourceManager.GetString("TypeConfiguration_ConfigureIsNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Definition mustn&apos;t be null..
        /// </summary>
        internal static string TypeConfiguration_DefinitionIsNull {
            get {
                return ResourceManager.GetString("TypeConfiguration_DefinitionIsNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to convert type from `{0}` to `{1}`.
        /// </summary>
        internal static string TypeConversion_ConvertNotSupported {
            get {
                return ResourceManager.GetString("TypeConversion_ConvertNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified type is not a schema type..
        /// </summary>
        internal static string TypeDependency_MustBeSchemaType {
            get {
                return ResourceManager.GetString("TypeDependency_MustBeSchemaType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TypeReference kind not supported..
        /// </summary>
        internal static string TypeDiscoveryInfo_TypeRefKindNotSupported {
            get {
                return ResourceManager.GetString("TypeDiscoveryInfo_TypeRefKindNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type structure is invalid..
        /// </summary>
        internal static string TypeExtensions_InvalidStructure {
            get {
                return ResourceManager.GetString("TypeExtensions_InvalidStructure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified type kind is not supported..
        /// </summary>
        internal static string TypeExtensions_KindIsNotSupported {
            get {
                return ResourceManager.GetString("TypeExtensions_KindIsNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified type is not a valid list type..
        /// </summary>
        internal static string TypeExtensions_NoListType {
            get {
                return ResourceManager.GetString("TypeExtensions_NoListType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The given type is not a {0}..
        /// </summary>
        internal static string TypeExtensions_TypeIsNotOfT {
            get {
                return ResourceManager.GetString("TypeExtensions_TypeIsNotOfT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Request the type information of a single type..
        /// </summary>
        internal static string TypeField_Description {
            get {
                return ResourceManager.GetString("TypeField_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to find type(s) {0}.
        /// </summary>
        internal static string TypeInitializer_CannotFindType {
            get {
                return ResourceManager.GetString("TypeInitializer_CannotFindType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to resolve dependencies {1} for type `{0}`..
        /// </summary>
        internal static string TypeInitializer_CannotResolveDependency {
            get {
                return ResourceManager.GetString("TypeInitializer_CannotResolveDependency", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name `{0}` was already registered by another type..
        /// </summary>
        internal static string TypeInitializer_CompleteName_Duplicate {
            get {
                return ResourceManager.GetString("TypeInitializer_CompleteName_Duplicate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The kind of the extension does not match the kind of the type `{0}`..
        /// </summary>
        internal static string TypeInitializer_Merge_KindDoesNotMatch {
            get {
                return ResourceManager.GetString("TypeInitializer_Merge_KindDoesNotMatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An enum describing what kind of type a given `__Type` is..
        /// </summary>
        internal static string TypeKind_Description {
            get {
                return ResourceManager.GetString("TypeKind_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates this type is an enum. `enumValues` is a valid field..
        /// </summary>
        internal static string TypeKind_Enum {
            get {
                return ResourceManager.GetString("TypeKind_Enum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates this type is an input object. `inputFields` is a valid field..
        /// </summary>
        internal static string TypeKind_InputObject {
            get {
                return ResourceManager.GetString("TypeKind_InputObject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates this type is an interface. `fields` and `possibleTypes` are valid fields..
        /// </summary>
        internal static string TypeKind_Interface {
            get {
                return ResourceManager.GetString("TypeKind_Interface", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates this type is a list. `ofType` is a valid field..
        /// </summary>
        internal static string TypeKind_List {
            get {
                return ResourceManager.GetString("TypeKind_List", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates this type is a non-null. `ofType` is a valid field..
        /// </summary>
        internal static string TypeKind_NonNull {
            get {
                return ResourceManager.GetString("TypeKind_NonNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates this type is an object. `fields` and `interfaces` are valid fields..
        /// </summary>
        internal static string TypeKind_Object {
            get {
                return ResourceManager.GetString("TypeKind_Object", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates this type is a scalar..
        /// </summary>
        internal static string TypeKind_Scalar {
            get {
                return ResourceManager.GetString("TypeKind_Scalar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates this type is a union. `possibleTypes` is a valid field..
        /// </summary>
        internal static string TypeKind_Union {
            get {
                return ResourceManager.GetString("TypeKind_Union", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the current Object type at runtime..
        /// </summary>
        internal static string TypeNameField_Description {
            get {
                return ResourceManager.GetString("TypeNameField_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid type structure..
        /// </summary>
        internal static string TypeNameHelper_InvalidTypeStructure {
            get {
                return ResourceManager.GetString("TypeNameHelper_InvalidTypeStructure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only type system objects are allowed as dependency..
        /// </summary>
        internal static string TypeNameHelper_OnlyTypeSystemObjectsAreAllowed {
            get {
                return ResourceManager.GetString("TypeNameHelper_OnlyTypeSystemObjectsAreAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to infer or resolve a schema type from the type reference `{0}`..
        /// </summary>
        internal static string TypeRegistrar_TypesInconsistent {
            get {
                return ResourceManager.GetString("TypeRegistrar_TypesInconsistent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The typeName mustn&apos;t be null or empty..
        /// </summary>
        internal static string TypeResourceHelper_TypeNameEmptyOrNull {
            get {
                return ResourceManager.GetString("TypeResourceHelper_TypeNameEmptyOrNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The description becomes immutable once it was assigned..
        /// </summary>
        internal static string TypeSystemObject_DescriptionImmutable {
            get {
                return ResourceManager.GetString("TypeSystemObject_DescriptionImmutable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name becomes immutable once it was assigned..
        /// </summary>
        internal static string TypeSystemObject_NameImmutable {
            get {
                return ResourceManager.GetString("TypeSystemObject_NameImmutable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type definition is null which means that the type was initialized incorrectly..
        /// </summary>
        internal static string TypeSystemObjectBase_DefinitionIsNull {
            get {
                return ResourceManager.GetString("TypeSystemObjectBase_DefinitionIsNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type name was not completed correctly and is still empty. Type names are not allowed to remain empty after name completion was executed.
        ///Type: `{0}`.
        /// </summary>
        internal static string TypeSystemObjectBase_NameIsNull {
            get {
                return ResourceManager.GetString("TypeSystemObjectBase_NameIsNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A Union type must define one or more unique member types..
        /// </summary>
        internal static string UnionType_MustHaveTypes {
            get {
                return ResourceManager.GetString("UnionType_MustHaveTypes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to resolve the specified type reference..
        /// </summary>
        internal static string UnionType_UnableToResolveType {
            get {
                return ResourceManager.GetString("UnionType_UnableToResolveType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The union type extension can only be merged with an union type..
        /// </summary>
        internal static string UnionTypeExtension_CannotMerge {
            get {
                return ResourceManager.GetString("UnionTypeExtension_CannotMerge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown format. Guid supports the following format chars: {{ `N`, `D`, `B`, `P` }}.
        /// https://docs.microsoft.com/en-us/dotnet/api/system.buffers.text.utf8parser.tryparse?view=netcore-3.1#System_Buffers_Text_Utf8Parser_TryParse_System_ReadOnlySpan_System_Byte__System_Guid__System_Int32__System_Char.
        /// </summary>
        internal static string UuidType_FormatUnknown {
            get {
                return ResourceManager.GetString("UuidType_FormatUnknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Variable `{0}` of type `{1}` must be an input type..
        /// </summary>
        internal static string VariableValueBuilder_InputType {
            get {
                return ResourceManager.GetString("VariableValueBuilder_InputType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Variable `{0}` got invalid value..
        /// </summary>
        internal static string VariableValueBuilder_InvalidValue {
            get {
                return ResourceManager.GetString("VariableValueBuilder_InvalidValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type node kind is not supported..
        /// </summary>
        internal static string VariableValueBuilder_NodeKind {
            get {
                return ResourceManager.GetString("VariableValueBuilder_NodeKind", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Variable `{0}` of type `{1}` must not be null..
        /// </summary>
        internal static string VariableValueBuilder_NonNull {
            get {
                return ResourceManager.GetString("VariableValueBuilder_NonNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Detected non-null violation in variable `{0}`..
        /// </summary>
        internal static string VariableValueBuilder_NonNull_In_Graph {
            get {
                return ResourceManager.GetString("VariableValueBuilder_NonNull_In_Graph", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Variable name mustn&apos;t be null or empty..
        /// </summary>
        internal static string VariableValueBuilder_VarNameEmpty {
            get {
                return ResourceManager.GetString("VariableValueBuilder_VarNameEmpty", resourceCulture);
            }
        }
    }
}
