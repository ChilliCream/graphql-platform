<?xml version="1.0" encoding="utf-8"?>
<root>
  <xsd:schema id="root"
    xmlns=""
    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="NegativeIntType_Description" xml:space="preserve">
    <value>The NegativeIntType scalar type represents a signed 32-bit numeric non-fractional with a maximum of -1.</value>
  </data>
  <data name="NegativeIntType_IsNotNegative_ParseLiteral" xml:space="preserve">
    <value>NegativeIntType cannot parse the provided literal. The provided value was not negative.</value>
  </data>
  <data name="NegativeIntType_IsNotNegative_ParseValue" xml:space="preserve">
    <value>NegativeIntType cannot parse the provided value. The provided value was not negative.</value>
  </data>
  <data name="NonEmptyStringType_Description" xml:space="preserve">
    <value>The NonEmptyString scalar type represents non empty textual data, represented as UTF‚Äê8 character sequences with at least one character</value>
  </data>
  <data name="NonEmptyStringType_IsEmpty_ParseLiteral" xml:space="preserve">
    <value>NonEmptyString cannot parse the provided literal. The provided string was empty.</value>
  </data>
  <data name="NonEmptyStringType_IsEmpty_ParseValue" xml:space="preserve">
    <value>NonEmptyString cannot parse the provided value. The provided string was empty.</value>
  </data>
  <data name="PositiveIntType_Description" xml:space="preserve">
    <value>The PositiveInt scalar type represents a signed 32-bit numeric non-fractional value of at least the value 1.</value>
  </data>
  <data name="PositiveIntType_ZeroOrLess_ParseLiteral" xml:space="preserve">
    <value>PositiveInt cannot parse the provided literal. The provided value is 0 or less.</value>
  </data>
  <data name="PositiveIntType_ZeroOrLess_ParseValue" xml:space="preserve">
    <value>PositiveInt cannot parse the provided value. The provided value is 0 or less.</value>
  </data>
</root>
