//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HotChocolate.Types.Scalars {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class ScalarResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ScalarResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("HotChocolate.Types.Scalars.ScalarResources", typeof(ScalarResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The `Currency` scalar type represent a valid Currency as described on ISO-4217, represented as a UTF-8
        /// character sequence. The scalar follows the specification defined by the
        /// https://en.wikipedia.org/wiki/ISO_4217.
        /// </summary>
        internal static string CurrencyType_Description {
            get {
                return ResourceManager.GetString("CurrencyType_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CurrencyType cannot parse the provided literal. The provided value is not a valid Currency as described on ISO-4217..
        /// </summary>
        internal static string CurrencyType_IsInvalid_ParseLiteral {
            get {
                return ResourceManager.GetString("CurrencyType_IsInvalid_ParseLiteral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CurrencyType cannot parse the provided value. The provided value is not a valid Currency as described on ISO-4217..
        /// </summary>
        internal static string CurrencyType_IsInvalid_ParseValue {
            get {
                return ResourceManager.GetString("CurrencyType_IsInvalid_ParseValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The EmailAddress scalar type constitutes a valid email address, represented as a UTF-8 character sequence. The scalar follows the specification defined by the HTML Spec https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address..
        /// </summary>
        internal static string EmailAddressType_Description {
            get {
                return ResourceManager.GetString("EmailAddressType_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to EmailAddressType cannot parse the provided literal. The provided value does not meet the RFC 5322 specification..
        /// </summary>
        internal static string EmailAddressType_IsInvalid_ParseLiteral {
            get {
                return ResourceManager.GetString("EmailAddressType_IsInvalid_ParseLiteral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to EmailAddressType cannot parse the provided value. The provided value does not meet the RFC 5322 specification..
        /// </summary>
        internal static string EmailAddressType_IsInvalid_ParseValue {
            get {
                return ResourceManager.GetString("EmailAddressType_IsInvalid_ParseValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The HexColor scalar type represents a valid HexColor color code..
        /// </summary>
        internal static string HexColorType_Description {
            get {
                return ResourceManager.GetString("HexColorType_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HexColorType cannot parse the provided literal. The provided value is not a valid HEX color code..
        /// </summary>
        internal static string HexColorType_IsInvalid_ParseLiteral {
            get {
                return ResourceManager.GetString("HexColorType_IsInvalid_ParseLiteral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HexColorType cannot parse the provided value. The provided value is not a valid HEX color code..
        /// </summary>
        internal static string HexColorType_IsInvalid_ParseValue {
            get {
                return ResourceManager.GetString("HexColorType_IsInvalid_ParseValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Hsla scalar type represents a CSS HSLA color as defined in https://www.w3.org/TR/css-color-3/#hsla-color..
        /// </summary>
        internal static string HslaType_Description {
            get {
                return ResourceManager.GetString("HslaType_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HslaType cannot parse the provided literal. The provided value is not a valid CSS HSLA color code..
        /// </summary>
        internal static string HslaType_IsInvalid_ParseLiteral {
            get {
                return ResourceManager.GetString("HslaType_IsInvalid_ParseLiteral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HslaType cannot parse the provided value. The provided value is not a valid CSS HSLA color code..
        /// </summary>
        internal static string HslaType_IsInvalid_ParseValue {
            get {
                return ResourceManager.GetString("HslaType_IsInvalid_ParseValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Hsl scalar type represents a a valid a CSS HSL color defined in https://www.w3.org/TR/css-color-3/#hsl-color..
        /// </summary>
        internal static string HslType_Description {
            get {
                return ResourceManager.GetString("HslType_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HslType cannot parse the provided literal. The provided value is not a valid CSS HSL color code..
        /// </summary>
        internal static string HslType_IsInvalid_ParseLiteral {
            get {
                return ResourceManager.GetString("HslType_IsInvalid_ParseLiteral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HslType cannot parse the provided value. The provided value is not a valid CSS HSL color code..
        /// </summary>
        internal static string HslType_IsInvalid_ParseValue {
            get {
                return ResourceManager.GetString("HslType_IsInvalid_ParseValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The IPv4 scalar type represents a valid a IPv4 address as defined in RFC791.
        /// </summary>
        internal static string IPv4Type_Description {
            get {
                return ResourceManager.GetString("IPv4Type_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IPv4Type cannot parse the provided literal. The provided value is not a valid IPv4 address..
        /// </summary>
        internal static string IPv4Type_IsInvalid_ParseLiteral {
            get {
                return ResourceManager.GetString("IPv4Type_IsInvalid_ParseLiteral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IPv4Type cannot parse the provided value. The provided value is not a valid IPv4 address..
        /// </summary>
        internal static string IPv4Type_IsInvalid_ParseValue {
            get {
                return ResourceManager.GetString("IPv4Type_IsInvalid_ParseValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The IPv6 scalar type represents a valid a IPv6 address as defined in RFC8064.
        /// </summary>
        internal static string IPv6Type_Description {
            get {
                return ResourceManager.GetString("IPv6Type_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IPv6Type cannot parse the provided literal. The provided value is not a valid IPv6 address..
        /// </summary>
        internal static string IPv6Type_IsInvalid_ParseLiteral {
            get {
                return ResourceManager.GetString("IPv6Type_IsInvalid_ParseLiteral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IPv6Type cannot parse the provided value. The provided value is not a valid IPv6 address..
        /// </summary>
        internal static string IPv6Type_IsInvalid_ParseValue {
            get {
                return ResourceManager.GetString("IPv6Type_IsInvalid_ParseValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The ISBN scalar type is a ISBN-10 or ISBN-13 number: https://en.wikipedia.org/wiki/International_Standard_Book_Number..
        /// </summary>
        internal static string IsbnType_Description {
            get {
                return ResourceManager.GetString("IsbnType_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IsbnType cannot parse the provided literal. The provided value is not a valid ISBN number..
        /// </summary>
        internal static string IsbnType_IsInvalid_ParseLiteral {
            get {
                return ResourceManager.GetString("IsbnType_IsInvalid_ParseLiteral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IsbnType cannot parse the provided value. The provided value is not a valid ISBN number..
        /// </summary>
        internal static string IsbnType_IsInvalid_ParseValue {
            get {
                return ResourceManager.GetString("IsbnType_IsInvalid_ParseValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The `MacAddress` scalar type represents a IEEE 802 48-bit Mac address, represented as UTF-8 character sequences. The scalar follows the specification defined in RFC7042.
        /// </summary>
        internal static string MacAddressType_Description {
            get {
                return ResourceManager.GetString("MacAddressType_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MacAddressType cannot parse the provided literal. The provided value is not a valid MAC address..
        /// </summary>
        internal static string MacAddressType_IsInvalid_ParseLiteral {
            get {
                return ResourceManager.GetString("MacAddressType_IsInvalid_ParseLiteral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MacAddressType cannot parse the provided value. The provided value is not a valid MAC address..
        /// </summary>
        internal static string MacAddressType_IsInvalid_ParseValue {
            get {
                return ResourceManager.GetString("MacAddressType_IsInvalid_ParseValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The NegativeFloat scalar type represents a double‐precision fractional value less than 0..
        /// </summary>
        internal static string NegativeFloatType_Description {
            get {
                return ResourceManager.GetString("NegativeFloatType_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NegativeFloatType cannot parse the provided literal. The provided value was not negative..
        /// </summary>
        internal static string NegativeFloatType_IsNotNegative_ParseLiteral {
            get {
                return ResourceManager.GetString("NegativeFloatType_IsNotNegative_ParseLiteral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NegativeFloatType cannot parse the provided value. The provided value was not negative..
        /// </summary>
        internal static string NegativeFloatType_IsNotNegative_ParseValue {
            get {
                return ResourceManager.GetString("NegativeFloatType_IsNotNegative_ParseValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The NegativeInt scalar type represents a signed 32-bit numeric non-fractional with a maximum of -1..
        /// </summary>
        internal static string NegativeIntType_Description {
            get {
                return ResourceManager.GetString("NegativeIntType_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NegativeIntType cannot parse the provided literal. The provided value was not negative..
        /// </summary>
        internal static string NegativeIntType_IsNotNegative_ParseLiteral {
            get {
                return ResourceManager.GetString("NegativeIntType_IsNotNegative_ParseLiteral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NegativeIntType cannot parse the provided value. The provided value was not negative..
        /// </summary>
        internal static string NegativeIntType_IsNotNegative_ParseValue {
            get {
                return ResourceManager.GetString("NegativeIntType_IsNotNegative_ParseValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The NonEmptyString scalar type represents non empty textual data, represented as UTF‐8 character sequences with at least one character.
        /// </summary>
        internal static string NonEmptyStringType_Description {
            get {
                return ResourceManager.GetString("NonEmptyStringType_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NonEmptyStringType cannot parse the provided literal. The provided string was empty..
        /// </summary>
        internal static string NonEmptyStringType_IsEmpty_ParseLiteral {
            get {
                return ResourceManager.GetString("NonEmptyStringType_IsEmpty_ParseLiteral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NonEmptyStringType cannot parse the provided value. The provided string was empty..
        /// </summary>
        internal static string NonEmptyStringType_IsEmpty_ParseValue {
            get {
                return ResourceManager.GetString("NonEmptyStringType_IsEmpty_ParseValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The NonNegativeFloat scalar type represents a double‐precision fractional value greater than or equal to 0..
        /// </summary>
        internal static string NonNegativeFloatType_Description {
            get {
                return ResourceManager.GetString("NonNegativeFloatType_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NonNegativeFloatType cannot parse the provided literal. The provided value was not greater than or equal to 0..
        /// </summary>
        internal static string NonNegativeFloatType_IsNotNonNegative_ParseLiteral {
            get {
                return ResourceManager.GetString("NonNegativeFloatType_IsNotNonNegative_ParseLiteral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NonNegativeFloatType cannot parse the provided value. The provided value was not greater than or equal to 0..
        /// </summary>
        internal static string NonNegativeFloatType_IsNotNonNegative_ParseValue {
            get {
                return ResourceManager.GetString("NonNegativeFloatType_IsNotNonNegative_ParseValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The NonNegativeInt scalar type represents a unsigned 32-bit numeric non-fractional value equal to or greater than 0..
        /// </summary>
        internal static string NonNegativeIntType_Description {
            get {
                return ResourceManager.GetString("NonNegativeIntType_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NonNegativeIntType cannot parse the provided literal. The provided value was not greater than or equal to 0..
        /// </summary>
        internal static string NonNegativeIntType_IsNotNonNegative_ParseLiteral {
            get {
                return ResourceManager.GetString("NonNegativeIntType_IsNotNonNegative_ParseLiteral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NonNegativeIntType cannot parse the provided value. The provided value was not greater than or equal to 0..
        /// </summary>
        internal static string NonNegativeIntType_IsNotNonNegative_ParseValue {
            get {
                return ResourceManager.GetString("NonNegativeIntType_IsNotNonNegative_ParseValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The NonPositiveFloat scalar type represents a double‐precision fractional value less than or equal to 0..
        /// </summary>
        internal static string NonPositiveFloatType_Description {
            get {
                return ResourceManager.GetString("NonPositiveFloatType_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NonPositiveFloatType cannot parse the provided literal. The provided value was not less than or equal to 0..
        /// </summary>
        internal static string NonPositiveFloatType_IsNotNonPositive_ParseLiteral {
            get {
                return ResourceManager.GetString("NonPositiveFloatType_IsNotNonPositive_ParseLiteral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NonPositiveFloatType cannot parse the provided value. The provided value was not less than or equal to 0..
        /// </summary>
        internal static string NonPositiveFloatType_IsNotNonPositive_ParseValue {
            get {
                return ResourceManager.GetString("NonPositiveFloatType_IsNotNonPositive_ParseValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The NonPositiveInt scalar type represents a signed 32-bit numeric non-fractional value less than or equal to 0..
        /// </summary>
        internal static string NonPositiveIntType_Description {
            get {
                return ResourceManager.GetString("NonPositiveIntType_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NonPositiveIntType cannot parse the provided literal. The provided value was not less than or equal to 0..
        /// </summary>
        internal static string NonPositiveIntType_IsNotNonPositive_ParseLiteral {
            get {
                return ResourceManager.GetString("NonPositiveIntType_IsNotNonPositive_ParseLiteral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NonPositiveIntType cannot parse the provided value. The provided value was not less than or equal to 0..
        /// </summary>
        internal static string NonPositiveIntType_IsNotNonPositive_ParseValue {
            get {
                return ResourceManager.GetString("NonPositiveIntType_IsNotNonPositive_ParseValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The PhoneNumber scalar type represents a value that conforms to the standard E.164 format..
        /// </summary>
        internal static string PhoneNumberType_Description {
            get {
                return ResourceManager.GetString("PhoneNumberType_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PhoneNumberType cannot parse the provided literal. The provided value does not meet the standard E.164 format..
        /// </summary>
        internal static string PhoneNumberType_IsInvalid_ParseLiteral {
            get {
                return ResourceManager.GetString("PhoneNumberType_IsInvalid_ParseLiteral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PhoneNumberType cannot parse the provided value. The provided value does not meet the standard E.164 format..
        /// </summary>
        internal static string PhoneNumberType_IsInvalid_ParseValue {
            get {
                return ResourceManager.GetString("PhoneNumberType_IsInvalid_ParseValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Port scalar type represents a field whose value is a valid TCP port within the range of 0 to 65535: https://en.wikipedia.org/wiki/Transmission_Control_Protocol#TCP_ports..
        /// </summary>
        internal static string PortType_Description {
            get {
                return ResourceManager.GetString("PortType_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Port cannot parse the provided literal. The provided value was not within the valid range..
        /// </summary>
        internal static string PortType_OutOfRange_ParseLiteral {
            get {
                return ResourceManager.GetString("PortType_OutOfRange_ParseLiteral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Port cannot parse the provided value. The provided value was not within the valid range..
        /// </summary>
        internal static string PortType_OutOfRange_ParseValue {
            get {
                return ResourceManager.GetString("PortType_OutOfRange_ParseValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The PositiveInt scalar type represents a signed 32-bit numeric non-fractional value of at least the value 1..
        /// </summary>
        internal static string PositiveIntType_Description {
            get {
                return ResourceManager.GetString("PositiveIntType_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PositiveIntType cannot parse the provided literal. The provided value is 0 or less..
        /// </summary>
        internal static string PositiveIntType_ZeroOrLess_ParseLiteral {
            get {
                return ResourceManager.GetString("PositiveIntType_ZeroOrLess_ParseLiteral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PositiveIntType cannot parse the provided value. The provided value is 0 or less..
        /// </summary>
        internal static string PositiveIntType_ZeroOrLess_ParseValue {
            get {
                return ResourceManager.GetString("PositiveIntType_ZeroOrLess_ParseValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The PostalCode scalar type represents a valid postal code..
        /// </summary>
        internal static string PostalCodeType_Description {
            get {
                return ResourceManager.GetString("PostalCodeType_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PostalCodeType cannot parse the provided literal. The provided value is a invalid postal code..
        /// </summary>
        internal static string PostalCodeType_IsInvalid_ParseLiteral {
            get {
                return ResourceManager.GetString("PostalCodeType_IsInvalid_ParseLiteral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PostalCodeType cannot parse the provided value. The provided value is a invalid postal code..
        /// </summary>
        internal static string PostalCodeType_IsInvalid_ParseValue {
            get {
                return ResourceManager.GetString("PostalCodeType_IsInvalid_ParseValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}Type cannot parse the provided literal. The provided value does not match the regular expression pattern..
        /// </summary>
        internal static string RegexType_IsInvalid_ParseLiteral {
            get {
                return ResourceManager.GetString("RegexType_IsInvalid_ParseLiteral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}Type cannot parse the provided value. The provided value does not match the regular expression pattern..
        /// </summary>
        internal static string RegexType_IsInvalid_ParseValue {
            get {
                return ResourceManager.GetString("RegexType_IsInvalid_ParseValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Rgb scalar type represents a  valid CSS RGB color as defined in https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#rgb()_and_rgba(). .
        /// </summary>
        internal static string RgbType_Description {
            get {
                return ResourceManager.GetString("RgbType_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to RgbType cannot parse the provided literal. The provided value is not a valid CSS RGB color..
        /// </summary>
        internal static string RgbType_IsInvalid_ParseLiteral {
            get {
                return ResourceManager.GetString("RgbType_IsInvalid_ParseLiteral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to RgbType cannot parse the provided value. The provided value is not a valid CSS RGB color..
        /// </summary>
        internal static string RgbType_IsInvalid_ParseValue {
            get {
                return ResourceManager.GetString("RgbType_IsInvalid_ParseValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The UnsignedInt scalar type represents a unsigned 32-bit numeric non-fractional value greater than or equal to 0..
        /// </summary>
        internal static string UnsignedIntType_Description {
            get {
                return ResourceManager.GetString("UnsignedIntType_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UnsignedIntType cannot parse the provided literal. The provided value is not greater than or equal to 0..
        /// </summary>
        internal static string UnsignedIntType_IsNotUnsigned_ParseLiteral {
            get {
                return ResourceManager.GetString("UnsignedIntType_IsNotUnsigned_ParseLiteral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UnsignedIntType cannot parse the provided value. The provided value is not greater than or equal to 0..
        /// </summary>
        internal static string UnsignedIntType_IsNotUnsigned_ParseValue {
            get {
                return ResourceManager.GetString("UnsignedIntType_IsNotUnsigned_ParseValue", resourceCulture);
            }
        }
    }
}
