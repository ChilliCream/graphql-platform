//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HotChocolate.Types.Scalars {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class ScalarResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ScalarResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("HotChocolate.Types.Scalars.ScalarResources", typeof(ScalarResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The EmailAddress scalar type represents a email address, represented as UTF-8 character sequences. The scalar follows the specification defined in RFC 5322.
        /// </summary>
        internal static string EmailAddressType_Description {
            get {
                return ResourceManager.GetString("EmailAddressType_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to EmailAddressType cannot parse the provided literal. The provided value does not meet the RFC 5322 specification..
        /// </summary>
        internal static string EmailAddressType_IsInvalid_ParseLiteral {
            get {
                return ResourceManager.GetString("EmailAddressType_IsInvalid_ParseLiteral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to EmailAddressType cannot parse the provided value. The provided value does not meet the RFC 5322 specification..
        /// </summary>
        internal static string EmailAddressType_IsInvalid_ParseValue {
            get {
                return ResourceManager.GetString("EmailAddressType_IsInvalid_ParseValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (?:[a-z0-9!#$%&amp;&apos;*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&amp;&apos;*+/=?^_`{|}~-]+)*|&quot;(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])*&quot;)@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\]).
        /// </summary>
        internal static string EmailAddressType_ValidationPattern {
            get {
                return ResourceManager.GetString("EmailAddressType_ValidationPattern", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The HexColorCode scalar type represents a valid hex color code..
        /// </summary>
        internal static string HexColorCodeType_Description {
            get {
                return ResourceManager.GetString("HexColorCodeType_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HexColorCodeType cannot parse the provided literal. The provided value is not a valid Hex color code..
        /// </summary>
        internal static string HexColorCodeType_IsInvalid_ParseLiteral {
            get {
                return ResourceManager.GetString("HexColorCodeType_IsInvalid_ParseLiteral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HexColorCodeType cannot parse the provided value. The provided value is not a valid Hex color code..
        /// </summary>
        internal static string HexColorCodeType_IsInvalid_ParseValue {
            get {
                return ResourceManager.GetString("HexColorCodeType_IsInvalid_ParseValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3}|[A-Fa-f0-9]{8})$).
        /// </summary>
        internal static string HexColorCodeType_ValidationPattern {
            get {
                return ResourceManager.GetString("HexColorCodeType_ValidationPattern", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The HslColorCode scalar type represents a a valid a CSS HSL color defined here https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#hsl_colors..
        /// </summary>
        internal static string HslColorCodeType_Description {
            get {
                return ResourceManager.GetString("HslColorCodeType_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HslColorCodeType cannot parse the provided literal. The provided value is not a valid CSS HSL color code..
        /// </summary>
        internal static string HslColorCodeType_IsInvalid_ParseLiteral {
            get {
                return ResourceManager.GetString("HslColorCodeType_IsInvalid_ParseLiteral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HslColorCodeType cannot parse the provided value. The provided value is not a valid CSS HSL color code..
        /// </summary>
        internal static string HslColorCodeType_IsInvalid_ParseValue {
            get {
                return ResourceManager.GetString("HslColorCodeType_IsInvalid_ParseValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (^(?:hsla?)\((?:\d+%?(?:deg|rad|grad|turn)?(?:,|\s)+){2,3}[\s\/]*[\d\.]+%?\)).
        /// </summary>
        internal static string HslColorCodeType_ValidationPattern {
            get {
                return ResourceManager.GetString("HslColorCodeType_ValidationPattern", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The IPv4 scalar type represents a valid a IPv4 address as defined
        /// here https://en.wikipedia.org/wiki/IPv4..
        /// </summary>
        internal static string IPv4Type_Description {
            get {
                return ResourceManager.GetString("IPv4Type_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IPv4Type cannot parse the provided literal. The provided value is not a valid IPv4 address..
        /// </summary>
        internal static string IPv4Type_IsInvalid_ParseLiteral {
            get {
                return ResourceManager.GetString("IPv4Type_IsInvalid_ParseLiteral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IPv4Type cannot parse the provided value. The provided value is not a valid IPv4 address..
        /// </summary>
        internal static string IPv4Type_IsInvalid_ParseValue {
            get {
                return ResourceManager.GetString("IPv4Type_IsInvalid_ParseValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (^(?:(?:(?:0?0?[0-9]|0?[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}(?:0?0?[0-9]|0?[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(?:\/(?:[0-9]|[1-2][0-9]|3[0-2]))?)$).
        /// </summary>
        internal static string IPv4Type_ValidationPattern {
            get {
                return ResourceManager.GetString("IPv4Type_ValidationPattern", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The NegativeFloat scalar type represents a double‐precision fractional value less than 0..
        /// </summary>
        internal static string NegativeFloatType_Description {
            get {
                return ResourceManager.GetString("NegativeFloatType_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NegativeFloatType cannot parse the provided literal. The provided value was not negative..
        /// </summary>
        internal static string NegativeFloatType_IsNotNegative_ParseLiteral {
            get {
                return ResourceManager.GetString("NegativeFloatType_IsNotNegative_ParseLiteral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NegativeFloatType cannot parse the provided value. The provided value was not negative..
        /// </summary>
        internal static string NegativeFloatType_IsNotNegative_ParseValue {
            get {
                return ResourceManager.GetString("NegativeFloatType_IsNotNegative_ParseValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The NegativeInt scalar type represents a signed 32-bit numeric non-fractional with a maximum of -1..
        /// </summary>
        internal static string NegativeIntType_Description {
            get {
                return ResourceManager.GetString("NegativeIntType_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NegativeIntType cannot parse the provided literal. The provided value was not negative..
        /// </summary>
        internal static string NegativeIntType_IsNotNegative_ParseLiteral {
            get {
                return ResourceManager.GetString("NegativeIntType_IsNotNegative_ParseLiteral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NegativeIntType cannot parse the provided value. The provided value was not negative..
        /// </summary>
        internal static string NegativeIntType_IsNotNegative_ParseValue {
            get {
                return ResourceManager.GetString("NegativeIntType_IsNotNegative_ParseValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The NonEmptyString scalar type represents non empty textual data, represented as UTF‐8 character sequences with at least one character.
        /// </summary>
        internal static string NonEmptyStringType_Description {
            get {
                return ResourceManager.GetString("NonEmptyStringType_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NonEmptyStringType cannot parse the provided literal. The provided string was empty..
        /// </summary>
        internal static string NonEmptyStringType_IsEmpty_ParseLiteral {
            get {
                return ResourceManager.GetString("NonEmptyStringType_IsEmpty_ParseLiteral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NonEmptyStringType cannot parse the provided value. The provided string was empty..
        /// </summary>
        internal static string NonEmptyStringType_IsEmpty_ParseValue {
            get {
                return ResourceManager.GetString("NonEmptyStringType_IsEmpty_ParseValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The NonNegativeFloat scalar type represents a double‐precision fractional value greater than or equal to 0..
        /// </summary>
        internal static string NonNegativeFloatType_Description {
            get {
                return ResourceManager.GetString("NonNegativeFloatType_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NonNegativeFloatType cannot parse the provided literal. The provided value was not greater than or equal to 0..
        /// </summary>
        internal static string NonNegativeFloatType_IsNotNonNegative_ParseLiteral {
            get {
                return ResourceManager.GetString("NonNegativeFloatType_IsNotNonNegative_ParseLiteral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NonNegativeFloatType cannot parse the provided value. The provided value was not greater than or equal to 0..
        /// </summary>
        internal static string NonNegativeFloatType_IsNotNonNegative_ParseValue {
            get {
                return ResourceManager.GetString("NonNegativeFloatType_IsNotNonNegative_ParseValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The NonNegativeInt scalar type represents a unsigned 32-bit numeric non-fractional value equal to or greater than 0..
        /// </summary>
        internal static string NonNegativeIntType_Description {
            get {
                return ResourceManager.GetString("NonNegativeIntType_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NonNegativeIntType cannot parse the provided literal. The provided value was not greater than or equal to 0..
        /// </summary>
        internal static string NonNegativeIntType_IsNotNonNegative_ParseLiteral {
            get {
                return ResourceManager.GetString("NonNegativeIntType_IsNotNonNegative_ParseLiteral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NonNegativeIntType cannot parse the provided value. The provided value was not greater than or equal to 0..
        /// </summary>
        internal static string NonNegativeIntType_IsNotNonNegative_ParseValue {
            get {
                return ResourceManager.GetString("NonNegativeIntType_IsNotNonNegative_ParseValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The NonPositiveFloat scalar type represents a double‐precision fractional value less than or equal to 0..
        /// </summary>
        internal static string NonPositiveFloatType_Description {
            get {
                return ResourceManager.GetString("NonPositiveFloatType_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NonPositiveFloatType cannot parse the provided literal. The provided value was not less than or equal to 0..
        /// </summary>
        internal static string NonPositiveFloatType_IsNotNonPositive_ParseLiteral {
            get {
                return ResourceManager.GetString("NonPositiveFloatType_IsNotNonPositive_ParseLiteral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NonPositiveFloatType cannot parse the provided value. The provided value was not less than or equal to 0..
        /// </summary>
        internal static string NonPositiveFloatType_IsNotNonPositive_ParseValue {
            get {
                return ResourceManager.GetString("NonPositiveFloatType_IsNotNonPositive_ParseValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The NonPositiveInt scalar type represents a signed 32-bit numeric non-fractional value less than or equal to 0..
        /// </summary>
        internal static string NonPositiveIntType_Description {
            get {
                return ResourceManager.GetString("NonPositiveIntType_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NonPositiveIntType cannot parse the provided literal. The provided value was not less than or equal to 0..
        /// </summary>
        internal static string NonPositiveIntType_IsNotNonPositive_ParseLiteral {
            get {
                return ResourceManager.GetString("NonPositiveIntType_IsNotNonPositive_ParseLiteral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NonPositiveIntType cannot parse the provided value. The provided value was not less than or equal to 0..
        /// </summary>
        internal static string NonPositiveIntType_IsNotNonPositive_ParseValue {
            get {
                return ResourceManager.GetString("NonPositiveIntType_IsNotNonPositive_ParseValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (^\+[1-9]\d{1,14}$).
        /// </summary>
        internal static string PhoneNumber_ValidationPattern {
            get {
                return ResourceManager.GetString("PhoneNumber_ValidationPattern", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The PhoneNumber scalar type represents a value that conforms to the standard E.164 format as specified in: https://en.wikipedia.org/wiki/E.164..
        /// </summary>
        internal static string PhoneNumberType_Description {
            get {
                return ResourceManager.GetString("PhoneNumberType_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PhoneNumberType cannot parse the provided literal. The provided value does not meet the standard E.164 format as specified in: https://en.wikipedia.org/wiki/E.164..
        /// </summary>
        internal static string PhoneNumberType_IsInvalid_ParseLiteral {
            get {
                return ResourceManager.GetString("PhoneNumberType_IsInvalid_ParseLiteral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PhoneNumberType cannot parse the provided value. The provided value does not meet the standard E.164 format as specified in: https://en.wikipedia.org/wiki/E.164..
        /// </summary>
        internal static string PhoneNumberType_IsInvalid_ParseValue {
            get {
                return ResourceManager.GetString("PhoneNumberType_IsInvalid_ParseValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The PositiveInt scalar type represents a signed 32-bit numeric non-fractional value of at least the value 1..
        /// </summary>
        internal static string PositiveIntType_Description {
            get {
                return ResourceManager.GetString("PositiveIntType_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PositiveIntType cannot parse the provided literal. The provided value is 0 or less..
        /// </summary>
        internal static string PositiveIntType_ZeroOrLess_ParseLiteral {
            get {
                return ResourceManager.GetString("PositiveIntType_ZeroOrLess_ParseLiteral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PositiveIntType cannot parse the provided value. The provided value is 0 or less..
        /// </summary>
        internal static string PositiveIntType_ZeroOrLess_ParseValue {
            get {
                return ResourceManager.GetString("PositiveIntType_ZeroOrLess_ParseValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The PostalCode scalar type represents a valid postal code..
        /// </summary>
        internal static string PostalCodeType_Description {
            get {
                return ResourceManager.GetString("PostalCodeType_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PostalCodeType cannot parse the provided literal. The provided value is a invalid postal code..
        /// </summary>
        internal static string PostalCodeType_IsInvalid_ParseLiteral {
            get {
                return ResourceManager.GetString("PostalCodeType_IsInvalid_ParseLiteral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PostalCodeType cannot parse the provided value. The provided value is a invalid postal code..
        /// </summary>
        internal static string PostalCodeType_IsInvalid_ParseValue {
            get {
                return ResourceManager.GetString("PostalCodeType_IsInvalid_ParseValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (^\d{4}$).
        /// </summary>
        internal static string PostalCodeType_ValidationPattern_AT {
            get {
                return ResourceManager.GetString("PostalCodeType_ValidationPattern_AT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (^(0[289][0-9]{2})|([1345689][0-9]{3})|(2[0-8][0-9]{2})|(290[0-9])|(291[0-4])|(7[0-4][0-9]{2})|(7[8-9][0-9]{2})$).
        /// </summary>
        internal static string PostalCodeType_ValidationPattern_AU {
            get {
                return ResourceManager.GetString("PostalCodeType_ValidationPattern_AU", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (^[1-9]{1}[0-9]{3}$).
        /// </summary>
        internal static string PostalCodeType_ValidationPattern_BE {
            get {
                return ResourceManager.GetString("PostalCodeType_ValidationPattern_BE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (^([ABCEGHJKLMNPRSTVXY]\d[ABCEGHJKLMNPRSTVWXYZ]) {0,1}(\d[ABCEGHJKLMNPRSTVWXYZ]\d)$).
        /// </summary>
        internal static string PostalCodeType_ValidationPattern_CA {
            get {
                return ResourceManager.GetString("PostalCodeType_ValidationPattern_CA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (^\d{4}$).
        /// </summary>
        internal static string PostalCodeType_ValidationPattern_CH {
            get {
                return ResourceManager.GetString("PostalCodeType_ValidationPattern_CH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (\b((?:0[1-46-9]\d{3})|(?:[1-357-9]\d{4})|(?:[4][0-24-9]\d{3})|(?:[6][013-9]\d{3}))\b).
        /// </summary>
        internal static string PostalCodeType_ValidationPattern_DE {
            get {
                return ResourceManager.GetString("PostalCodeType_ValidationPattern_DE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (^([D|d][K|k]( |-))?[1-9]{1}[0-9]{3}$).
        /// </summary>
        internal static string PostalCodeType_ValidationPattern_DK {
            get {
                return ResourceManager.GetString("PostalCodeType_ValidationPattern_DK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (^([1-9]{2}|[0-9][1-9]|[1-9][0-9])[0-9]{3}$).
        /// </summary>
        internal static string PostalCodeType_ValidationPattern_ES {
            get {
                return ResourceManager.GetString("PostalCodeType_ValidationPattern_ES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (^(F-)?((2[A|B])|[0-9]{2})[0-9]{3}$).
        /// </summary>
        internal static string PostalCodeType_ValidationPattern_FR {
            get {
                return ResourceManager.GetString("PostalCodeType_ValidationPattern_FR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (^\d{6}$).
        /// </summary>
        internal static string PostalCodeType_ValidationPattern_IN {
            get {
                return ResourceManager.GetString("PostalCodeType_ValidationPattern_IN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (^(V-|I-)?[0-9]{5}$).
        /// </summary>
        internal static string PostalCodeType_ValidationPattern_IT {
            get {
                return ResourceManager.GetString("PostalCodeType_ValidationPattern_IT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (^\d{4}$).
        /// </summary>
        internal static string PostalCodeType_ValidationPattern_LU {
            get {
                return ResourceManager.GetString("PostalCodeType_ValidationPattern_LU", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (^[1-9][0-9]{3}\s?([a-zA-Z]{2})?$).
        /// </summary>
        internal static string PostalCodeType_ValidationPattern_NL {
            get {
                return ResourceManager.GetString("PostalCodeType_ValidationPattern_NL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (^\d{4}([\-]\d{3})?$).
        /// </summary>
        internal static string PostalCodeType_ValidationPattern_PT {
            get {
                return ResourceManager.GetString("PostalCodeType_ValidationPattern_PT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (^(s-|S-){0,1}[0-9]{3}\s?[0-9]{2}$).
        /// </summary>
        internal static string PostalCodeType_ValidationPattern_SE {
            get {
                return ResourceManager.GetString("PostalCodeType_ValidationPattern_SE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (^(GIR|[A-Z]\d[A-Z\d]??|[A-Z]{2}\d[A-Z\d]??)[ ]??(\d[A-Z]{2})$).
        /// </summary>
        internal static string PostalCodeType_ValidationPattern_UK {
            get {
                return ResourceManager.GetString("PostalCodeType_ValidationPattern_UK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (^\d{5}([-]?\d{4})?$).
        /// </summary>
        internal static string PostalCodeType_ValidationPattern_US {
            get {
                return ResourceManager.GetString("PostalCodeType_ValidationPattern_US", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The UnsignedInt scalar type represents a unsigned 32-bit numeric non-fractional value greater than or equal to 0..
        /// </summary>
        internal static string UnsignedIntType_Description {
            get {
                return ResourceManager.GetString("UnsignedIntType_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UnsignedIntType cannot parse the provided literal. The provided value is not greater than or equal to 0..
        /// </summary>
        internal static string UnsignedIntType_IsNotUnsigned_ParseLiteral {
            get {
                return ResourceManager.GetString("UnsignedIntType_IsNotUnsigned_ParseLiteral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UnsignedIntType cannot parse the provided value. The provided value is not greater than or equal to 0..
        /// </summary>
        internal static string UnsignedIntType_IsNotUnsigned_ParseValue {
            get {
                return ResourceManager.GetString("UnsignedIntType_IsNotUnsigned_ParseValue", resourceCulture);
            }
        }
    }
}
