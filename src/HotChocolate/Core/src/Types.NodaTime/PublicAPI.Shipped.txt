#nullable enable
abstract HotChocolate.Types.NodaTime.IntToStructBaseType<TRuntimeType>.TryDeserialize(int resultValue, out TRuntimeType? runtimeValue) -> bool
abstract HotChocolate.Types.NodaTime.IntToStructBaseType<TRuntimeType>.TrySerialize(TRuntimeType runtimeValue, out int? resultValue) -> bool
abstract HotChocolate.Types.NodaTime.StringToClassBaseType<TRuntimeType>.Serialize(TRuntimeType! runtimeValue) -> string!
abstract HotChocolate.Types.NodaTime.StringToClassBaseType<TRuntimeType>.TryDeserialize(string! resultValue, out TRuntimeType? runtimeValue) -> bool
abstract HotChocolate.Types.NodaTime.StringToStructBaseType<TRuntimeType>.Serialize(TRuntimeType runtimeValue) -> string!
abstract HotChocolate.Types.NodaTime.StringToStructBaseType<TRuntimeType>.TryDeserialize(string! resultValue, out TRuntimeType? runtimeValue) -> bool
HotChocolate.Types.NodaTime.DateTimeZoneType
HotChocolate.Types.NodaTime.DateTimeZoneType.DateTimeZoneType() -> void
HotChocolate.Types.NodaTime.DurationType
HotChocolate.Types.NodaTime.DurationType.DurationType() -> void
HotChocolate.Types.NodaTime.InstantType
HotChocolate.Types.NodaTime.InstantType.InstantType() -> void
HotChocolate.Types.NodaTime.IntToStructBaseType<TRuntimeType>
HotChocolate.Types.NodaTime.IntToStructBaseType<TRuntimeType>.IntToStructBaseType(string! name) -> void
HotChocolate.Types.NodaTime.IsoDayOfWeekType
HotChocolate.Types.NodaTime.IsoDayOfWeekType.IsoDayOfWeekType() -> void
HotChocolate.Types.NodaTime.LocalDateTimeType
HotChocolate.Types.NodaTime.LocalDateTimeType.LocalDateTimeType() -> void
HotChocolate.Types.NodaTime.LocalDateType
HotChocolate.Types.NodaTime.LocalDateType.LocalDateType() -> void
HotChocolate.Types.NodaTime.LocalTimeType
HotChocolate.Types.NodaTime.LocalTimeType.LocalTimeType() -> void
HotChocolate.Types.NodaTime.OffsetDateTimeType
HotChocolate.Types.NodaTime.OffsetDateTimeType.OffsetDateTimeType() -> void
HotChocolate.Types.NodaTime.OffsetDateType
HotChocolate.Types.NodaTime.OffsetDateType.OffsetDateType() -> void
HotChocolate.Types.NodaTime.OffsetTimeType
HotChocolate.Types.NodaTime.OffsetTimeType.OffsetTimeType() -> void
HotChocolate.Types.NodaTime.OffsetType
HotChocolate.Types.NodaTime.OffsetType.OffsetType() -> void
HotChocolate.Types.NodaTime.PeriodType
HotChocolate.Types.NodaTime.PeriodType.PeriodType() -> void
HotChocolate.Types.NodaTime.StringToClassBaseType<TRuntimeType>
HotChocolate.Types.NodaTime.StringToClassBaseType<TRuntimeType>.StringToClassBaseType(string! name) -> void
HotChocolate.Types.NodaTime.StringToStructBaseType<TRuntimeType>
HotChocolate.Types.NodaTime.StringToStructBaseType<TRuntimeType>.StringToStructBaseType(string! name) -> void
HotChocolate.Types.NodaTime.ZonedDateTimeType
HotChocolate.Types.NodaTime.ZonedDateTimeType.ZonedDateTimeType() -> void
override HotChocolate.Types.NodaTime.DateTimeZoneType.Serialize(NodaTime.DateTimeZone! runtimeValue) -> string!
override HotChocolate.Types.NodaTime.DateTimeZoneType.TryDeserialize(string! resultValue, out NodaTime.DateTimeZone? runtimeValue) -> bool
override HotChocolate.Types.NodaTime.DurationType.Serialize(NodaTime.Duration runtimeValue) -> string!
override HotChocolate.Types.NodaTime.DurationType.TryDeserialize(string! resultValue, out NodaTime.Duration? runtimeValue) -> bool
override HotChocolate.Types.NodaTime.InstantType.Serialize(NodaTime.Instant runtimeValue) -> string!
override HotChocolate.Types.NodaTime.InstantType.TryDeserialize(string! resultValue, out NodaTime.Instant? runtimeValue) -> bool
override HotChocolate.Types.NodaTime.IntToStructBaseType<TRuntimeType>.ParseLiteral(HotChocolate.Language.IntValueNode! literal) -> TRuntimeType
override HotChocolate.Types.NodaTime.IntToStructBaseType<TRuntimeType>.ParseResult(object? resultValue) -> HotChocolate.Language.IValueNode!
override HotChocolate.Types.NodaTime.IntToStructBaseType<TRuntimeType>.ParseValue(TRuntimeType value) -> HotChocolate.Language.IntValueNode!
override HotChocolate.Types.NodaTime.IntToStructBaseType<TRuntimeType>.TryDeserialize(object? resultValue, out object? runtimeValue) -> bool
override HotChocolate.Types.NodaTime.IntToStructBaseType<TRuntimeType>.TrySerialize(object? runtimeValue, out object? resultValue) -> bool
override HotChocolate.Types.NodaTime.IsoDayOfWeekType.TryDeserialize(int resultValue, out NodaTime.IsoDayOfWeek? runtimeValue) -> bool
override HotChocolate.Types.NodaTime.IsoDayOfWeekType.TrySerialize(NodaTime.IsoDayOfWeek runtimeValue, out int? resultValue) -> bool
override HotChocolate.Types.NodaTime.LocalDateTimeType.Serialize(NodaTime.LocalDateTime runtimeValue) -> string!
override HotChocolate.Types.NodaTime.LocalDateTimeType.TryDeserialize(string! resultValue, out NodaTime.LocalDateTime? runtimeValue) -> bool
override HotChocolate.Types.NodaTime.LocalDateType.Serialize(NodaTime.LocalDate runtimeValue) -> string!
override HotChocolate.Types.NodaTime.LocalDateType.TryDeserialize(string! resultValue, out NodaTime.LocalDate? runtimeValue) -> bool
override HotChocolate.Types.NodaTime.LocalTimeType.Serialize(NodaTime.LocalTime runtimeValue) -> string!
override HotChocolate.Types.NodaTime.LocalTimeType.TryDeserialize(string! resultValue, out NodaTime.LocalTime? runtimeValue) -> bool
override HotChocolate.Types.NodaTime.OffsetDateTimeType.Serialize(NodaTime.OffsetDateTime runtimeValue) -> string!
override HotChocolate.Types.NodaTime.OffsetDateTimeType.TryDeserialize(string! resultValue, out NodaTime.OffsetDateTime? runtimeValue) -> bool
override HotChocolate.Types.NodaTime.OffsetDateType.Serialize(NodaTime.OffsetDate runtimeValue) -> string!
override HotChocolate.Types.NodaTime.OffsetDateType.TryDeserialize(string! resultValue, out NodaTime.OffsetDate? runtimeValue) -> bool
override HotChocolate.Types.NodaTime.OffsetTimeType.Serialize(NodaTime.OffsetTime runtimeValue) -> string!
override HotChocolate.Types.NodaTime.OffsetTimeType.TryDeserialize(string! resultValue, out NodaTime.OffsetTime? runtimeValue) -> bool
override HotChocolate.Types.NodaTime.OffsetType.Serialize(NodaTime.Offset runtimeValue) -> string!
override HotChocolate.Types.NodaTime.OffsetType.TryDeserialize(string! resultValue, out NodaTime.Offset? runtimeValue) -> bool
override HotChocolate.Types.NodaTime.PeriodType.Serialize(NodaTime.Period! runtimeValue) -> string!
override HotChocolate.Types.NodaTime.PeriodType.TryDeserialize(string! resultValue, out NodaTime.Period? runtimeValue) -> bool
override HotChocolate.Types.NodaTime.StringToClassBaseType<TRuntimeType>.ParseLiteral(HotChocolate.Language.StringValueNode! literal) -> TRuntimeType!
override HotChocolate.Types.NodaTime.StringToClassBaseType<TRuntimeType>.ParseResult(object? resultValue) -> HotChocolate.Language.IValueNode!
override HotChocolate.Types.NodaTime.StringToClassBaseType<TRuntimeType>.ParseValue(TRuntimeType! value) -> HotChocolate.Language.StringValueNode!
override HotChocolate.Types.NodaTime.StringToClassBaseType<TRuntimeType>.TryDeserialize(object? resultValue, out object? runtimeValue) -> bool
override HotChocolate.Types.NodaTime.StringToClassBaseType<TRuntimeType>.TrySerialize(object? runtimeValue, out object? resultValue) -> bool
override HotChocolate.Types.NodaTime.StringToStructBaseType<TRuntimeType>.ParseLiteral(HotChocolate.Language.StringValueNode! literal) -> TRuntimeType
override HotChocolate.Types.NodaTime.StringToStructBaseType<TRuntimeType>.ParseResult(object? resultValue) -> HotChocolate.Language.IValueNode!
override HotChocolate.Types.NodaTime.StringToStructBaseType<TRuntimeType>.ParseValue(TRuntimeType value) -> HotChocolate.Language.StringValueNode!
override HotChocolate.Types.NodaTime.StringToStructBaseType<TRuntimeType>.TryDeserialize(object? resultValue, out object? runtimeValue) -> bool
override HotChocolate.Types.NodaTime.StringToStructBaseType<TRuntimeType>.TrySerialize(object? runtimeValue, out object? resultValue) -> bool
override HotChocolate.Types.NodaTime.ZonedDateTimeType.Serialize(NodaTime.ZonedDateTime runtimeValue) -> string!
override HotChocolate.Types.NodaTime.ZonedDateTimeType.TryDeserialize(string! resultValue, out NodaTime.ZonedDateTime? runtimeValue) -> bool
