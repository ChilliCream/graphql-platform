*REMOVED*virtual HotChocolate.Types.Pagination.QueryableCursorPagingHandler<TEntity>.ApplyCursorToEdges(System.Linq.IQueryable<TEntity>! allEdges, int? after, int? before) -> System.Linq.IQueryable<TEntity>!
*REMOVED*virtual HotChocolate.Types.Pagination.QueryableCursorPagingHandler<TEntity>.ExecuteQueryableAsync(System.Linq.IQueryable<TEntity>! queryable, int offset, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.ValueTask<System.Collections.Generic.IReadOnlyList<HotChocolate.Types.Pagination.IndexEdge<TEntity>!>!>
*REMOVED*virtual HotChocolate.Types.Pagination.QueryableCursorPagingHandler<TEntity>.GetFirstEdges(System.Linq.IQueryable<TEntity>! edges, int first, ref int offset) -> System.Linq.IQueryable<TEntity>!
*REMOVED*virtual HotChocolate.Types.Pagination.QueryableCursorPagingHandler<TEntity>.GetLastEdges(System.Linq.IQueryable<TEntity>! edges, int last, ref int offset) -> System.Linq.IQueryable<TEntity>!
HotChocolate.Types.Pagination.CursorPagingHandler.RequirePagingBoundaries.get -> bool
HotChocolate.Types.Pagination.IConnectionType
HotChocolate.Types.Pagination.IConnectionType.ConnectionName.get -> HotChocolate.NameString
HotChocolate.Types.Pagination.IConnectionType.EdgeType.get -> HotChocolate.Types.Pagination.IEdgeType!
HotChocolate.Types.Pagination.IEdgeType.ConnectionName.get -> HotChocolate.NameString
HotChocolate.Types.Pagination.IEdgeType.NodeType.get -> HotChocolate.Types.IOutputType!
HotChocolate.Types.UsePagingAttribute.AllowBackwardPagination.get -> bool
HotChocolate.Types.UsePagingAttribute.AllowBackwardPagination.set -> void
HotChocolate.Types.UsePagingAttribute.ConnectionName.get -> string?
HotChocolate.Types.UsePagingAttribute.ConnectionName.set -> void
HotChocolate.Types.UsePagingAttribute.InferConnectionNameFromField.get -> bool
HotChocolate.Types.UsePagingAttribute.InferConnectionNameFromField.set -> void
HotChocolate.Types.UsePagingAttribute.ProviderName.get -> string?
HotChocolate.Types.UsePagingAttribute.ProviderName.set -> void
HotChocolate.Types.UsePagingAttribute.RequirePagingBoundaries.get -> bool
HotChocolate.Types.UsePagingAttribute.RequirePagingBoundaries.set -> void
Microsoft.Extensions.DependencyInjection.CursorPagingRequestExecutorBuilderExtension
static HotChocolate.Types.PagingObjectFieldDescriptorExtensions.AddPagingArguments(this HotChocolate.Types.IInterfaceFieldDescriptor! descriptor, bool allowBackwardPagination) -> HotChocolate.Types.IInterfaceFieldDescriptor!
*REMOVED*static HotChocolate.Types.PagingObjectFieldDescriptorExtensions.AddPagingArguments(this HotChocolate.Types.IInterfaceFieldDescriptor! descriptor) -> HotChocolate.Types.IInterfaceFieldDescriptor!
*REMOVED*static HotChocolate.Types.PagingObjectFieldDescriptorExtensions.AddPagingArguments(this HotChocolate.Types.IObjectFieldDescriptor! descriptor) -> HotChocolate.Types.IObjectFieldDescriptor!
static HotChocolate.Types.PagingObjectFieldDescriptorExtensions.AddPagingArguments(this HotChocolate.Types.IObjectFieldDescriptor! descriptor, bool allowBackwardPagination) -> HotChocolate.Types.IObjectFieldDescriptor!
static HotChocolate.Types.PagingObjectFieldDescriptorExtensions.UsePaging(this HotChocolate.Types.IInterfaceFieldDescriptor! descriptor, System.Type? nodeType = null, HotChocolate.NameString? connectionName = null, HotChocolate.Types.Pagination.PagingOptions options = default(HotChocolate.Types.Pagination.PagingOptions)) -> HotChocolate.Types.IInterfaceFieldDescriptor!
static HotChocolate.Types.PagingObjectFieldDescriptorExtensions.UsePaging(this HotChocolate.Types.IObjectFieldDescriptor! descriptor, System.Type? nodeType = null, System.Type? entityType = null, HotChocolate.Types.GetCursorPagingProvider? resolvePagingProvider = null, HotChocolate.NameString? connectionName = null, HotChocolate.Types.Pagination.PagingOptions options = default(HotChocolate.Types.Pagination.PagingOptions)) -> HotChocolate.Types.IObjectFieldDescriptor!
static HotChocolate.Types.PagingObjectFieldDescriptorExtensions.UsePaging<TNodeType, TEntity>(this HotChocolate.Types.IObjectFieldDescriptor! descriptor, HotChocolate.Types.GetCursorPagingProvider? resolvePagingProvider = null, HotChocolate.NameString? connectionName = null, HotChocolate.Types.Pagination.PagingOptions options = default(HotChocolate.Types.Pagination.PagingOptions)) -> HotChocolate.Types.IObjectFieldDescriptor!
static HotChocolate.Types.PagingObjectFieldDescriptorExtensions.UsePaging<TNodeType>(this HotChocolate.Types.IInterfaceFieldDescriptor! descriptor, HotChocolate.NameString? connectionName = null, HotChocolate.Types.Pagination.PagingOptions options = default(HotChocolate.Types.Pagination.PagingOptions)) -> HotChocolate.Types.IInterfaceFieldDescriptor!
static HotChocolate.Types.PagingObjectFieldDescriptorExtensions.UsePaging<TNodeType>(this HotChocolate.Types.IObjectFieldDescriptor! descriptor, System.Type? entityType = null, HotChocolate.Types.GetCursorPagingProvider? resolvePagingProvider = null, HotChocolate.NameString? connectionName = null, HotChocolate.Types.Pagination.PagingOptions options = default(HotChocolate.Types.Pagination.PagingOptions)) -> HotChocolate.Types.IObjectFieldDescriptor!
static Microsoft.Extensions.DependencyInjection.CursorPagingRequestExecutorBuilderExtension.AddCursorPagingProvider<TProvider>(this HotChocolate.Execution.Configuration.IRequestExecutorBuilder! builder, string? providerName = null, bool defaultProvider = false) -> HotChocolate.Execution.Configuration.IRequestExecutorBuilder!
static Microsoft.Extensions.DependencyInjection.CursorPagingRequestExecutorBuilderExtension.AddCursorPagingProvider<TProvider>(this HotChocolate.Execution.Configuration.IRequestExecutorBuilder! builder, System.Func<System.IServiceProvider!, TProvider!>! factory, string? providerName = null, bool defaultProvider = false) -> HotChocolate.Execution.Configuration.IRequestExecutorBuilder!
static Microsoft.Extensions.DependencyInjection.CursorPagingRequestExecutorBuilderExtension.AddQueryableCursorPagingProvider(this HotChocolate.Execution.Configuration.IRequestExecutorBuilder! builder, string? providerName = null, bool defaultProvider = false) -> HotChocolate.Execution.Configuration.IRequestExecutorBuilder!
*REMOVED*HotChocolate.Types.Pagination.ConnectionCountType<T>
*REMOVED*HotChocolate.Types.Pagination.ConnectionCountType<T>.ConnectionCountType() -> void
*REMOVED*HotChocolate.Types.Pagination.ConnectionCountType<T>.ConnectionCountType(System.Action<HotChocolate.Types.IObjectTypeDescriptor<HotChocolate.Types.Pagination.Connection!>!>! configure) -> void
*REMOVED*HotChocolate.Types.Pagination.ConnectionType<T>
*REMOVED*HotChocolate.Types.Pagination.ConnectionType<T>.ConnectionType() -> void
*REMOVED*HotChocolate.Types.Pagination.ConnectionType<T>.ConnectionType(System.Action<HotChocolate.Types.IObjectTypeDescriptor<HotChocolate.Types.Pagination.Connection!>!>! configure) -> void
*REMOVED*HotChocolate.Types.Pagination.ConnectionType<T>.EdgeType.get -> HotChocolate.Types.Pagination.IEdgeType!
*REMOVED*HotChocolate.Types.Pagination.EdgeType<T>
*REMOVED*HotChocolate.Types.Pagination.EdgeType<T>.EdgeType() -> void
*REMOVED*HotChocolate.Types.Pagination.EdgeType<T>.EntityType.get -> HotChocolate.Types.IOutputType!
*REMOVED*override HotChocolate.Types.Pagination.ConnectionCountType<T>.Configure(HotChocolate.Types.IObjectTypeDescriptor<HotChocolate.Types.Pagination.Connection!>! descriptor) -> void
*REMOVED*override HotChocolate.Types.Pagination.ConnectionType<T>.Configure(HotChocolate.Types.IObjectTypeDescriptor<HotChocolate.Types.Pagination.Connection!>! descriptor) -> void
*REMOVED*override HotChocolate.Types.Pagination.ConnectionType<T>.OnCompleteType(HotChocolate.Configuration.ITypeCompletionContext! context, HotChocolate.Types.Descriptors.Definitions.ObjectTypeDefinition! definition) -> void
*REMOVED*override HotChocolate.Types.Pagination.ConnectionType<T>.OnRegisterDependencies(HotChocolate.Configuration.ITypeDiscoveryContext! context, HotChocolate.Types.Descriptors.Definitions.ObjectTypeDefinition! definition) -> void
*REMOVED*override HotChocolate.Types.Pagination.EdgeType<T>.Configure(HotChocolate.Types.IObjectTypeDescriptor<HotChocolate.Types.Pagination.IEdge!>! descriptor) -> void
*REMOVED*override HotChocolate.Types.Pagination.EdgeType<T>.OnCompleteType(HotChocolate.Configuration.ITypeCompletionContext! context, HotChocolate.Types.Descriptors.Definitions.ObjectTypeDefinition! definition) -> void
*REMOVED*static HotChocolate.Types.Pagination.ConnectionCountType<T>.ApplyConfig(HotChocolate.Types.IObjectTypeDescriptor<HotChocolate.Types.Pagination.Connection!>! descriptor) -> void
*REMOVED*static HotChocolate.Types.Pagination.ConnectionType<T>.ApplyConfig(HotChocolate.Types.IObjectTypeDescriptor<HotChocolate.Types.Pagination.Connection!>! descriptor) -> void
*REMOVED*static HotChocolate.Types.PagingObjectFieldDescriptorExtensions.UsePaging(this HotChocolate.Types.IInterfaceFieldDescriptor! descriptor, System.Type? type = null, HotChocolate.Types.Pagination.PagingOptions options = default(HotChocolate.Types.Pagination.PagingOptions)) -> HotChocolate.Types.IInterfaceFieldDescriptor!
*REMOVED*static HotChocolate.Types.PagingObjectFieldDescriptorExtensions.UsePaging(this HotChocolate.Types.IObjectFieldDescriptor! descriptor, System.Type? type = null, System.Type? entityType = null, HotChocolate.Types.GetCursorPagingProvider? resolvePagingProvider = null, HotChocolate.Types.Pagination.PagingOptions options = default(HotChocolate.Types.Pagination.PagingOptions)) -> HotChocolate.Types.IObjectFieldDescriptor!
*REMOVED*static HotChocolate.Types.PagingObjectFieldDescriptorExtensions.UsePaging<TSchemaType, TEntity>(this HotChocolate.Types.IObjectFieldDescriptor! descriptor, HotChocolate.Types.GetCursorPagingProvider? resolvePagingProvider = null, HotChocolate.Types.Pagination.PagingOptions options = default(HotChocolate.Types.Pagination.PagingOptions)) -> HotChocolate.Types.IObjectFieldDescriptor!
*REMOVED*static HotChocolate.Types.PagingObjectFieldDescriptorExtensions.UsePaging<TSchemaType>(this HotChocolate.Types.IInterfaceFieldDescriptor! descriptor, HotChocolate.Types.Pagination.PagingOptions options = default(HotChocolate.Types.Pagination.PagingOptions)) -> HotChocolate.Types.IInterfaceFieldDescriptor!
*REMOVED*static HotChocolate.Types.PagingObjectFieldDescriptorExtensions.UsePaging<TSchemaType>(this HotChocolate.Types.IObjectFieldDescriptor! descriptor, System.Type? entityType = null, HotChocolate.Types.GetCursorPagingProvider? resolvePagingProvider = null, HotChocolate.Types.Pagination.PagingOptions options = default(HotChocolate.Types.Pagination.PagingOptions)) -> HotChocolate.Types.IObjectFieldDescriptor!