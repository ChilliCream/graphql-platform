schema {
  query: Query
}

type Query {
  string: String
  int: Int
  float: Float
  dateTime: DateTime
  enum: ExampleEnum
  stringList: [String]
  intList: [Int]
  floatList: [Float]
  dateTimeList: [DateTime]
  enumList: [ExampleEnum]
  stringNestedList: [[String]]
  intNestedList: [[Int]]
  floatNestedList: [[Float]]
  dateTimeNestedList: [[DateTime]]
  enumNestedList: [[ExampleEnum]]
  single: Query
  list: [Query]
  nestedList: [[Query]]
}

enum ExampleEnum {
  FIRST
  SECOND
  THIRD
}

directive @chunk(size: Int! = 1) repeatable on QUERY | MUTATION | SUBSCRIPTION | FIELD

directive @count(by: String) repeatable on QUERY | MUTATION | SUBSCRIPTION | FIELD

"The `@defer` directive may be provided for fragment spreads and inline fragments to inform the executor to delay the execution of the current fragment to indicate deprioritization of the current fragment. A query with `@defer` directive will cause the request to potentially return multiple responses, where non-deferred data is delivered in the initial response and data deferred is delivered in a subsequent response. `@include` and `@skip` take precedence over `@defer`."
directive @defer("If this argument label has a value other than null, it will be passed on to the result of this defer directive. This label is intended to give client applications a way to identify to which fragment a deferred result belongs to." label: String "Deferred when true." if: Boolean) on FRAGMENT_SPREAD | INLINE_FRAGMENT

directive @drop(count: Int!) repeatable on QUERY | MUTATION | SUBSCRIPTION | FIELD

directive @dropRight(count: Int!) repeatable on QUERY | MUTATION | SUBSCRIPTION | FIELD

directive @flatten(depth: Int! = 1) repeatable on QUERY | MUTATION | SUBSCRIPTION | FIELD

directive @groupBy(key: String!) repeatable on QUERY | MUTATION | SUBSCRIPTION | FIELD

directive @keyBy(key: String!) repeatable on QUERY | MUTATION | SUBSCRIPTION | FIELD

directive @keys repeatable on QUERY | MUTATION | SUBSCRIPTION | FIELD

directive @map(key: String!) repeatable on QUERY | MUTATION | SUBSCRIPTION | FIELD

directive @max(by: String) repeatable on QUERY | MUTATION | SUBSCRIPTION | FIELD

directive @meanBy(key: String!) repeatable on QUERY | MUTATION | SUBSCRIPTION | FIELD

directive @minBy(key: String!) repeatable on QUERY | MUTATION | SUBSCRIPTION | FIELD

"The `@specifiedBy` directive is used within the type system definition language to provide a URL for specifying the behavior of custom scalar definitions."
directive @specifiedBy("The specifiedBy URL points to a human-readable specification. This field will only read a result for scalar types." url: String!) on SCALAR

"The `@stream` directive may be provided for a field of `List` type so that the backend can leverage technology such as asynchronous iterators to provide a partial list in the initial response, and additional list items in subsequent responses. `@include` and `@skip` take precedence over `@stream`."
directive @stream("If this argument label has a value other than null, it will be passed on to the result of this stream directive. This label is intended to give client applications a way to identify to which fragment a streamed result belongs to." label: String "The initial elements that shall be send down to the consumer." initialCount: Int! "Streamed when true." if: Boolean!) on FIELD

directive @sumBy(key: String!) repeatable on QUERY | MUTATION | SUBSCRIPTION | FIELD

directive @take(count: Int!) repeatable on QUERY | MUTATION | SUBSCRIPTION | FIELD

directive @takeRight(count: Int!) repeatable on QUERY | MUTATION | SUBSCRIPTION | FIELD

directive @unique(by: String) repeatable on QUERY | MUTATION | SUBSCRIPTION | FIELD

"The `DateTime` scalar represents an ISO-8601 compliant date time type."
scalar DateTime @specifiedBy(url: "https:\/\/www.graphql-scalars.com\/date-time")
