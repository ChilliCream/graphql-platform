result:
---------------
{
  "data": {
    "throw": {
      "errors": [
        {
          "__typename": "CustomInterfaceError",
          "message": "Did work",
          "code": "CODE"
        }
      ]
    }
  }
}
---------------

schema:
---------------
schema {
  mutation: Mutation
}

interface IUserError {
  message: String
  code: String
}

type CustomInterfaceError implements IUserError {
  message: String!
  code: String!
}

type Mutation {
  throw: ThrowPayload!
}

type Payload {
  foo: String!
}

type ThrowPayload {
  payload: Payload
  errors: [ThrowError!]
}

union ThrowError = CustomInterfaceError

directive @tag(name: String!) repeatable on SCHEMA | SCALAR | OBJECT | FIELD_DEFINITION | ARGUMENT_DEFINITION | INTERFACE | UNION | ENUM | ENUM_VALUE | INPUT_OBJECT | INPUT_FIELD_DEFINITION
---------------
