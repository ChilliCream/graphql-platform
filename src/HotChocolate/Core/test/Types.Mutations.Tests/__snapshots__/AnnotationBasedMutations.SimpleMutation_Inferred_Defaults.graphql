schema {
  mutation: SimpleMutationWithSingleError
}

interface Error {
  message: String!
}

type CustomError implements Error {
  message: String!
}

type DoSomethingOut {
  string: String
  errors: [DoSomethingFault!]
}

type SimpleMutationWithSingleError {
  doSomething(inputArgument: DoSomethingIn!): DoSomethingOut!
}

union DoSomethingFault = CustomError

input DoSomethingIn {
  something: String!
}

directive @tag(name: String!) repeatable on SCHEMA | SCALAR | OBJECT | FIELD_DEFINITION | ARGUMENT_DEFINITION | INTERFACE | UNION | ENUM | ENUM_VALUE | INPUT_OBJECT | INPUT_FIELD_DEFINITION