schema {
  mutation: MutationWithUnionResult7
}

interface Error {
  message: String!
}

type Custom2Error implements Error {
  message: String!
}

type Custom4Error implements Error {
  message: String!
}

type Custom5 implements Error {
  message: String!
}

type Custom6 implements Error {
  message: String!
}

type CustomError implements Error {
  message: String!
}

type DoSomethingPayload {
  string: String
  errors: [DoSomethingError!]
}

type MutationWithUnionResult7 {
  doSomething(input: DoSomethingInput!): DoSomethingPayload!
}

union DoSomethingError = CustomError | Custom2Error | Custom4Error | Custom5 | Custom6

input DoSomethingInput {
  something: String!
}

directive @tag(name: String!) repeatable on SCHEMA | SCALAR | OBJECT | FIELD_DEFINITION | ARGUMENT_DEFINITION | INTERFACE | UNION | ENUM | ENUM_VALUE | INPUT_OBJECT | INPUT_FIELD_DEFINITION