schema {
  query: Foo
}

type A_Bar {
  baz: C_Baz
  someString: String
}

type B_Bar {
  baz: C_Baz
  someString: String
}

type C_Baz {
  someString: String
}

type Foo {
  bar1: A_Bar
  bar2: B_Bar
}

directive @tag(name: String!) repeatable on SCHEMA | SCALAR | OBJECT | FIELD_DEFINITION | ARGUMENT_DEFINITION | INTERFACE | UNION | ENUM | ENUM_VALUE | INPUT_OBJECT | INPUT_FIELD_DEFINITION
