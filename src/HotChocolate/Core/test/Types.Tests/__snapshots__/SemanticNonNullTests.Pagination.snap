schema {
  query: QueryWithPagination
}

"Information about the offset pagination."
type CollectionSegmentInfo {
  "Indicates whether more items exist following the set defined by the clients arguments."
  hasNextPage: Boolean!
  "Indicates whether more items exist prior the set defined by the clients arguments."
  hasPreviousPage: Boolean!
}

"A connection to a list of items."
type CursorPaginationConnection {
  "Information to aid in pagination."
  pageInfo: PageInfo @semanticNonNull
  "A list of edges."
  edges: [CursorPaginationEdge] @semanticNonNull(levels: [ 1 ])
  "A flattened list of the nodes."
  nodes: [String] @semanticNonNull(levels: [ 1 ])
}

"An edge in a connection."
type CursorPaginationEdge {
  "A cursor for use in pagination."
  cursor: String @semanticNonNull
  "The item at the end of the edge."
  node: String @semanticNonNull
}

"A segment of a collection."
type OffsetPaginationCollectionSegment {
  "Information to aid in pagination."
  pageInfo: CollectionSegmentInfo @semanticNonNull
  "A flattened list of the items."
  items: [String] @semanticNonNull(levels: [ 1 ])
}

"Information about pagination in a connection."
type PageInfo {
  "Indicates whether more edges exist following the set defined by the clients arguments."
  hasNextPage: Boolean!
  "Indicates whether more edges exist prior the set defined by the clients arguments."
  hasPreviousPage: Boolean!
  "When paginating backwards, the cursor to continue."
  startCursor: String
  "When paginating forwards, the cursor to continue."
  endCursor: String
}

type QueryWithPagination {
  cursorPagination("Returns the first _n_ elements from the list." first: Int "Returns the elements in the list that come after the specified cursor." after: String "Returns the last _n_ elements from the list." last: Int "Returns the elements in the list that come before the specified cursor." before: String): CursorPaginationConnection
  offsetPagination(skip: Int take: Int): OffsetPaginationCollectionSegment
}

directive @semanticNonNull(levels: [Int!] = [ 0 ]) on FIELD_DEFINITION
