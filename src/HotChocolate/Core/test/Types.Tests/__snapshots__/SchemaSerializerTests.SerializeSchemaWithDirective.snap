interface Bar {
  id: ID! @upper
}

type Baz {
  name(baz: BazInput): String
}

type Foo implements Bar {
  id: ID!
}

union FooOrBaz = Foo | Baz

input BazInput {
  name: String
}

directive @tag(name: String!) repeatable on SCHEMA | SCALAR | OBJECT | FIELD_DEFINITION | ARGUMENT_DEFINITION | INTERFACE | UNION | ENUM | ENUM_VALUE | INPUT_OBJECT | INPUT_FIELD_DEFINITION

directive @upper on FIELD_DEFINITION
