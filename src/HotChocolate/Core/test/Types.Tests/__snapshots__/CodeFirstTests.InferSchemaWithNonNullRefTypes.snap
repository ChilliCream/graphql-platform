schema {
  query: Query
}

interface IPet {
  name: String
}

type Dog implements IPet {
  name: String
}

type Greetings {
  name: String!
}

type Query {
  sayHello(name: String!): String!
  greetings(greetings: GreetingsInput!): Greetings!
  pet: IPet!
  petOrNull: IPet
}

input GreetingsInput {
  name: String!
}

directive @tag(name: String!) repeatable on SCHEMA | SCALAR | OBJECT | FIELD_DEFINITION | ARGUMENT_DEFINITION | INTERFACE | UNION | ENUM | ENUM_VALUE | INPUT_OBJECT | INPUT_FIELD_DEFINITION