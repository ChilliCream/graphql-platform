schema {
  query: QueryWithGenerics
}

interface IPet {
  name: String
}

type Dog implements IPet {
  name: String
}

type GenericWrapperOfIPet {
  value: IPet!
}

type QueryWithGenerics {
  pet(id: Int!): IPet
  pets(arg1: Int arg2: Boolean arg3: Boolean arg4: String arg5: GenericWrapperOfStringInput arg6: GreetingsInput): GenericWrapperOfIPet!
}

input GenericWrapperOfStringInput {
  value: String!
}

input GreetingsInput {
  name: String!
}

directive @tag(name: String!) repeatable on SCHEMA | SCALAR | OBJECT | FIELD_DEFINITION | ARGUMENT_DEFINITION | INTERFACE | UNION | ENUM | ENUM_VALUE | INPUT_OBJECT | INPUT_FIELD_DEFINITION