schema {
  query: Query
}

type Query {
  abc(def: InputWithDefaultInput): String
}

input ComplexInput {
  foo: Int!
}

input InputWithDefaultInput {
  withStringDefault: String = "abc"
  withNullDefault: String
  enum: FooEnum! = BAR
  complexInput: [[ComplexInput!]!]! = [ [ { foo: 1 } ] ]
  withoutDefault: String
}

enum FooEnum {
  BAR
  BAZ
}

directive @tag(name: String!) repeatable on SCHEMA | SCALAR | OBJECT | FIELD_DEFINITION | ARGUMENT_DEFINITION | INTERFACE | UNION | ENUM | ENUM_VALUE | INPUT_OBJECT | INPUT_FIELD_DEFINITION
