schema {
  query: FooWithDict
}

type Bar {
  baz: String!
}

type FooWithDict {
  map: [KeyValuePairOfStringAndBar!]
}

type KeyValuePairOfStringAndBar {
  key: String!
  value: Bar!
}

directive @tag(name: String!) repeatable on SCHEMA | SCALAR | OBJECT | FIELD_DEFINITION | ARGUMENT_DEFINITION | INTERFACE | UNION | ENUM | ENUM_VALUE | INPUT_OBJECT | INPUT_FIELD_DEFINITION
