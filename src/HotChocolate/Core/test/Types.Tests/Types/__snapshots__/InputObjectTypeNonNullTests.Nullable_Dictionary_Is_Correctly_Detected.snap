schema {
  query: Query
}

type Query {
  foo(input: FooInput!): String!
}

input FooInput {
  contextData: [KeyValuePairOfStringAndStringInput!]
}

input KeyValuePairOfStringAndStringInput {
  key: String!
  value: String!
}

directive @tag(name: String!) repeatable on SCHEMA | SCALAR | OBJECT | FIELD_DEFINITION | ARGUMENT_DEFINITION | INTERFACE | UNION | ENUM | ENUM_VALUE | INPUT_OBJECT | INPUT_FIELD_DEFINITION
