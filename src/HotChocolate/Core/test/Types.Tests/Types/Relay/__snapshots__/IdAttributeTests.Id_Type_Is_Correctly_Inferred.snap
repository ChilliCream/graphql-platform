schema {
  query: Query
}

interface IFooPayload {
  someId: ID!
  someNullableId: ID
  someIds: [ID!]!
  someNullableIds: [ID]
  interceptedId: Int
  interceptedIds: [Int!]
  raw: String!
}

type FooPayload implements IFooPayload {
  someId: ID!
  someIds: [ID!]!
  someNullableId: ID
  someNullableIds: [ID]
  interceptedId: Int
  interceptedIds: [Int!]
  raw: String!
}

type Query {
  intId(id: ID!): Int!
  intIdList(ids: [ID!]!): [Int!]!
  nullableIntId(id: ID): Int
  nullableIntIdList(ids: [ID]!): [Int]!
  optionalIntId(id: ID = "UXVlcnk6MA=="): Int
  optionalIntIdList(ids: [ID!] = [  ]): [Int!]
  stringId(id: ID!): String!
  stringIdList(ids: [ID!]!): [String!]!
  nullableStringId(id: ID): String
  nullableStringIdList(ids: [ID]!): [String]!
  optionalStringId(id: ID = "UXVlcnk6"): String
  optionalStringIdList(ids: [ID] = [  ]): [String!]
  guidId(id: ID!): UUID!
  guidIdList(ids: [ID!]!): [UUID!]!
  nullableGuidId(id: ID): UUID
  nullableGuidIdList(ids: [ID]!): [UUID]!
  optionalGuidId(id: ID = "UXVlcnk6AAAAAAAAAAAAAAAAAAAAAA=="): UUID
  optionalGuidIdList(ids: [ID] = [  ]): [UUID!]
  interceptedId(id: ID!): Int!
  interceptedIds(ids: [ID!]!): [Int!]!
  customId(id: ID!): String!
  nullableCustomId(id: ID): String!
  customIds(ids: [ID!]!): String!
  nullableCustomIds(ids: [ID]!): String!
  foo(input: FooInput!): IFooPayload!
}

input FooInput {
  someId: ID!
  someNullableId: ID
  someOptionalId: ID = "U29tZTo="
  someIds: [ID!]!
  someNullableIds: [ID]
  someOptionalIds: [ID!] = [  ]
  interceptedId: ID
  interceptedIds: [ID!]
}

"The `@specifiedBy` directive is used within the type system definition language to provide a URL for specifying the behavior of custom scalar definitions."
directive @specifiedBy("The specifiedBy URL points to a human-readable specification. This field will only read a result for scalar types." url: String!) on SCALAR

scalar UUID @specifiedBy(url: "https:\/\/tools.ietf.org\/html\/rfc4122")
