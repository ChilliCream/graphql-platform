schema {
  query: Query
}

interface IFooPayload {
  someId: ID
}

type FooPayload implements IFooPayload {
  someId: ID
}

type Query {
  intId(id: ID!): String
  stringId(id: ID): String
  guidId(id: ID!): String
  foo(input: FooInput): IFooPayload
}

input FooInput {
  someId: ID
}

directive @tag(name: String!) repeatable on SCHEMA | SCALAR | OBJECT | FIELD_DEFINITION | ARGUMENT_DEFINITION | INTERFACE | UNION | ENUM | ENUM_VALUE | INPUT_OBJECT | INPUT_FIELD_DEFINITION
