schema {
  query: Query
  mutation: Mutation
  subscription: Subscription
}

interface Entity {
  name: String!
}

type Mutation {
  doSomething: String!
}

type Person implements Entity {
  name: String!
  address: String!
  lastName: String!
}

type Query {
  person: Entity
  enum: CustomEnum
  book: SomeBook!
  withDataLoader: String!
  staticField: String!
}

type SomeBook {
  title: String
}

type Subscription {
  onSomething: String!
}

enum CustomEnum {
  ABC
  DEF
}

"The @tag directive is used to apply arbitrary string\nmetadata to a schema location. Custom tooling can use\nthis metadata during any step of the schema delivery flow,\nincluding composition, static analysis, and documentation.\n            \n\ninterface Book {\n  id: ID! @tag(name: \"your-value\")\n  title: String!\n  author: String!\n}"
directive @tag("The name of the tag." name: String!) repeatable on SCHEMA | SCALAR | OBJECT | FIELD_DEFINITION | ARGUMENT_DEFINITION | INTERFACE | UNION | ENUM | ENUM_VALUE | INPUT_OBJECT | INPUT_FIELD_DEFINITION