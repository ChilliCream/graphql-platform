schema {
  query: Query
}

type Query {
  foo(test: FooFilterTypeFilter): String
}

input ComparableOperationInputOfInt32Filter {
  eq: Int!
  gt: Int!
  gte: Int!
  in: Int!
  lt: Int!
  lte: Int!
  neq: Int!
  ngt: Int!
  ngte: Int!
  nin: Int!
  nlt: Int!
  nlte: Int!
}

input FooFilterTypeFilter {
  and: [FooFilterTypeFilter!]
  comparable: ComparableOperationInputOfInt32Filter
  or: [FooFilterTypeFilter!]
}

"The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."
scalar Int

"The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."
scalar String
