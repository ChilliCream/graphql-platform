schema {
  query: Query
}

type IgnoreTest {
  id: Int!
  name: String!
}

type Query {
  foo(where: IgnoreTestFilterInput): [IgnoreTest]
}

input IgnoreTestFilterInput {
  and: [IgnoreTestFilterInput!]
  or: [IgnoreTestFilterInput!]
  name: StringOperationFilterInput
}

input StringOperationFilterInput {
  and: [StringOperationFilterInput!]
  or: [StringOperationFilterInput!]
  eq: String
  neq: String
  contains: String
  ncontains: String
  in: [String]
  nin: [String]
  startsWith: String
  nstartsWith: String
  endsWith: String
  nendsWith: String
}

directive @tag(name: String!) repeatable on SCHEMA | SCALAR | OBJECT | FIELD_DEFINITION | ARGUMENT_DEFINITION | INTERFACE | UNION | ENUM | ENUM_VALUE | INPUT_OBJECT | INPUT_FIELD_DEFINITION