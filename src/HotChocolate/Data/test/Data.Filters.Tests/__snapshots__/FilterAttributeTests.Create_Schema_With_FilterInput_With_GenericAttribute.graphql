schema {
  query: Query5
}

type Foo {
  bar: String!
  baz: Int!
  qux: Int
}

type Query5 {
  foos(where: FooFilterInput): [Foo!]!
}

input FooFilterInput {
  and: [FooFilterInput!]
  or: [FooFilterInput!]
  bar: StringOperationFilterInput
}

input StringOperationFilterInput {
  and: [StringOperationFilterInput!]
  or: [StringOperationFilterInput!]
  eq: String
  neq: String
  contains: String
  ncontains: String
  in: [String]
  nin: [String]
  startsWith: String
  nstartsWith: String
  endsWith: String
  nendsWith: String
}
