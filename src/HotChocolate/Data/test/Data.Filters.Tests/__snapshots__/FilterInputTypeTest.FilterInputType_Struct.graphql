schema {
  query: Query
}

type Query {
  foo: String
}

input ExampleValueTypeFilterInput {
  and: [ExampleValueTypeFilterInput!]
  or: [ExampleValueTypeFilterInput!]
  foo: StringOperationFilterInput
  bar: StringOperationFilterInput
}

input FilterWithStructFilterInput {
  and: [FilterWithStructFilterInput!]
  or: [FilterWithStructFilterInput!]
  valueType: ExampleValueTypeFilterInput
  valueTypeNullable: ExampleValueTypeFilterInput
}

input StringOperationFilterInput {
  and: [StringOperationFilterInput!]
  or: [StringOperationFilterInput!]
  eq: String
  neq: String
  contains: String
  ncontains: String
  in: [String]
  nin: [String]
  startsWith: String
  nstartsWith: String
  endsWith: String
  nendsWith: String
}
