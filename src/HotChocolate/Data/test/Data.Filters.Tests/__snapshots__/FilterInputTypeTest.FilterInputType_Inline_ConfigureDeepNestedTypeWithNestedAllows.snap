schema {
  query: Query
}

type Query {
  foo(where: BookFilterInput): String
}

input BookAuthorAddressCountryFilterInput {
  name: BookAuthorAddressCountryNameFilterInput
}

input BookAuthorAddressCountryNameFilterInput {
  in: [String]
}

input BookAuthorAddressFilterInput {
  postalCode: BookAuthorAddressPostalCodeFilterInput
  country: BookAuthorAddressCountryFilterInput
}

input BookAuthorAddressPostalCodeFilterInput {
  eq: String
  neq: String
}

input BookAuthorFilterInput {
  id: BookAuthorIdFilterInput
  name: BookAuthorNameFilterInput
  address: BookAuthorAddressFilterInput
}

input BookAuthorIdFilterInput {
  eq: Int
  neq: Int
}

input BookAuthorNameFilterInput {
  contains: String
  in: [String]
  nin: [String]
}

input BookChaptersFilterInput {
  eq: Int
  neq: Int
}

input BookFilterInput {
  and: [BookFilterInput!]
  or: [BookFilterInput!]
  chapters: BookChaptersFilterInput
  author: BookAuthorFilterInput
}

"The `@defer` directive may be provided for fragment spreads and inline fragments to inform the executor to delay the execution of the current fragment to indicate deprioritization of the current fragment. A query with `@defer` directive will cause the request to potentially return multiple responses, where non-deferred data is delivered in the initial response and data deferred is delivered in a subsequent response. `@include` and `@skip` take precedence over `@defer`."
directive @defer("If this argument label has a value other than null, it will be passed on to the result of this defer directive. This label is intended to give client applications a way to identify to which fragment a deferred result belongs to." label: String "Deferred when true." if: Boolean) on FRAGMENT_SPREAD | INLINE_FRAGMENT

"The `@stream` directive may be provided for a field of `List` type so that the backend can leverage technology such as asynchronous iterators to provide a partial list in the initial response, and additional list items in subsequent responses. `@include` and `@skip` take precedence over `@stream`."
directive @stream("If this argument label has a value other than null, it will be passed on to the result of this stream directive. This label is intended to give client applications a way to identify to which fragment a streamed result belongs to." label: String "The initial elements that shall be send down to the consumer." initialCount: Int! = 0 "Streamed when true." if: Boolean) on FIELD
