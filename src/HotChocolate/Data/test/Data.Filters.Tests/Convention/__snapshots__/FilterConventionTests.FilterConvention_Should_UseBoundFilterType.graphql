schema {
  query: Query
}

type Foo {
  bar: String!
}

type Query {
  foos(where: FooFilterInput): [Foo]
}

input FooFilterInput {
  and: [FooFilterInput!]
  or: [FooFilterInput!]
  bar: TestOperationFilterInput
}

input TestOperationFilterInput {
  eq: String
}

directive @tag(name: String!) repeatable on SCHEMA | SCALAR | OBJECT | FIELD_DEFINITION | ARGUMENT_DEFINITION | INTERFACE | UNION | ENUM | ENUM_VALUE | INPUT_OBJECT | INPUT_FIELD_DEFINITION