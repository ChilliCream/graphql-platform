schema {
  query: QueryExplicit
}

type Bar {
  stringOperation: String!
}

type Foo {
  simpleMethod: Boolean!
  complexMethod: Bar!
}

type QueryExplicit {
  foos(where: Test): [Foo!]!
}

input BarFilterInput {
  and: [BarFilterInput!]
  or: [BarFilterInput!]
  stringOperation: StringOperationFilterInput
}

input BooleanOperationFilterInput {
  eq: Boolean
  neq: Boolean
}

input StringOperationFilterInput {
  and: [StringOperationFilterInput!]
  or: [StringOperationFilterInput!]
  eq: String
  neq: String
  contains: String
  ncontains: String
  in: [String]
  nin: [String]
  startsWith: String
  nstartsWith: String
  endsWith: String
  nendsWith: String
}

input Test {
  and: [Test!]
  or: [Test!]
  TestSimpleMethod: BooleanOperationFilterInput
  TestComplexMethod: BarFilterInput
}

directive @tag(name: String!) repeatable on SCHEMA | SCALAR | OBJECT | FIELD_DEFINITION | ARGUMENT_DEFINITION | INTERFACE | UNION | ENUM | ENUM_VALUE | INPUT_OBJECT | INPUT_FIELD_DEFINITION