schema {
  query: Query
}

type Bar {
  stringOperation: String!
}

type Foo {
  simpleMethod: Boolean!
  complexMethod: Bar!
}

type Query {
  foos(where: FooFilterInput): [Foo!]!
}

input FooFilterInput {
  and: [FooFilterInput!]
  or: [FooFilterInput!]
}

directive @tag(name: String!) repeatable on SCHEMA | SCALAR | OBJECT | FIELD_DEFINITION | ARGUMENT_DEFINITION | INTERFACE | UNION | ENUM | ENUM_VALUE | INPUT_OBJECT | INPUT_FIELD_DEFINITION