false Result:
---------------
{
  "data": {
    "root": []
  }
}
---------------

false SQL:
---------------
SELECT "d"."Id"
FROM "Data" AS "d"
WHERE NOT (EXISTS (
    SELECT 1
    FROM "FooNested" AS "f"
    WHERE "d"."Id" = "f"."FooId"))
---------------

true Result:
---------------
{
  "data": {
    "root": [
      {
        "fooNested": [
          {
            "bar": "a"
          },
          {
            "bar": "a"
          },
          {
            "bar": "a"
          }
        ]
      },
      {
        "fooNested": [
          {
            "bar": "c"
          },
          {
            "bar": "a"
          },
          {
            "bar": "a"
          }
        ]
      },
      {
        "fooNested": [
          {
            "bar": "a"
          },
          {
            "bar": "d"
          },
          {
            "bar": "b"
          }
        ]
      },
      {
        "fooNested": [
          {
            "bar": "c"
          },
          {
            "bar": "d"
          },
          {
            "bar": "b"
          }
        ]
      },
      {
        "fooNested": [
          {
            "bar": null
          },
          {
            "bar": "d"
          },
          {
            "bar": "b"
          }
        ]
      }
    ]
  }
}
---------------

true SQL:
---------------
SELECT "d"."Id"
FROM "Data" AS "d"
WHERE EXISTS (
    SELECT 1
    FROM "FooNested" AS "f"
    WHERE "d"."Id" = "f"."FooId")
---------------

null
---------------
{
  "errors": [
    {
      "message": "The provided value for filter `all` of type FooNestedFilterInput is invalid. Null values are not supported.",
      "locations": [
        {
          "line": 1,
          "column": 35
        }
      ],
      "path": [
        "root"
      ],
      "extensions": {
        "code": "HC0026",
        "expectedType": "FooNestedFilterInput!",
        "filterType": "FooNestedFilterInput"
      }
    }
  ],
  "data": {
    "root": []
  }
}
---------------
