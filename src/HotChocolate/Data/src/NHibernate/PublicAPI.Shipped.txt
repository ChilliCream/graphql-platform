#nullable enable
HotChocolate.Data.NHibernateEnumerableExtensions
HotChocolate.Data.NHibernateExecutable<T>
HotChocolate.Data.NHibernateExecutable<T>.NHibernateExecutable(System.Linq.IQueryable<T>! queryable) -> void
HotChocolate.Data.UseNHibernateSessionAttribute
HotChocolate.Data.UseNHibernateSessionAttribute.UseNHibernateSessionAttribute() -> void
HotChocolate.Types.NHibernateObjectFieldDescriptorExtensions
override HotChocolate.Data.NHibernateExecutable<T>.FirstOrDefaultAsync(System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.ValueTask<object?>
override HotChocolate.Data.NHibernateExecutable<T>.SingleOrDefaultAsync(System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.ValueTask<object?>
override HotChocolate.Data.NHibernateExecutable<T>.ToListAsync(System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.ValueTask<System.Collections.IList!>
override HotChocolate.Data.UseNHibernateSessionAttribute.OnConfigure(HotChocolate.Types.Descriptors.IDescriptorContext! context, HotChocolate.Types.IObjectFieldDescriptor! descriptor, System.Reflection.MemberInfo! member) -> void
static HotChocolate.Data.NHibernateEnumerableExtensions.AsNhibernateExecutable<T>(this System.Linq.IQueryable<T>! source) -> HotChocolate.IExecutable<T>!
static HotChocolate.Types.NHibernateEnumerableExtensions.UseNHibernateSession(this HotChocolate.Types.IObjectFieldDescriptor! descriptor) -> HotChocolate.Types.IObjectFieldDescriptor!
