abstract HotChocolate.Data.Filters.Expressions.QueryableOperationHandlerBase.HandleOperation(HotChocolate.Data.Filters.Expressions.QueryableFilterContext! context, HotChocolate.Data.Filters.IFilterOperationField! field, HotChocolate.Language.IValueNode! value, object? parsedValue) -> System.Linq.Expressions.Expression!
const HotChocolate.Data.Projections.Expressions.QueryableProjectionProvider.SkipProjectionKey = "SkipProjection" -> string!
const HotChocolate.Data.Sorting.Expressions.QueryableSortProvider.ContextApplySortingKey = "ApplySorting" -> string!
HotChocolate.Data.Filters.Expressions.ApplyFiltering
HotChocolate.Data.Filters.Expressions.QueryableBooleanEqualsHandler.QueryableBooleanEqualsHandler(HotChocolate.Types.InputParser! inputParser) -> void
HotChocolate.Data.Filters.Expressions.QueryableBooleanNotEqualsHandler.QueryableBooleanNotEqualsHandler(HotChocolate.Types.InputParser! inputParser) -> void
HotChocolate.Data.Filters.Expressions.QueryableBooleanOperationHandler.QueryableBooleanOperationHandler(HotChocolate.Types.InputParser! inputParser) -> void
HotChocolate.Data.Filters.Expressions.QueryableComparableEqualsHandler.QueryableComparableEqualsHandler(HotChocolate.Utilities.ITypeConverter! typeConverter, HotChocolate.Types.InputParser! inputParser) -> void
HotChocolate.Data.Filters.Expressions.QueryableComparableGreaterThanHandler.QueryableComparableGreaterThanHandler(HotChocolate.Utilities.ITypeConverter! typeConverter, HotChocolate.Types.InputParser! inputParser) -> void
HotChocolate.Data.Filters.Expressions.QueryableComparableGreaterThanOrEqualsHandler.QueryableComparableGreaterThanOrEqualsHandler(HotChocolate.Utilities.ITypeConverter! typeConverter, HotChocolate.Types.InputParser! inputParser) -> void
HotChocolate.Data.Filters.Expressions.QueryableComparableInHandler.QueryableComparableInHandler(HotChocolate.Utilities.ITypeConverter! typeConverter, HotChocolate.Types.InputParser! inputParser) -> void
HotChocolate.Data.Filters.Expressions.QueryableComparableLowerThanHandler.QueryableComparableLowerThanHandler(HotChocolate.Utilities.ITypeConverter! typeConverter, HotChocolate.Types.InputParser! inputParser) -> void
HotChocolate.Data.Filters.Expressions.QueryableComparableLowerThanOrEqualsHandler.QueryableComparableLowerThanOrEqualsHandler(HotChocolate.Utilities.ITypeConverter! typeConverter, HotChocolate.Types.InputParser! inputParser) -> void
HotChocolate.Data.Filters.Expressions.QueryableComparableNotEqualsHandler.QueryableComparableNotEqualsHandler(HotChocolate.Utilities.ITypeConverter! typeConverter, HotChocolate.Types.InputParser! inputParser) -> void
HotChocolate.Data.Filters.Expressions.QueryableComparableNotGreaterThanHandler.QueryableComparableNotGreaterThanHandler(HotChocolate.Utilities.ITypeConverter! typeConverter, HotChocolate.Types.InputParser! inputParser) -> void
HotChocolate.Data.Filters.Expressions.QueryableComparableNotGreaterThanOrEqualsHandler.QueryableComparableNotGreaterThanOrEqualsHandler(HotChocolate.Utilities.ITypeConverter! typeConverter, HotChocolate.Types.InputParser! inputParser) -> void
HotChocolate.Data.Filters.Expressions.QueryableComparableNotInHandler.QueryableComparableNotInHandler(HotChocolate.Utilities.ITypeConverter! typeConverter, HotChocolate.Types.InputParser! inputParser) -> void
HotChocolate.Data.Filters.Expressions.QueryableComparableNotLowerThanHandler.QueryableComparableNotLowerThanHandler(HotChocolate.Utilities.ITypeConverter! typeConverter, HotChocolate.Types.InputParser! inputParser) -> void
HotChocolate.Data.Filters.Expressions.QueryableComparableNotLowerThanOrEqualsHandler.QueryableComparableNotLowerThanOrEqualsHandler(HotChocolate.Utilities.ITypeConverter! typeConverter, HotChocolate.Types.InputParser! inputParser) -> void
HotChocolate.Data.Filters.Expressions.QueryableComparableOperationHandler.QueryableComparableOperationHandler(HotChocolate.Utilities.ITypeConverter! typeConverter, HotChocolate.Types.InputParser! inputParser) -> void
HotChocolate.Data.Filters.Expressions.QueryableEnumEqualsHandler.QueryableEnumEqualsHandler(HotChocolate.Utilities.ITypeConverter! typeConverter, HotChocolate.Types.InputParser! inputParser) -> void
HotChocolate.Data.Filters.Expressions.QueryableEnumInHandler.QueryableEnumInHandler(HotChocolate.Utilities.ITypeConverter! typeConverter, HotChocolate.Types.InputParser! inputParser) -> void
HotChocolate.Data.Filters.Expressions.QueryableEnumNotEqualsHandler.QueryableEnumNotEqualsHandler(HotChocolate.Utilities.ITypeConverter! typeConverter, HotChocolate.Types.InputParser! inputParser) -> void
HotChocolate.Data.Filters.Expressions.QueryableEnumNotInHandler.QueryableEnumNotInHandler(HotChocolate.Utilities.ITypeConverter! typeConverter, HotChocolate.Types.InputParser! inputParser) -> void
HotChocolate.Data.Filters.Expressions.QueryableFilterExtensions
HotChocolate.Data.Filters.Expressions.QueryableListAnyOperationHandler.QueryableListAnyOperationHandler(HotChocolate.Utilities.ITypeConverter! typeConverter, HotChocolate.Types.InputParser! inputParser) -> void
HotChocolate.Data.Filters.Expressions.QueryableOperationHandlerBase.InputParser.get -> HotChocolate.Types.InputParser!
HotChocolate.Data.Filters.Expressions.QueryableOperationHandlerBase.QueryableOperationHandlerBase(HotChocolate.Types.InputParser! inputParser) -> void
HotChocolate.Data.Filters.Expressions.QueryableStringContainsHandler.QueryableStringContainsHandler(HotChocolate.Types.InputParser! inputParser) -> void
HotChocolate.Data.Filters.Expressions.QueryableStringEndsWithHandler.QueryableStringEndsWithHandler(HotChocolate.Types.InputParser! inputParser) -> void
HotChocolate.Data.Filters.Expressions.QueryableStringEqualsHandler.QueryableStringEqualsHandler(HotChocolate.Types.InputParser! inputParser) -> void
HotChocolate.Data.Filters.Expressions.QueryableStringInHandler.QueryableStringInHandler(HotChocolate.Types.InputParser! inputParser) -> void
HotChocolate.Data.Filters.Expressions.QueryableStringNotContainsHandler.QueryableStringNotContainsHandler(HotChocolate.Types.InputParser! inputParser) -> void
HotChocolate.Data.Filters.Expressions.QueryableStringNotEndsWithHandler.QueryableStringNotEndsWithHandler(HotChocolate.Types.InputParser! inputParser) -> void
HotChocolate.Data.Filters.Expressions.QueryableStringNotEqualsHandler.QueryableStringNotEqualsHandler(HotChocolate.Types.InputParser! inputParser) -> void
HotChocolate.Data.Filters.Expressions.QueryableStringNotInHandler.QueryableStringNotInHandler(HotChocolate.Types.InputParser! inputParser) -> void
HotChocolate.Data.Filters.Expressions.QueryableStringNotStartsWithHandler.QueryableStringNotStartsWithHandler(HotChocolate.Types.InputParser! inputParser) -> void
HotChocolate.Data.Filters.Expressions.QueryableStringOperationHandler.QueryableStringOperationHandler(HotChocolate.Types.InputParser! inputParser) -> void
HotChocolate.Data.Filters.Expressions.QueryableStringStartsWithHandler.QueryableStringStartsWithHandler(HotChocolate.Types.InputParser! inputParser) -> void
HotChocolate.Data.Filters.FilterConvention.IsAndAllowed() -> bool
HotChocolate.Data.Filters.FilterConvention.IsOrAllowed() -> bool
HotChocolate.Data.Filters.FilterConventionDefinition.UseAnd.get -> bool
HotChocolate.Data.Filters.FilterConventionDefinition.UseAnd.set -> void
HotChocolate.Data.Filters.FilterConventionDefinition.UseOr.get -> bool
HotChocolate.Data.Filters.FilterConventionDefinition.UseOr.set -> void
HotChocolate.Data.Filters.FilterConventionDescriptor.AllowAnd(bool allow = true) -> HotChocolate.Data.Filters.IFilterConventionDescriptor!
HotChocolate.Data.Filters.FilterConventionDescriptor.AllowOr(bool allow = true) -> HotChocolate.Data.Filters.IFilterConventionDescriptor!
HotChocolate.Data.Filters.IFilterConvention.IsAndAllowed() -> bool
HotChocolate.Data.Filters.IFilterConvention.IsOrAllowed() -> bool
HotChocolate.Data.Filters.IFilterConventionDescriptor.AllowAnd(bool allow = true) -> HotChocolate.Data.Filters.IFilterConventionDescriptor!
HotChocolate.Data.Filters.IFilterConventionDescriptor.AllowOr(bool allow = true) -> HotChocolate.Data.Filters.IFilterConventionDescriptor!
HotChocolate.Data.Projections.Expressions.ApplyProjection
HotChocolate.Data.Projections.Expressions.QueryableProjectExtensions
HotChocolate.Data.Projections.Expressions.QueryableProjectionScope.AddAbstractType(System.Type! type, System.Collections.Generic.Queue<System.Linq.Expressions.MemberAssignment!>! memberAssignments) -> void
HotChocolate.Data.Projections.Expressions.QueryableProjectionScope.GetAbstractTypes() -> System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.Type!, System.Collections.Generic.Queue<System.Linq.Expressions.MemberAssignment!>!>>!
HotChocolate.Data.Projections.Expressions.QueryableProjectionScope.HasAbstractTypes() -> bool
HotChocolate.Data.Projections.ISelectionVisitorContext.ResolvedType.get -> System.Collections.Generic.Stack<HotChocolate.Types.INamedType?>!
HotChocolate.Data.Projections.SelectionVisitorContext.ResolvedType.get -> System.Collections.Generic.Stack<HotChocolate.Types.INamedType?>!
HotChocolate.Data.Sorting.Expressions.ApplySorting
HotChocolate.Data.Sorting.Expressions.QueryableSortExtensions
override HotChocolate.Data.Filters.Expressions.QueryableListAnyOperationHandler.HandleOperation(HotChocolate.Data.Filters.Expressions.QueryableFilterContext! context, HotChocolate.Data.Filters.IFilterOperationField! field, HotChocolate.Language.IValueNode! value, object? parsedValue) -> System.Linq.Expressions.Expression!
override HotChocolate.Data.Filters.Expressions.QueryableOperationHandlerBase.TryHandleOperation(HotChocolate.Data.Filters.Expressions.QueryableFilterContext! context, HotChocolate.Data.Filters.IFilterOperationField! field, HotChocolate.Language.ObjectFieldNode! node, out System.Linq.Expressions.Expression? result) -> bool
override HotChocolate.Data.Filters.Expressions.QueryableStringContainsHandler.HandleOperation(HotChocolate.Data.Filters.Expressions.QueryableFilterContext! context, HotChocolate.Data.Filters.IFilterOperationField! field, HotChocolate.Language.IValueNode! value, object? parsedValue) -> System.Linq.Expressions.Expression!
override HotChocolate.Data.Filters.FilterInputType.OnCompleteFields(HotChocolate.Configuration.ITypeCompletionContext! context, HotChocolate.Types.Descriptors.Definitions.InputObjectTypeDefinition! definition) -> HotChocolate.Types.FieldCollection<HotChocolate.Types.InputField!>!
override HotChocolate.Data.Projections.Expressions.QueryableProjectionVisitor.VisitObjectType(HotChocolate.Types.IOutputField! field, HotChocolate.Types.ObjectType! objectType, HotChocolate.Language.SelectionSetNode? selectionSet, HotChocolate.Data.Projections.Expressions.QueryableProjectionContext! context) -> HotChocolate.Data.Projections.ISelectionVisitorAction!
override HotChocolate.Data.Sorting.SortInputType.OnCompleteFields(HotChocolate.Configuration.ITypeCompletionContext! context, HotChocolate.Types.Descriptors.Definitions.InputObjectTypeDefinition! definition) -> HotChocolate.Types.FieldCollection<HotChocolate.Types.InputField!>!
override HotChocolate.Data.Sorting.SortTypeInterceptor.OnBeforeCompleteName(HotChocolate.Configuration.ITypeCompletionContext! completionContext, HotChocolate.Types.Descriptors.Definitions.DefinitionBase? definition, System.Collections.Generic.IDictionary<string!, object?>! contextData) -> void
override HotChocolate.Data.Sorting.SortTypeInterceptor.OnBeforeCompleteType(HotChocolate.Configuration.ITypeCompletionContext! completionContext, HotChocolate.Types.Descriptors.Definitions.DefinitionBase? definition, System.Collections.Generic.IDictionary<string!, object?>! contextData) -> void
override HotChocolate.Data.Sorting.SortTypeInterceptor.OnBeforeRegisterDependencies(HotChocolate.Configuration.ITypeDiscoveryContext! discoveryContext, HotChocolate.Types.Descriptors.Definitions.DefinitionBase? definition, System.Collections.Generic.IDictionary<string!, object?>! contextData) -> void
static HotChocolate.Data.Filters.Expressions.QueryableFilterExtensions.Filter<T>(this HotChocolate.Data.QueryableExecutable<T>! enumerable, HotChocolate.Resolvers.IResolverContext! context) -> HotChocolate.Data.QueryableExecutable<T>!
static HotChocolate.Data.Filters.Expressions.QueryableFilterExtensions.Filter<T>(this System.Collections.Generic.IEnumerable<T>! enumerable, HotChocolate.Resolvers.IResolverContext! context) -> System.Collections.Generic.IEnumerable<T>!
static HotChocolate.Data.Filters.Expressions.QueryableFilterExtensions.Filter<T>(this System.Linq.IQueryable<T>! queryable, HotChocolate.Resolvers.IResolverContext! context) -> System.Linq.IQueryable<T>!
static HotChocolate.Data.Projections.Expressions.QueryableProjectExtensions.Project<T>(this HotChocolate.Data.QueryableExecutable<T>! enumerable, HotChocolate.Resolvers.IResolverContext! context) -> HotChocolate.Data.QueryableExecutable<T>!
static HotChocolate.Data.Projections.Expressions.QueryableProjectExtensions.Project<T>(this System.Collections.Generic.IEnumerable<T>! enumerable, HotChocolate.Resolvers.IResolverContext! context) -> System.Collections.Generic.IEnumerable<T>!
static HotChocolate.Data.Projections.Expressions.QueryableProjectExtensions.Project<T>(this System.Linq.IQueryable<T>! queryable, HotChocolate.Resolvers.IResolverContext! context) -> System.Linq.IQueryable<T>!
static HotChocolate.Data.Projections.Expressions.QueryableProjectionScopeExtensions.CreateMemberInit(this HotChocolate.Data.Projections.Expressions.QueryableProjectionScope! scope) -> System.Linq.Expressions.Expression!
static HotChocolate.Data.Sorting.Expressions.QueryableSortExtensions.Sort<T>(this HotChocolate.Data.QueryableExecutable<T>! enumerable, HotChocolate.Resolvers.IResolverContext! context) -> HotChocolate.Data.QueryableExecutable<T>!
static HotChocolate.Data.Sorting.Expressions.QueryableSortExtensions.Sort<T>(this System.Collections.Generic.IEnumerable<T>! enumerable, HotChocolate.Resolvers.IResolverContext! context) -> System.Collections.Generic.IEnumerable<T>!
static HotChocolate.Data.Sorting.Expressions.QueryableSortExtensions.Sort<T>(this System.Linq.IQueryable<T>! queryable, HotChocolate.Resolvers.IResolverContext! context) -> System.Linq.IQueryable<T>!
static readonly HotChocolate.Data.Filters.Expressions.QueryableFilterProvider.ContextApplyFilteringKey -> string!
static readonly HotChocolate.Data.Projections.Expressions.QueryableProjectionProvider.ContextApplyProjectionKey -> string!
virtual HotChocolate.Data.Filters.FilterOperationHandler<TContext, T>.TryHandleOperation(TContext! context, HotChocolate.Data.Filters.IFilterOperationField! field, HotChocolate.Language.ObjectFieldNode! node, out T? result) -> bool
virtual HotChocolate.Data.Projections.SelectionVisitor<TContext>.VisitObjectType(HotChocolate.Types.IOutputField! field, HotChocolate.Types.ObjectType! objectType, HotChocolate.Language.SelectionSetNode? selectionSet, TContext context) -> HotChocolate.Data.Projections.ISelectionVisitorAction!
*REMOVED*static HotChocolate.Data.Projections.Expressions.QueryableProjectionScopeExtensions.CreateMemberInit(this HotChocolate.Data.Projections.Expressions.QueryableProjectionScope! scope) -> System.Linq.Expressions.MemberInitExpression!
*REMOVED*abstract HotChocolate.Data.Filters.Expressions.QueryableOperationHandlerBase.HandleOperation(HotChocolate.Data.Filters.Expressions.QueryableFilterContext! context, HotChocolate.Data.Filters.IFilterOperationField! field, HotChocolate.Language.IValueNode! value, object! parsedValue) -> System.Linq.Expressions.Expression!
*REMOVED*HotChocolate.Data.Filters.Expressions.QueryableBooleanEqualsHandler.QueryableBooleanEqualsHandler() -> void
*REMOVED*HotChocolate.Data.Filters.Expressions.QueryableBooleanNotEqualsHandler.QueryableBooleanNotEqualsHandler() -> void
*REMOVED*HotChocolate.Data.Filters.Expressions.QueryableComparableEqualsHandler.QueryableComparableEqualsHandler(HotChocolate.Utilities.ITypeConverter! typeConverter) -> void
*REMOVED*HotChocolate.Data.Filters.Expressions.QueryableComparableGreaterThanHandler.QueryableComparableGreaterThanHandler(HotChocolate.Utilities.ITypeConverter! typeConverter) -> void
*REMOVED*HotChocolate.Data.Filters.Expressions.QueryableComparableGreaterThanOrEqualsHandler.QueryableComparableGreaterThanOrEqualsHandler(HotChocolate.Utilities.ITypeConverter! typeConverter) -> void
*REMOVED*HotChocolate.Data.Filters.Expressions.QueryableComparableInHandler.QueryableComparableInHandler(HotChocolate.Utilities.ITypeConverter! typeConverter) -> void
*REMOVED*HotChocolate.Data.Filters.Expressions.QueryableComparableLowerThanHandler.QueryableComparableLowerThanHandler(HotChocolate.Utilities.ITypeConverter! typeConverter) -> void
*REMOVED*HotChocolate.Data.Filters.Expressions.QueryableComparableLowerThanOrEqualsHandler.QueryableComparableLowerThanOrEqualsHandler(HotChocolate.Utilities.ITypeConverter! typeConverter) -> void
*REMOVED*HotChocolate.Data.Filters.Expressions.QueryableComparableNotEqualsHandler.QueryableComparableNotEqualsHandler(HotChocolate.Utilities.ITypeConverter! typeConverter) -> void
*REMOVED*HotChocolate.Data.Filters.Expressions.QueryableComparableNotGreaterThanHandler.QueryableComparableNotGreaterThanHandler(HotChocolate.Utilities.ITypeConverter! typeConverter) -> void
*REMOVED*HotChocolate.Data.Filters.Expressions.QueryableComparableNotGreaterThanOrEqualsHandler.QueryableComparableNotGreaterThanOrEqualsHandler(HotChocolate.Utilities.ITypeConverter! typeConverter) -> void
*REMOVED*HotChocolate.Data.Filters.Expressions.QueryableComparableNotInHandler.QueryableComparableNotInHandler(HotChocolate.Utilities.ITypeConverter! typeConverter) -> void
*REMOVED*HotChocolate.Data.Filters.Expressions.QueryableComparableNotLowerThanHandler.QueryableComparableNotLowerThanHandler(HotChocolate.Utilities.ITypeConverter! typeConverter) -> void
*REMOVED*HotChocolate.Data.Filters.Expressions.QueryableComparableNotLowerThanOrEqualsHandler.QueryableComparableNotLowerThanOrEqualsHandler(HotChocolate.Utilities.ITypeConverter! typeConverter) -> void
*REMOVED*HotChocolate.Data.Filters.Expressions.QueryableComparableOperationHandler.QueryableComparableOperationHandler(HotChocolate.Utilities.ITypeConverter! typeConverter) -> void
*REMOVED*HotChocolate.Data.Filters.Expressions.QueryableEnumEqualsHandler.QueryableEnumEqualsHandler(HotChocolate.Utilities.ITypeConverter! typeConverter) -> void
*REMOVED*HotChocolate.Data.Filters.Expressions.QueryableEnumInHandler.QueryableEnumInHandler(HotChocolate.Utilities.ITypeConverter! typeConverter) -> void
*REMOVED*HotChocolate.Data.Filters.Expressions.QueryableEnumNotEqualsHandler.QueryableEnumNotEqualsHandler(HotChocolate.Utilities.ITypeConverter! typeConverter) -> void
*REMOVED*HotChocolate.Data.Filters.Expressions.QueryableEnumNotInHandler.QueryableEnumNotInHandler(HotChocolate.Utilities.ITypeConverter! typeConverter) -> void
*REMOVED*HotChocolate.Data.Filters.Expressions.QueryableListAnyOperationHandler.QueryableListAnyOperationHandler(HotChocolate.Utilities.ITypeConverter! typeConverter) -> void
*REMOVED*HotChocolate.Data.Filters.Expressions.QueryableOperationHandlerBase.QueryableOperationHandlerBase() -> void
*REMOVED*HotChocolate.Data.Filters.Expressions.QueryableStringContainsHandler.QueryableStringContainsHandler() -> void
*REMOVED*HotChocolate.Data.Filters.Expressions.QueryableStringEndsWithHandler.QueryableStringEndsWithHandler() -> void
*REMOVED*HotChocolate.Data.Filters.Expressions.QueryableStringEqualsHandler.QueryableStringEqualsHandler() -> void
*REMOVED*HotChocolate.Data.Filters.Expressions.QueryableStringInHandler.QueryableStringInHandler() -> void
*REMOVED*HotChocolate.Data.Filters.Expressions.QueryableStringNotContainsHandler.QueryableStringNotContainsHandler() -> void
*REMOVED*HotChocolate.Data.Filters.Expressions.QueryableStringNotEndsWithHandler.QueryableStringNotEndsWithHandler() -> void
*REMOVED*HotChocolate.Data.Filters.Expressions.QueryableStringNotEqualsHandler.QueryableStringNotEqualsHandler() -> void
*REMOVED*HotChocolate.Data.Filters.Expressions.QueryableStringNotInHandler.QueryableStringNotInHandler() -> void
*REMOVED*HotChocolate.Data.Filters.Expressions.QueryableStringNotStartsWithHandler.QueryableStringNotStartsWithHandler() -> void
*REMOVED*HotChocolate.Data.Filters.Expressions.QueryableStringOperationHandler.QueryableStringOperationHandler() -> void
*REMOVED*HotChocolate.Data.Filters.Expressions.QueryableStringStartsWithHandler.QueryableStringStartsWithHandler() -> void
*REMOVED*override HotChocolate.Data.Filters.Expressions.QueryableListAnyOperationHandler.HandleOperation(HotChocolate.Data.Filters.Expressions.QueryableFilterContext! context, HotChocolate.Data.Filters.IFilterOperationField! field, HotChocolate.Language.IValueNode! value, object! parsedValue) -> System.Linq.Expressions.Expression!
*REMOVED*override HotChocolate.Data.Filters.Expressions.QueryableOperationHandlerBase.TryHandleOperation(HotChocolate.Data.Filters.Expressions.QueryableFilterContext! context, HotChocolate.Data.Filters.IFilterOperationField! field, HotChocolate.Language.ObjectFieldNode! node, out System.Linq.Expressions.Expression! result) -> bool
*REMOVED*override HotChocolate.Data.Filters.Expressions.QueryableStringContainsHandler.HandleOperation(HotChocolate.Data.Filters.Expressions.QueryableFilterContext! context, HotChocolate.Data.Filters.IFilterOperationField! field, HotChocolate.Language.IValueNode! value, object! parsedValue) -> System.Linq.Expressions.Expression!
*REMOVED*override HotChocolate.Data.Filters.FilterInputType.OnCompleteFields(HotChocolate.Configuration.ITypeCompletionContext! context, HotChocolate.Types.Descriptors.Definitions.InputObjectTypeDefinition! definition, System.Collections.Generic.ICollection<HotChocolate.Types.InputField!>! fields) -> void
*REMOVED*override HotChocolate.Data.Sorting.SortInputType.OnCompleteFields(HotChocolate.Configuration.ITypeCompletionContext! context, HotChocolate.Types.Descriptors.Definitions.InputObjectTypeDefinition! definition, System.Collections.Generic.ICollection<HotChocolate.Types.InputField!>! fields) -> void
*REMOVED*override HotChocolate.Data.Sorting.SortTypeInterceptor.OnBeforeCompleteName(HotChocolate.Configuration.ITypeCompletionContext! completionContext, HotChocolate.Types.Descriptors.Definitions.DefinitionBase! definition, System.Collections.Generic.IDictionary<string!, object!>! contextData) -> void
*REMOVED*override HotChocolate.Data.Sorting.SortTypeInterceptor.OnBeforeRegisterDependencies(HotChocolate.Configuration.ITypeDiscoveryContext! discoveryContext, HotChocolate.Types.Descriptors.Definitions.DefinitionBase! definition, System.Collections.Generic.IDictionary<string!, object!>! contextData) -> void
*REMOVED*virtual HotChocolate.Data.Filters.FilterOperationHandler<TContext, T>.TryHandleOperation(TContext! context, HotChocolate.Data.Filters.IFilterOperationField! field, HotChocolate.Language.ObjectFieldNode! node, out T result) -> bool
