#nullable enable
abstract HotChocolate.Data.MongoDb.Filters.MongoDbComparableOperationHandler.Operation.get -> int
abstract HotChocolate.Data.MongoDb.Filters.MongoDbListOperationHandlerBase.HandleListOperation(HotChocolate.Data.MongoDb.Filters.MongoDbFilterVisitorContext! context, HotChocolate.Data.Filters.IFilterField! field, HotChocolate.Data.MongoDb.Filters.MongoDbFilterScope! scope, string! path) -> HotChocolate.Data.MongoDb.MongoDbFilterDefinition!
abstract HotChocolate.Data.MongoDb.Filters.MongoDbListOperationHandlerBase.Operation.get -> int
abstract HotChocolate.Data.MongoDb.Filters.MongoDbOperationHandlerBase.HandleOperation(HotChocolate.Data.MongoDb.Filters.MongoDbFilterVisitorContext! context, HotChocolate.Data.Filters.IFilterOperationField! field, HotChocolate.Language.IValueNode! value, object? parsedValue) -> HotChocolate.Data.MongoDb.MongoDbFilterDefinition!
abstract HotChocolate.Data.MongoDb.Filters.MongoDbStringOperationHandler.Operation.get -> int
abstract HotChocolate.Data.MongoDb.MongoDbExecutable<T>.FirstOrDefaultAsync(System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.ValueTask<object?>
abstract HotChocolate.Data.MongoDb.MongoDbExecutable<T>.Print() -> string!
abstract HotChocolate.Data.MongoDb.MongoDbExecutable<T>.SingleOrDefaultAsync(System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.ValueTask<object?>
abstract HotChocolate.Data.MongoDb.MongoDbExecutable<T>.Source.get -> object!
abstract HotChocolate.Data.MongoDb.MongoDbExecutable<T>.ToListAsync(System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.ValueTask<System.Collections.IList!>
abstract HotChocolate.Data.MongoDb.MongoDbFilterDefinition.Render(MongoDB.Bson.Serialization.IBsonSerializer! documentSerializer, MongoDB.Bson.Serialization.IBsonSerializerRegistry! serializerRegistry) -> MongoDB.Bson.BsonDocument!
abstract HotChocolate.Data.MongoDb.MongoDbProjectionDefinition.Render(MongoDB.Bson.Serialization.IBsonSerializer! documentSerializer, MongoDB.Bson.Serialization.IBsonSerializerRegistry! serializerRegistry) -> MongoDB.Bson.BsonDocument!
abstract HotChocolate.Data.MongoDb.MongoDbSortDefinition.Render(MongoDB.Bson.Serialization.IBsonSerializer! documentSerializer, MongoDB.Bson.Serialization.IBsonSerializerRegistry! serializerRegistry) -> MongoDB.Bson.BsonDocument!
HotChocolate.Data.MongoDb.Filters.FilterConventionDescriptorMongoDbExtensions
HotChocolate.Data.MongoDb.Filters.MongoDbComparableGreaterThanHandler
HotChocolate.Data.MongoDb.Filters.MongoDbComparableGreaterThanHandler.MongoDbComparableGreaterThanHandler() -> void
HotChocolate.Data.MongoDb.Filters.MongoDbComparableGreaterThanOrEqualsHandler
HotChocolate.Data.MongoDb.Filters.MongoDbComparableGreaterThanOrEqualsHandler.MongoDbComparableGreaterThanOrEqualsHandler() -> void
HotChocolate.Data.MongoDb.Filters.MongoDbComparableLowerThanHandler
HotChocolate.Data.MongoDb.Filters.MongoDbComparableLowerThanHandler.MongoDbComparableLowerThanHandler() -> void
HotChocolate.Data.MongoDb.Filters.MongoDbComparableLowerThanOrEqualsHandler
HotChocolate.Data.MongoDb.Filters.MongoDbComparableLowerThanOrEqualsHandler.MongoDbComparableLowerThanOrEqualsHandler() -> void
HotChocolate.Data.MongoDb.Filters.MongoDbComparableNotGreaterThanHandler
HotChocolate.Data.MongoDb.Filters.MongoDbComparableNotGreaterThanHandler.MongoDbComparableNotGreaterThanHandler() -> void
HotChocolate.Data.MongoDb.Filters.MongoDbComparableNotGreaterThanOrEqualsHandler
HotChocolate.Data.MongoDb.Filters.MongoDbComparableNotGreaterThanOrEqualsHandler.MongoDbComparableNotGreaterThanOrEqualsHandler() -> void
HotChocolate.Data.MongoDb.Filters.MongoDbComparableNotLowerThanHandler
HotChocolate.Data.MongoDb.Filters.MongoDbComparableNotLowerThanHandler.MongoDbComparableNotLowerThanHandler() -> void
HotChocolate.Data.MongoDb.Filters.MongoDbComparableNotLowerThanOrEqualsHandler
HotChocolate.Data.MongoDb.Filters.MongoDbComparableNotLowerThanOrEqualsHandler.MongoDbComparableNotLowerThanOrEqualsHandler() -> void
HotChocolate.Data.MongoDb.Filters.MongoDbComparableOperationHandler
HotChocolate.Data.MongoDb.Filters.MongoDbComparableOperationHandler.MongoDbComparableOperationHandler() -> void
HotChocolate.Data.MongoDb.Filters.MongoDbDefaultFieldHandler
HotChocolate.Data.MongoDb.Filters.MongoDbDefaultFieldHandler.MongoDbDefaultFieldHandler() -> void
HotChocolate.Data.MongoDb.Filters.MongoDbEqualsOperationHandler
HotChocolate.Data.MongoDb.Filters.MongoDbEqualsOperationHandler.MongoDbEqualsOperationHandler() -> void
HotChocolate.Data.MongoDb.Filters.MongoDbFilterCombinator
HotChocolate.Data.MongoDb.Filters.MongoDbFilterCombinator.MongoDbFilterCombinator() -> void
HotChocolate.Data.MongoDb.Filters.MongoDbFilterConventionDescriptorExtensions
HotChocolate.Data.MongoDb.Filters.MongoDbFilterProvider
HotChocolate.Data.MongoDb.Filters.MongoDbFilterProvider.MongoDbFilterProvider() -> void
HotChocolate.Data.MongoDb.Filters.MongoDbFilterProvider.MongoDbFilterProvider(System.Action<HotChocolate.Data.Filters.IFilterProviderDescriptor<HotChocolate.Data.MongoDb.Filters.MongoDbFilterVisitorContext!>!>! configure) -> void
HotChocolate.Data.MongoDb.Filters.MongoDbFilterScope
HotChocolate.Data.MongoDb.Filters.MongoDbFilterScope.MongoDbFilterScope() -> void
HotChocolate.Data.MongoDb.Filters.MongoDbFilterScope.Path.get -> System.Collections.Generic.Stack<string!>!
HotChocolate.Data.MongoDb.Filters.MongoDbFilterVisitorContext
HotChocolate.Data.MongoDb.Filters.MongoDbFilterVisitorContext.MongoDbFilterVisitorContext(HotChocolate.Data.Filters.IFilterInputType! initialType) -> void
HotChocolate.Data.MongoDb.Filters.MongoDbFilterVisitorContext.RuntimeTypes.get -> System.Collections.Generic.Stack<HotChocolate.Internal.IExtendedType!>!
HotChocolate.Data.MongoDb.Filters.MongoDbInOperationHandler
HotChocolate.Data.MongoDb.Filters.MongoDbInOperationHandler.MongoDbInOperationHandler() -> void
HotChocolate.Data.MongoDb.Filters.MongoDbListAllOperationHandler
HotChocolate.Data.MongoDb.Filters.MongoDbListAllOperationHandler.MongoDbListAllOperationHandler() -> void
HotChocolate.Data.MongoDb.Filters.MongoDbListAnyOperationHandler
HotChocolate.Data.MongoDb.Filters.MongoDbListAnyOperationHandler.MongoDbListAnyOperationHandler() -> void
HotChocolate.Data.MongoDb.Filters.MongoDbListNoneOperationHandler
HotChocolate.Data.MongoDb.Filters.MongoDbListNoneOperationHandler.MongoDbListNoneOperationHandler() -> void
HotChocolate.Data.MongoDb.Filters.MongoDbListOperationHandlerBase
HotChocolate.Data.MongoDb.Filters.MongoDbListOperationHandlerBase.MongoDbListOperationHandlerBase() -> void
HotChocolate.Data.MongoDb.Filters.MongoDbListSomeOperationHandler
HotChocolate.Data.MongoDb.Filters.MongoDbListSomeOperationHandler.MongoDbListSomeOperationHandler() -> void
HotChocolate.Data.MongoDb.Filters.MongoDbNotEqualsOperationHandler
HotChocolate.Data.MongoDb.Filters.MongoDbNotEqualsOperationHandler.MongoDbNotEqualsOperationHandler() -> void
HotChocolate.Data.MongoDb.Filters.MongoDbNotInOperationHandler
HotChocolate.Data.MongoDb.Filters.MongoDbNotInOperationHandler.MongoDbNotInOperationHandler() -> void
HotChocolate.Data.MongoDb.Filters.MongoDbOperationHandlerBase
HotChocolate.Data.MongoDb.Filters.MongoDbOperationHandlerBase.CanBeNull.get -> bool
HotChocolate.Data.MongoDb.Filters.MongoDbOperationHandlerBase.CanBeNull.set -> void
HotChocolate.Data.MongoDb.Filters.MongoDbOperationHandlerBase.MongoDbOperationHandlerBase() -> void
HotChocolate.Data.MongoDb.Filters.MongoDbStringContainsHandler
HotChocolate.Data.MongoDb.Filters.MongoDbStringContainsHandler.MongoDbStringContainsHandler() -> void
HotChocolate.Data.MongoDb.Filters.MongoDbStringEndsWithHandler
HotChocolate.Data.MongoDb.Filters.MongoDbStringEndsWithHandler.MongoDbStringEndsWithHandler() -> void
HotChocolate.Data.MongoDb.Filters.MongoDbStringNotContainsHandler
HotChocolate.Data.MongoDb.Filters.MongoDbStringNotContainsHandler.MongoDbStringNotContainsHandler() -> void
HotChocolate.Data.MongoDb.Filters.MongoDbStringNotEndsWithHandler
HotChocolate.Data.MongoDb.Filters.MongoDbStringNotEndsWithHandler.MongoDbStringNotEndsWithHandler() -> void
HotChocolate.Data.MongoDb.Filters.MongoDbStringNotStartsWithHandler
HotChocolate.Data.MongoDb.Filters.MongoDbStringNotStartsWithHandler.MongoDbStringNotStartsWithHandler() -> void
HotChocolate.Data.MongoDb.Filters.MongoDbStringOperationHandler
HotChocolate.Data.MongoDb.Filters.MongoDbStringOperationHandler.MongoDbStringOperationHandler() -> void
HotChocolate.Data.MongoDb.Filters.MongoDbStringStartsWithHandler
HotChocolate.Data.MongoDb.Filters.MongoDbStringStartsWithHandler.MongoDbStringStartsWithHandler() -> void
HotChocolate.Data.MongoDb.Filters.MongoFilterVisitorContextExtensions
HotChocolate.Data.MongoDb.IMongoDbExecutable
HotChocolate.Data.MongoDb.IMongoDbExecutable.WithFiltering(HotChocolate.Data.MongoDb.MongoDbFilterDefinition! filters) -> HotChocolate.Data.MongoDb.IMongoDbExecutable!
HotChocolate.Data.MongoDb.IMongoDbExecutable.WithProjection(HotChocolate.Data.MongoDb.MongoDbProjectionDefinition! projection) -> HotChocolate.Data.MongoDb.IMongoDbExecutable!
HotChocolate.Data.MongoDb.IMongoDbExecutable.WithSorting(HotChocolate.Data.MongoDb.MongoDbSortDefinition! sorting) -> HotChocolate.Data.MongoDb.IMongoDbExecutable!
HotChocolate.Data.MongoDb.MongoDbAggregateFluentExecutable<T>
HotChocolate.Data.MongoDb.MongoDbAggregateFluentExecutable<T>.BuildPipeline() -> MongoDB.Driver.IAggregateFluent<T>!
HotChocolate.Data.MongoDb.MongoDbAggregateFluentExecutable<T>.MongoDbAggregateFluentExecutable(MongoDB.Driver.IAggregateFluent<T>! aggregate) -> void
HotChocolate.Data.MongoDb.MongoDbCollectionExecutable<T>
HotChocolate.Data.MongoDb.MongoDbCollectionExecutable<T>.BuildPipeline() -> MongoDB.Driver.IFindFluent<T, T>!
HotChocolate.Data.MongoDb.MongoDbCollectionExecutable<T>.MongoDbCollectionExecutable(MongoDB.Driver.IMongoCollection<T>! collection) -> void
HotChocolate.Data.MongoDb.MongoDbCollectionExecutable<T>.Options.get -> MongoDB.Driver.FindOptionsBase?
HotChocolate.Data.MongoDb.MongoDbCollectionExecutable<T>.WithOptions(MongoDB.Driver.FindOptionsBase! options) -> HotChocolate.Data.MongoDb.IMongoDbExecutable!
HotChocolate.Data.MongoDb.MongoDbExecutable<T>
HotChocolate.Data.MongoDb.MongoDbExecutable<T>.Filters.get -> HotChocolate.Data.MongoDb.MongoDbFilterDefinition?
HotChocolate.Data.MongoDb.MongoDbExecutable<T>.MongoDbExecutable() -> void
HotChocolate.Data.MongoDb.MongoDbExecutable<T>.Projection.get -> HotChocolate.Data.MongoDb.MongoDbProjectionDefinition?
HotChocolate.Data.MongoDb.MongoDbExecutable<T>.Sorting.get -> HotChocolate.Data.MongoDb.MongoDbSortDefinition?
HotChocolate.Data.MongoDb.MongoDbExecutable<T>.WithFiltering(HotChocolate.Data.MongoDb.MongoDbFilterDefinition! filters) -> HotChocolate.Data.MongoDb.IMongoDbExecutable!
HotChocolate.Data.MongoDb.MongoDbExecutable<T>.WithProjection(HotChocolate.Data.MongoDb.MongoDbProjectionDefinition! projection) -> HotChocolate.Data.MongoDb.IMongoDbExecutable!
HotChocolate.Data.MongoDb.MongoDbExecutable<T>.WithSorting(HotChocolate.Data.MongoDb.MongoDbSortDefinition! sorting) -> HotChocolate.Data.MongoDb.IMongoDbExecutable!
HotChocolate.Data.MongoDb.MongoDbFilterDefinition
HotChocolate.Data.MongoDb.MongoDbFilterDefinition.MongoDbFilterDefinition() -> void
HotChocolate.Data.MongoDb.MongoDbFilterDefinition.ToFilterDefinition<T>() -> MongoDB.Driver.FilterDefinition<T>!
HotChocolate.Data.MongoDb.MongoDbFindFluentExecutable<T>
HotChocolate.Data.MongoDb.MongoDbFindFluentExecutable<T>.BuildPipeline() -> MongoDB.Driver.IFindFluent<T, T>!
HotChocolate.Data.MongoDb.MongoDbFindFluentExecutable<T>.MongoDbFindFluentExecutable(MongoDB.Driver.IFindFluent<T, T>! findFluent) -> void
HotChocolate.Data.MongoDb.MongoDbProjectionDefinition
HotChocolate.Data.MongoDb.MongoDbProjectionDefinition.MongoDbProjectionDefinition() -> void
HotChocolate.Data.MongoDb.MongoDbProjectionDefinition.ToProjectionDefinition<T>() -> MongoDB.Driver.ProjectionDefinition<T>!
HotChocolate.Data.MongoDb.MongoDbProjectionProvider
HotChocolate.Data.MongoDb.MongoDbProjectionProvider.MongoDbProjectionProvider() -> void
HotChocolate.Data.MongoDb.MongoDbProjectionProvider.MongoDbProjectionProvider(System.Action<HotChocolate.Data.Projections.IProjectionProviderDescriptor!>! configure) -> void
HotChocolate.Data.MongoDb.MongoDbProjectionScope
HotChocolate.Data.MongoDb.MongoDbProjectionScope.MongoDbProjectionScope() -> void
HotChocolate.Data.MongoDb.MongoDbProjectionVisitorContext
HotChocolate.Data.MongoDb.MongoDbProjectionVisitorContext.MongoDbProjectionVisitorContext(HotChocolate.Resolvers.IResolverContext! context, HotChocolate.Types.IOutputType! initialType) -> void
HotChocolate.Data.MongoDb.MongoDbProjectionVisitorContext.Path.get -> System.Collections.Generic.Stack<string!>!
HotChocolate.Data.MongoDb.MongoDbProjectionVisitorContext.Projections.get -> System.Collections.Generic.Stack<HotChocolate.Data.MongoDb.MongoDbProjectionDefinition!>!
HotChocolate.Data.MongoDb.MongoDbSchemaBuilderExtensions
HotChocolate.Data.MongoDb.MongoDbSortDefinition
HotChocolate.Data.MongoDb.MongoDbSortDefinition.MongoDbSortDefinition() -> void
HotChocolate.Data.MongoDb.MongoDbSortDefinition.ToSortDefinition<T>() -> MongoDB.Driver.SortDefinition<T>!
HotChocolate.Data.MongoDb.Paging.MongoDbCursorPagingProvider
HotChocolate.Data.MongoDb.Paging.MongoDbCursorPagingProvider.MongoDbCursorPagingProvider() -> void
HotChocolate.Data.MongoDb.Paging.MongoDbOffsetPagingProvider
HotChocolate.Data.MongoDb.Paging.MongoDbOffsetPagingProvider.MongoDbOffsetPagingProvider() -> void
HotChocolate.Data.MongoDb.Projections.MongoDbProjectionFieldHandler
HotChocolate.Data.MongoDb.Projections.MongoDbProjectionFieldHandler.MongoDbProjectionFieldHandler() -> void
HotChocolate.Data.MongoDb.Projections.MongoDbProjectionHandlerBase
HotChocolate.Data.MongoDb.Projections.MongoDbProjectionHandlerBase.MongoDbProjectionHandlerBase() -> void
HotChocolate.Data.MongoDb.Projections.MongoDbProjectionScalarHandler
HotChocolate.Data.MongoDb.Projections.MongoDbProjectionScalarHandler.MongoDbProjectionScalarHandler() -> void
HotChocolate.Data.MongoDb.Sorting.MongoDbAscendingSortOperationHandler
HotChocolate.Data.MongoDb.Sorting.MongoDbAscendingSortOperationHandler.MongoDbAscendingSortOperationHandler() -> void
HotChocolate.Data.MongoDb.Sorting.MongoDbDefaultSortFieldHandler
HotChocolate.Data.MongoDb.Sorting.MongoDbDefaultSortFieldHandler.MongoDbDefaultSortFieldHandler() -> void
HotChocolate.Data.MongoDb.Sorting.MongoDbDescendingSortOperationHandler
HotChocolate.Data.MongoDb.Sorting.MongoDbDescendingSortOperationHandler.MongoDbDescendingSortOperationHandler() -> void
HotChocolate.Data.MongoDb.Sorting.MongoDbSortOperationHandlerBase
HotChocolate.Data.MongoDb.Sorting.MongoDbSortOperationHandlerBase.MongoDbSortOperationHandlerBase(int operation, MongoDB.Driver.SortDirection sortDirection) -> void
HotChocolate.Data.MongoDb.Sorting.MongoDbSortProvider
HotChocolate.Data.MongoDb.Sorting.MongoDbSortProvider.MongoDbSortProvider() -> void
HotChocolate.Data.MongoDb.Sorting.MongoDbSortProvider.MongoDbSortProvider(System.Action<HotChocolate.Data.Sorting.ISortProviderDescriptor<HotChocolate.Data.MongoDb.Sorting.MongoDbSortVisitorContext!>!>! configure) -> void
HotChocolate.Data.MongoDb.Sorting.MongoDbSortVisitorContext
HotChocolate.Data.MongoDb.Sorting.MongoDbSortVisitorContext.MongoDbSortVisitorContext(HotChocolate.Data.Sorting.ISortInputType! initialType) -> void
HotChocolate.Data.MongoDb.Sorting.MongoDbSortVisitorContext.Path.get -> System.Collections.Generic.Stack<string!>!
HotChocolate.Data.MongoDbExecutableExtensions
HotChocolate.Data.MongoDbProjectionConventionDescriptorExtensions
HotChocolate.Data.MongoDbProjectionProviderDescriptorExtensions
HotChocolate.Data.MongoSortingConventionDescriptorExtensions
HotChocolate.Data.SortConventionDescriptorMongoExtensions
HotChocolate.Types.MongoPagingObjectFieldDescriptorExtensions
HotChocolate.Types.UseMongoDbOffsetPagingAttribute
HotChocolate.Types.UseMongoDbOffsetPagingAttribute.DefaultPageSize.get -> int
HotChocolate.Types.UseMongoDbOffsetPagingAttribute.DefaultPageSize.set -> void
HotChocolate.Types.UseMongoDbOffsetPagingAttribute.IncludeTotalCount.get -> bool
HotChocolate.Types.UseMongoDbOffsetPagingAttribute.IncludeTotalCount.set -> void
HotChocolate.Types.UseMongoDbOffsetPagingAttribute.MaxPageSize.get -> int
HotChocolate.Types.UseMongoDbOffsetPagingAttribute.MaxPageSize.set -> void
HotChocolate.Types.UseMongoDbOffsetPagingAttribute.Type.get -> System.Type?
HotChocolate.Types.UseMongoDbOffsetPagingAttribute.UseMongoDbOffsetPagingAttribute(System.Type? type = null) -> void
HotChocolate.Types.UseMongoDbPagingAttribute
HotChocolate.Types.UseMongoDbPagingAttribute.DefaultPageSize.get -> int
HotChocolate.Types.UseMongoDbPagingAttribute.DefaultPageSize.set -> void
HotChocolate.Types.UseMongoDbPagingAttribute.IncludeTotalCount.get -> bool
HotChocolate.Types.UseMongoDbPagingAttribute.IncludeTotalCount.set -> void
HotChocolate.Types.UseMongoDbPagingAttribute.MaxPageSize.get -> int
HotChocolate.Types.UseMongoDbPagingAttribute.MaxPageSize.set -> void
HotChocolate.Types.UseMongoDbPagingAttribute.Type.get -> System.Type?
HotChocolate.Types.UseMongoDbPagingAttribute.UseMongoDbPagingAttribute(System.Type? type = null) -> void
Microsoft.Extensions.DependencyInjection.MongoDbDataRequestBuilderExtensions
override HotChocolate.Data.MongoDb.Filters.MongoDbComparableGreaterThanHandler.HandleOperation(HotChocolate.Data.MongoDb.Filters.MongoDbFilterVisitorContext! context, HotChocolate.Data.Filters.IFilterOperationField! field, HotChocolate.Language.IValueNode! value, object? parsedValue) -> HotChocolate.Data.MongoDb.MongoDbFilterDefinition!
override HotChocolate.Data.MongoDb.Filters.MongoDbComparableGreaterThanHandler.Operation.get -> int
override HotChocolate.Data.MongoDb.Filters.MongoDbComparableGreaterThanOrEqualsHandler.HandleOperation(HotChocolate.Data.MongoDb.Filters.MongoDbFilterVisitorContext! context, HotChocolate.Data.Filters.IFilterOperationField! field, HotChocolate.Language.IValueNode! value, object? parsedValue) -> HotChocolate.Data.MongoDb.MongoDbFilterDefinition!
override HotChocolate.Data.MongoDb.Filters.MongoDbComparableGreaterThanOrEqualsHandler.Operation.get -> int
override HotChocolate.Data.MongoDb.Filters.MongoDbComparableLowerThanHandler.HandleOperation(HotChocolate.Data.MongoDb.Filters.MongoDbFilterVisitorContext! context, HotChocolate.Data.Filters.IFilterOperationField! field, HotChocolate.Language.IValueNode! value, object? parsedValue) -> HotChocolate.Data.MongoDb.MongoDbFilterDefinition!
override HotChocolate.Data.MongoDb.Filters.MongoDbComparableLowerThanHandler.Operation.get -> int
override HotChocolate.Data.MongoDb.Filters.MongoDbComparableLowerThanOrEqualsHandler.HandleOperation(HotChocolate.Data.MongoDb.Filters.MongoDbFilterVisitorContext! context, HotChocolate.Data.Filters.IFilterOperationField! field, HotChocolate.Language.IValueNode! value, object? parsedValue) -> HotChocolate.Data.MongoDb.MongoDbFilterDefinition!
override HotChocolate.Data.MongoDb.Filters.MongoDbComparableLowerThanOrEqualsHandler.Operation.get -> int
override HotChocolate.Data.MongoDb.Filters.MongoDbComparableNotGreaterThanHandler.HandleOperation(HotChocolate.Data.MongoDb.Filters.MongoDbFilterVisitorContext! context, HotChocolate.Data.Filters.IFilterOperationField! field, HotChocolate.Language.IValueNode! value, object? parsedValue) -> HotChocolate.Data.MongoDb.MongoDbFilterDefinition!
override HotChocolate.Data.MongoDb.Filters.MongoDbComparableNotGreaterThanHandler.Operation.get -> int
override HotChocolate.Data.MongoDb.Filters.MongoDbComparableNotGreaterThanOrEqualsHandler.HandleOperation(HotChocolate.Data.MongoDb.Filters.MongoDbFilterVisitorContext! context, HotChocolate.Data.Filters.IFilterOperationField! field, HotChocolate.Language.IValueNode! value, object? parsedValue) -> HotChocolate.Data.MongoDb.MongoDbFilterDefinition!
override HotChocolate.Data.MongoDb.Filters.MongoDbComparableNotGreaterThanOrEqualsHandler.Operation.get -> int
override HotChocolate.Data.MongoDb.Filters.MongoDbComparableNotLowerThanHandler.HandleOperation(HotChocolate.Data.MongoDb.Filters.MongoDbFilterVisitorContext! context, HotChocolate.Data.Filters.IFilterOperationField! field, HotChocolate.Language.IValueNode! value, object? parsedValue) -> HotChocolate.Data.MongoDb.MongoDbFilterDefinition!
override HotChocolate.Data.MongoDb.Filters.MongoDbComparableNotLowerThanHandler.Operation.get -> int
override HotChocolate.Data.MongoDb.Filters.MongoDbComparableNotLowerThanOrEqualsHandler.HandleOperation(HotChocolate.Data.MongoDb.Filters.MongoDbFilterVisitorContext! context, HotChocolate.Data.Filters.IFilterOperationField! field, HotChocolate.Language.IValueNode! value, object? parsedValue) -> HotChocolate.Data.MongoDb.MongoDbFilterDefinition!
override HotChocolate.Data.MongoDb.Filters.MongoDbComparableNotLowerThanOrEqualsHandler.Operation.get -> int
override HotChocolate.Data.MongoDb.Filters.MongoDbComparableOperationHandler.CanHandle(HotChocolate.Configuration.ITypeCompletionContext! context, HotChocolate.Data.Filters.IFilterInputTypeDefinition! typeDefinition, HotChocolate.Data.Filters.IFilterFieldDefinition! fieldDefinition) -> bool
override HotChocolate.Data.MongoDb.Filters.MongoDbDefaultFieldHandler.CanHandle(HotChocolate.Configuration.ITypeCompletionContext! context, HotChocolate.Data.Filters.IFilterInputTypeDefinition! typeDefinition, HotChocolate.Data.Filters.IFilterFieldDefinition! fieldDefinition) -> bool
override HotChocolate.Data.MongoDb.Filters.MongoDbDefaultFieldHandler.TryHandleEnter(HotChocolate.Data.MongoDb.Filters.MongoDbFilterVisitorContext! context, HotChocolate.Data.Filters.IFilterField! field, HotChocolate.Language.ObjectFieldNode! node, out HotChocolate.Language.Visitors.ISyntaxVisitorAction? action) -> bool
override HotChocolate.Data.MongoDb.Filters.MongoDbDefaultFieldHandler.TryHandleLeave(HotChocolate.Data.MongoDb.Filters.MongoDbFilterVisitorContext! context, HotChocolate.Data.Filters.IFilterField! field, HotChocolate.Language.ObjectFieldNode! node, out HotChocolate.Language.Visitors.ISyntaxVisitorAction? action) -> bool
override HotChocolate.Data.MongoDb.Filters.MongoDbEqualsOperationHandler.CanHandle(HotChocolate.Configuration.ITypeCompletionContext! context, HotChocolate.Data.Filters.IFilterInputTypeDefinition! typeDefinition, HotChocolate.Data.Filters.IFilterFieldDefinition! fieldDefinition) -> bool
override HotChocolate.Data.MongoDb.Filters.MongoDbEqualsOperationHandler.HandleOperation(HotChocolate.Data.MongoDb.Filters.MongoDbFilterVisitorContext! context, HotChocolate.Data.Filters.IFilterOperationField! field, HotChocolate.Language.IValueNode! value, object? parsedValue) -> HotChocolate.Data.MongoDb.MongoDbFilterDefinition!
override HotChocolate.Data.MongoDb.Filters.MongoDbFilterCombinator.TryCombineOperations(HotChocolate.Data.MongoDb.Filters.MongoDbFilterVisitorContext! context, System.Collections.Generic.Queue<HotChocolate.Data.MongoDb.MongoDbFilterDefinition!>! operations, HotChocolate.Data.Filters.FilterCombinator combinator, out HotChocolate.Data.MongoDb.MongoDbFilterDefinition! combined) -> bool
override HotChocolate.Data.MongoDb.Filters.MongoDbFilterProvider.CreateExecutor<TEntityType>(HotChocolate.NameString argumentName) -> HotChocolate.Resolvers.FieldMiddleware!
override HotChocolate.Data.MongoDb.Filters.MongoDbFilterVisitorContext.CreateScope() -> HotChocolate.Data.Filters.FilterScope<HotChocolate.Data.MongoDb.MongoDbFilterDefinition!>!
override HotChocolate.Data.MongoDb.Filters.MongoDbInOperationHandler.CanHandle(HotChocolate.Configuration.ITypeCompletionContext! context, HotChocolate.Data.Filters.IFilterInputTypeDefinition! typeDefinition, HotChocolate.Data.Filters.IFilterFieldDefinition! fieldDefinition) -> bool
override HotChocolate.Data.MongoDb.Filters.MongoDbInOperationHandler.HandleOperation(HotChocolate.Data.MongoDb.Filters.MongoDbFilterVisitorContext! context, HotChocolate.Data.Filters.IFilterOperationField! field, HotChocolate.Language.IValueNode! value, object? parsedValue) -> HotChocolate.Data.MongoDb.MongoDbFilterDefinition!
override HotChocolate.Data.MongoDb.Filters.MongoDbListAllOperationHandler.HandleListOperation(HotChocolate.Data.MongoDb.Filters.MongoDbFilterVisitorContext! context, HotChocolate.Data.Filters.IFilterField! field, HotChocolate.Data.MongoDb.Filters.MongoDbFilterScope! scope, string! path) -> HotChocolate.Data.MongoDb.MongoDbFilterDefinition!
override HotChocolate.Data.MongoDb.Filters.MongoDbListAllOperationHandler.Operation.get -> int
override HotChocolate.Data.MongoDb.Filters.MongoDbListAnyOperationHandler.CanHandle(HotChocolate.Configuration.ITypeCompletionContext! context, HotChocolate.Data.Filters.IFilterInputTypeDefinition! typeDefinition, HotChocolate.Data.Filters.IFilterFieldDefinition! fieldDefinition) -> bool
override HotChocolate.Data.MongoDb.Filters.MongoDbListAnyOperationHandler.HandleOperation(HotChocolate.Data.MongoDb.Filters.MongoDbFilterVisitorContext! context, HotChocolate.Data.Filters.IFilterOperationField! field, HotChocolate.Language.IValueNode! value, object? parsedValue) -> HotChocolate.Data.MongoDb.MongoDbFilterDefinition!
override HotChocolate.Data.MongoDb.Filters.MongoDbListNoneOperationHandler.HandleListOperation(HotChocolate.Data.MongoDb.Filters.MongoDbFilterVisitorContext! context, HotChocolate.Data.Filters.IFilterField! field, HotChocolate.Data.MongoDb.Filters.MongoDbFilterScope! scope, string! path) -> HotChocolate.Data.MongoDb.MongoDbFilterDefinition!
override HotChocolate.Data.MongoDb.Filters.MongoDbListNoneOperationHandler.Operation.get -> int
override HotChocolate.Data.MongoDb.Filters.MongoDbListOperationHandlerBase.CanHandle(HotChocolate.Configuration.ITypeCompletionContext! context, HotChocolate.Data.Filters.IFilterInputTypeDefinition! typeDefinition, HotChocolate.Data.Filters.IFilterFieldDefinition! fieldDefinition) -> bool
override HotChocolate.Data.MongoDb.Filters.MongoDbListOperationHandlerBase.TryHandleEnter(HotChocolate.Data.MongoDb.Filters.MongoDbFilterVisitorContext! context, HotChocolate.Data.Filters.IFilterField! field, HotChocolate.Language.ObjectFieldNode! node, out HotChocolate.Language.Visitors.ISyntaxVisitorAction? action) -> bool
override HotChocolate.Data.MongoDb.Filters.MongoDbListOperationHandlerBase.TryHandleLeave(HotChocolate.Data.MongoDb.Filters.MongoDbFilterVisitorContext! context, HotChocolate.Data.Filters.IFilterField! field, HotChocolate.Language.ObjectFieldNode! node, out HotChocolate.Language.Visitors.ISyntaxVisitorAction? action) -> bool
override HotChocolate.Data.MongoDb.Filters.MongoDbListSomeOperationHandler.HandleListOperation(HotChocolate.Data.MongoDb.Filters.MongoDbFilterVisitorContext! context, HotChocolate.Data.Filters.IFilterField! field, HotChocolate.Data.MongoDb.Filters.MongoDbFilterScope! scope, string! path) -> HotChocolate.Data.MongoDb.MongoDbFilterDefinition!
override HotChocolate.Data.MongoDb.Filters.MongoDbListSomeOperationHandler.Operation.get -> int
override HotChocolate.Data.MongoDb.Filters.MongoDbNotEqualsOperationHandler.CanHandle(HotChocolate.Configuration.ITypeCompletionContext! context, HotChocolate.Data.Filters.IFilterInputTypeDefinition! typeDefinition, HotChocolate.Data.Filters.IFilterFieldDefinition! fieldDefinition) -> bool
override HotChocolate.Data.MongoDb.Filters.MongoDbNotEqualsOperationHandler.HandleOperation(HotChocolate.Data.MongoDb.Filters.MongoDbFilterVisitorContext! context, HotChocolate.Data.Filters.IFilterOperationField! field, HotChocolate.Language.IValueNode! value, object? parsedValue) -> HotChocolate.Data.MongoDb.MongoDbFilterDefinition!
override HotChocolate.Data.MongoDb.Filters.MongoDbNotInOperationHandler.CanHandle(HotChocolate.Configuration.ITypeCompletionContext! context, HotChocolate.Data.Filters.IFilterInputTypeDefinition! typeDefinition, HotChocolate.Data.Filters.IFilterFieldDefinition! fieldDefinition) -> bool
override HotChocolate.Data.MongoDb.Filters.MongoDbNotInOperationHandler.HandleOperation(HotChocolate.Data.MongoDb.Filters.MongoDbFilterVisitorContext! context, HotChocolate.Data.Filters.IFilterOperationField! field, HotChocolate.Language.IValueNode! value, object? parsedValue) -> HotChocolate.Data.MongoDb.MongoDbFilterDefinition!
override HotChocolate.Data.MongoDb.Filters.MongoDbOperationHandlerBase.TryHandleOperation(HotChocolate.Data.MongoDb.Filters.MongoDbFilterVisitorContext! context, HotChocolate.Data.Filters.IFilterOperationField! field, HotChocolate.Language.ObjectFieldNode! node, out HotChocolate.Data.MongoDb.MongoDbFilterDefinition! result) -> bool
override HotChocolate.Data.MongoDb.Filters.MongoDbStringContainsHandler.HandleOperation(HotChocolate.Data.MongoDb.Filters.MongoDbFilterVisitorContext! context, HotChocolate.Data.Filters.IFilterOperationField! field, HotChocolate.Language.IValueNode! value, object? parsedValue) -> HotChocolate.Data.MongoDb.MongoDbFilterDefinition!
override HotChocolate.Data.MongoDb.Filters.MongoDbStringContainsHandler.Operation.get -> int
override HotChocolate.Data.MongoDb.Filters.MongoDbStringEndsWithHandler.HandleOperation(HotChocolate.Data.MongoDb.Filters.MongoDbFilterVisitorContext! context, HotChocolate.Data.Filters.IFilterOperationField! field, HotChocolate.Language.IValueNode! value, object? parsedValue) -> HotChocolate.Data.MongoDb.MongoDbFilterDefinition!
override HotChocolate.Data.MongoDb.Filters.MongoDbStringEndsWithHandler.Operation.get -> int
override HotChocolate.Data.MongoDb.Filters.MongoDbStringNotContainsHandler.HandleOperation(HotChocolate.Data.MongoDb.Filters.MongoDbFilterVisitorContext! context, HotChocolate.Data.Filters.IFilterOperationField! field, HotChocolate.Language.IValueNode! value, object? parsedValue) -> HotChocolate.Data.MongoDb.MongoDbFilterDefinition!
override HotChocolate.Data.MongoDb.Filters.MongoDbStringNotContainsHandler.Operation.get -> int
override HotChocolate.Data.MongoDb.Filters.MongoDbStringNotEndsWithHandler.HandleOperation(HotChocolate.Data.MongoDb.Filters.MongoDbFilterVisitorContext! context, HotChocolate.Data.Filters.IFilterOperationField! field, HotChocolate.Language.IValueNode! value, object? parsedValue) -> HotChocolate.Data.MongoDb.MongoDbFilterDefinition!
override HotChocolate.Data.MongoDb.Filters.MongoDbStringNotEndsWithHandler.Operation.get -> int
override HotChocolate.Data.MongoDb.Filters.MongoDbStringNotStartsWithHandler.HandleOperation(HotChocolate.Data.MongoDb.Filters.MongoDbFilterVisitorContext! context, HotChocolate.Data.Filters.IFilterOperationField! field, HotChocolate.Language.IValueNode! value, object? parsedValue) -> HotChocolate.Data.MongoDb.MongoDbFilterDefinition!
override HotChocolate.Data.MongoDb.Filters.MongoDbStringNotStartsWithHandler.Operation.get -> int
override HotChocolate.Data.MongoDb.Filters.MongoDbStringOperationHandler.CanHandle(HotChocolate.Configuration.ITypeCompletionContext! context, HotChocolate.Data.Filters.IFilterInputTypeDefinition! typeDefinition, HotChocolate.Data.Filters.IFilterFieldDefinition! fieldDefinition) -> bool
override HotChocolate.Data.MongoDb.Filters.MongoDbStringStartsWithHandler.HandleOperation(HotChocolate.Data.MongoDb.Filters.MongoDbFilterVisitorContext! context, HotChocolate.Data.Filters.IFilterOperationField! field, HotChocolate.Language.IValueNode! value, object? parsedValue) -> HotChocolate.Data.MongoDb.MongoDbFilterDefinition!
override HotChocolate.Data.MongoDb.Filters.MongoDbStringStartsWithHandler.Operation.get -> int
override HotChocolate.Data.MongoDb.MongoDbAggregateFluentExecutable<T>.FirstOrDefaultAsync(System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.ValueTask<object?>
override HotChocolate.Data.MongoDb.MongoDbAggregateFluentExecutable<T>.Print() -> string!
override HotChocolate.Data.MongoDb.MongoDbAggregateFluentExecutable<T>.SingleOrDefaultAsync(System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.ValueTask<object?>
override HotChocolate.Data.MongoDb.MongoDbAggregateFluentExecutable<T>.Source.get -> object!
override HotChocolate.Data.MongoDb.MongoDbAggregateFluentExecutable<T>.ToListAsync(System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.ValueTask<System.Collections.IList!>
override HotChocolate.Data.MongoDb.MongoDbCollectionExecutable<T>.FirstOrDefaultAsync(System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.ValueTask<object?>
override HotChocolate.Data.MongoDb.MongoDbCollectionExecutable<T>.Print() -> string!
override HotChocolate.Data.MongoDb.MongoDbCollectionExecutable<T>.SingleOrDefaultAsync(System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.ValueTask<object?>
override HotChocolate.Data.MongoDb.MongoDbCollectionExecutable<T>.Source.get -> object!
override HotChocolate.Data.MongoDb.MongoDbCollectionExecutable<T>.ToListAsync(System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.ValueTask<System.Collections.IList!>
override HotChocolate.Data.MongoDb.MongoDbFilterDefinition.Render(MongoDB.Bson.Serialization.IBsonSerializer<MongoDB.Bson.BsonDocument!>! documentSerializer, MongoDB.Bson.Serialization.IBsonSerializerRegistry! serializerRegistry) -> MongoDB.Bson.BsonDocument!
override HotChocolate.Data.MongoDb.MongoDbFindFluentExecutable<T>.FirstOrDefaultAsync(System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.ValueTask<object?>
override HotChocolate.Data.MongoDb.MongoDbFindFluentExecutable<T>.Print() -> string!
override HotChocolate.Data.MongoDb.MongoDbFindFluentExecutable<T>.SingleOrDefaultAsync(System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.ValueTask<object?>
override HotChocolate.Data.MongoDb.MongoDbFindFluentExecutable<T>.Source.get -> object!
override HotChocolate.Data.MongoDb.MongoDbFindFluentExecutable<T>.ToListAsync(System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.ValueTask<System.Collections.IList!>
override HotChocolate.Data.MongoDb.MongoDbProjectionDefinition.Render(MongoDB.Bson.Serialization.IBsonSerializer<MongoDB.Bson.BsonDocument!>! documentSerializer, MongoDB.Bson.Serialization.IBsonSerializerRegistry! serializerRegistry) -> MongoDB.Bson.BsonDocument!
override HotChocolate.Data.MongoDb.MongoDbProjectionProvider.CreateExecutor<TEntityType>() -> HotChocolate.Resolvers.FieldMiddleware!
override HotChocolate.Data.MongoDb.MongoDbSortDefinition.Render(MongoDB.Bson.Serialization.IBsonSerializer<MongoDB.Bson.BsonDocument!>! documentSerializer, MongoDB.Bson.Serialization.IBsonSerializerRegistry! serializerRegistry) -> MongoDB.Bson.BsonDocument!
override HotChocolate.Data.MongoDb.Paging.MongoDbCursorPagingProvider.CanHandle(HotChocolate.Internal.IExtendedType! source) -> bool
override HotChocolate.Data.MongoDb.Paging.MongoDbCursorPagingProvider.CreateHandler(HotChocolate.Internal.IExtendedType! source, HotChocolate.Types.Pagination.PagingOptions options) -> HotChocolate.Types.Pagination.CursorPagingHandler!
override HotChocolate.Data.MongoDb.Paging.MongoDbOffsetPagingProvider.CanHandle(HotChocolate.Internal.IExtendedType! source) -> bool
override HotChocolate.Data.MongoDb.Paging.MongoDbOffsetPagingProvider.CreateHandler(HotChocolate.Internal.IExtendedType! source, HotChocolate.Types.Pagination.PagingOptions options) -> HotChocolate.Types.Pagination.OffsetPagingHandler!
override HotChocolate.Data.MongoDb.Projections.MongoDbProjectionFieldHandler.CanHandle(HotChocolate.Execution.Processing.ISelection! selection) -> bool
override HotChocolate.Data.MongoDb.Projections.MongoDbProjectionFieldHandler.TryHandleEnter(HotChocolate.Data.MongoDb.MongoDbProjectionVisitorContext! context, HotChocolate.Execution.Processing.ISelection! selection, out HotChocolate.Data.Projections.ISelectionVisitorAction? action) -> bool
override HotChocolate.Data.MongoDb.Projections.MongoDbProjectionFieldHandler.TryHandleLeave(HotChocolate.Data.MongoDb.MongoDbProjectionVisitorContext! context, HotChocolate.Execution.Processing.ISelection! selection, out HotChocolate.Data.Projections.ISelectionVisitorAction? action) -> bool
override HotChocolate.Data.MongoDb.Projections.MongoDbProjectionHandlerBase.TryHandleEnter(HotChocolate.Data.MongoDb.MongoDbProjectionVisitorContext! context, HotChocolate.Execution.Processing.ISelection! selection, out HotChocolate.Data.Projections.ISelectionVisitorAction? action) -> bool
override HotChocolate.Data.MongoDb.Projections.MongoDbProjectionHandlerBase.TryHandleLeave(HotChocolate.Data.MongoDb.MongoDbProjectionVisitorContext! context, HotChocolate.Execution.Processing.ISelection! selection, out HotChocolate.Data.Projections.ISelectionVisitorAction? action) -> bool
override HotChocolate.Data.MongoDb.Projections.MongoDbProjectionScalarHandler.CanHandle(HotChocolate.Execution.Processing.ISelection! selection) -> bool
override HotChocolate.Data.MongoDb.Projections.MongoDbProjectionScalarHandler.TryHandleEnter(HotChocolate.Data.MongoDb.MongoDbProjectionVisitorContext! context, HotChocolate.Execution.Processing.ISelection! selection, out HotChocolate.Data.Projections.ISelectionVisitorAction? action) -> bool
override HotChocolate.Data.MongoDb.Sorting.MongoDbDefaultSortFieldHandler.CanHandle(HotChocolate.Configuration.ITypeCompletionContext! context, HotChocolate.Data.Sorting.ISortInputTypeDefinition! typeDefinition, HotChocolate.Data.Sorting.ISortFieldDefinition! fieldDefinition) -> bool
override HotChocolate.Data.MongoDb.Sorting.MongoDbDefaultSortFieldHandler.TryHandleEnter(HotChocolate.Data.MongoDb.Sorting.MongoDbSortVisitorContext! context, HotChocolate.Data.Sorting.ISortField! field, HotChocolate.Language.ObjectFieldNode! node, out HotChocolate.Language.Visitors.ISyntaxVisitorAction? action) -> bool
override HotChocolate.Data.MongoDb.Sorting.MongoDbDefaultSortFieldHandler.TryHandleLeave(HotChocolate.Data.MongoDb.Sorting.MongoDbSortVisitorContext! context, HotChocolate.Data.Sorting.ISortField! field, HotChocolate.Language.ObjectFieldNode! node, out HotChocolate.Language.Visitors.ISyntaxVisitorAction? action) -> bool
override HotChocolate.Data.MongoDb.Sorting.MongoDbSortOperationHandlerBase.CanHandle(HotChocolate.Configuration.ITypeCompletionContext! context, HotChocolate.Types.Descriptors.Definitions.EnumTypeDefinition! typeDefinition, HotChocolate.Data.Sorting.SortEnumValueDefinition! valueDefinition) -> bool
override HotChocolate.Data.MongoDb.Sorting.MongoDbSortOperationHandlerBase.TryHandleEnter(HotChocolate.Data.MongoDb.Sorting.MongoDbSortVisitorContext! context, HotChocolate.Data.Sorting.ISortField! field, HotChocolate.Data.Sorting.ISortEnumValue? sortValue, HotChocolate.Language.EnumValueNode! node, out HotChocolate.Language.Visitors.ISyntaxVisitorAction? action) -> bool
override HotChocolate.Data.MongoDb.Sorting.MongoDbSortProvider.CreateExecutor<TEntityType>(HotChocolate.NameString argumentName) -> HotChocolate.Resolvers.FieldMiddleware!
override HotChocolate.Types.UseMongoDbOffsetPagingAttribute.TryConfigure(HotChocolate.Types.Descriptors.IDescriptorContext! context, HotChocolate.Types.IDescriptor! descriptor, System.Reflection.ICustomAttributeProvider! element) -> void
static HotChocolate.Data.MongoDb.Filters.FilterConventionDescriptorMongoDbExtensions.AddDefaultMongoDbFieldHandlers(this HotChocolate.Data.Filters.IFilterProviderDescriptor<HotChocolate.Data.MongoDb.Filters.MongoDbFilterVisitorContext!>! descriptor) -> HotChocolate.Data.Filters.IFilterProviderDescriptor<HotChocolate.Data.MongoDb.Filters.MongoDbFilterVisitorContext!>!
static HotChocolate.Data.MongoDb.Filters.FilterConventionDescriptorMongoDbExtensions.UseMongoDbProvider(this HotChocolate.Data.Filters.IFilterConventionDescriptor! descriptor) -> HotChocolate.Data.Filters.IFilterConventionDescriptor!
static HotChocolate.Data.MongoDb.Filters.MongoDbFilterConventionDescriptorExtensions.AddDefaultMongoDbOperations(this HotChocolate.Data.Filters.IFilterConventionDescriptor! descriptor) -> HotChocolate.Data.Filters.IFilterConventionDescriptor!
static HotChocolate.Data.MongoDb.Filters.MongoDbFilterConventionDescriptorExtensions.AddMongoDbDefaults(this HotChocolate.Data.Filters.IFilterConventionDescriptor! descriptor) -> HotChocolate.Data.Filters.IFilterConventionDescriptor!
static HotChocolate.Data.MongoDb.Filters.MongoDbFilterConventionDescriptorExtensions.BindDefaultMongoDbTypes(this HotChocolate.Data.Filters.IFilterConventionDescriptor! descriptor) -> HotChocolate.Data.Filters.IFilterConventionDescriptor!
static HotChocolate.Data.MongoDb.Filters.MongoDbListOperationHandlerBase.CombineOperationsOfScope(HotChocolate.Data.MongoDb.Filters.MongoDbFilterScope! scope) -> HotChocolate.Data.MongoDb.MongoDbFilterDefinition!
static HotChocolate.Data.MongoDb.Filters.MongoFilterVisitorContextExtensions.GetMongoFilterScope(this HotChocolate.Data.MongoDb.Filters.MongoDbFilterVisitorContext! context) -> HotChocolate.Data.MongoDb.Filters.MongoDbFilterScope!
static HotChocolate.Data.MongoDb.Filters.MongoFilterVisitorContextExtensions.TryCreateQuery(this HotChocolate.Data.MongoDb.Filters.MongoDbFilterVisitorContext! context, out HotChocolate.Data.MongoDb.MongoDbFilterDefinition? query) -> bool
static HotChocolate.Data.MongoDb.MongoDbSchemaBuilderExtensions.AddMongoDbFiltering(this HotChocolate.ISchemaBuilder! builder, string? name = null) -> HotChocolate.ISchemaBuilder!
static HotChocolate.Data.MongoDb.MongoDbSchemaBuilderExtensions.AddMongoDbProjections(this HotChocolate.ISchemaBuilder! builder, string? name = null) -> HotChocolate.ISchemaBuilder!
static HotChocolate.Data.MongoDb.MongoDbSchemaBuilderExtensions.AddMongoDbSorting(this HotChocolate.ISchemaBuilder! builder, string? name = null) -> HotChocolate.ISchemaBuilder!
static HotChocolate.Data.MongoDbExecutableExtensions.AsExecutable<T>(this MongoDB.Driver.IAggregateFluent<T>! aggregate) -> HotChocolate.Data.MongoDb.MongoDbAggregateFluentExecutable<T>!
static HotChocolate.Data.MongoDbExecutableExtensions.AsExecutable<T>(this MongoDB.Driver.IFindFluent<T, T>! collection) -> HotChocolate.Data.MongoDb.MongoDbFindFluentExecutable<T>!
static HotChocolate.Data.MongoDbExecutableExtensions.AsExecutable<T>(this MongoDB.Driver.IMongoCollection<T>! collection) -> HotChocolate.Data.MongoDb.MongoDbCollectionExecutable<T>!
static HotChocolate.Data.MongoDbProjectionConventionDescriptorExtensions.AddMongoDbDefaults(this HotChocolate.Data.Projections.IProjectionConventionDescriptor! descriptor) -> HotChocolate.Data.Projections.IProjectionConventionDescriptor!
static HotChocolate.Data.MongoDbProjectionProviderDescriptorExtensions.AddMongoDbDefaults(this HotChocolate.Data.Projections.IProjectionProviderDescriptor! descriptor) -> HotChocolate.Data.Projections.IProjectionProviderDescriptor!
static HotChocolate.Data.MongoDbProjectionProviderDescriptorExtensions.RegisterMongoDbHandlers(this HotChocolate.Data.Projections.IProjectionProviderDescriptor! descriptor) -> HotChocolate.Data.Projections.IProjectionProviderDescriptor!
static HotChocolate.Data.MongoSortingConventionDescriptorExtensions.AddDefaultMongoDbOperations(this HotChocolate.Data.Sorting.ISortConventionDescriptor! descriptor) -> HotChocolate.Data.Sorting.ISortConventionDescriptor!
static HotChocolate.Data.MongoSortingConventionDescriptorExtensions.AddMongoDbDefaults(this HotChocolate.Data.Sorting.ISortConventionDescriptor! descriptor) -> HotChocolate.Data.Sorting.ISortConventionDescriptor!
static HotChocolate.Data.MongoSortingConventionDescriptorExtensions.BindDefaultMongoDbTypes(this HotChocolate.Data.Sorting.ISortConventionDescriptor! descriptor) -> HotChocolate.Data.Sorting.ISortConventionDescriptor!
static HotChocolate.Data.SortConventionDescriptorMongoExtensions.AddDefaultFieldHandlers(this HotChocolate.Data.Sorting.ISortProviderDescriptor<HotChocolate.Data.MongoDb.Sorting.MongoDbSortVisitorContext!>! descriptor) -> HotChocolate.Data.Sorting.ISortProviderDescriptor<HotChocolate.Data.MongoDb.Sorting.MongoDbSortVisitorContext!>!
static HotChocolate.Data.SortConventionDescriptorMongoExtensions.UseMongoDbProvider(this HotChocolate.Data.Sorting.ISortConventionDescriptor! descriptor) -> HotChocolate.Data.Sorting.ISortConventionDescriptor!
static HotChocolate.Types.MongoPagingObjectFieldDescriptorExtensions.UseMongoDbOffsetPaging(this HotChocolate.Types.IObjectFieldDescriptor! descriptor, System.Type? type = null, System.Type? entityType = null, HotChocolate.Types.Pagination.PagingOptions options = default(HotChocolate.Types.Pagination.PagingOptions)) -> HotChocolate.Types.IObjectFieldDescriptor!
static HotChocolate.Types.MongoPagingObjectFieldDescriptorExtensions.UseMongoDbOffsetPaging<TSchemaType, TEntity>(this HotChocolate.Types.IObjectFieldDescriptor! descriptor, HotChocolate.Types.Pagination.PagingOptions options = default(HotChocolate.Types.Pagination.PagingOptions)) -> HotChocolate.Types.IObjectFieldDescriptor!
static HotChocolate.Types.MongoPagingObjectFieldDescriptorExtensions.UseMongoDbOffsetPaging<TSchemaType>(this HotChocolate.Types.IObjectFieldDescriptor! descriptor, System.Type? entityType = null, HotChocolate.Types.Pagination.PagingOptions options = default(HotChocolate.Types.Pagination.PagingOptions)) -> HotChocolate.Types.IObjectFieldDescriptor!
static HotChocolate.Types.MongoPagingObjectFieldDescriptorExtensions.UseMongoDbPaging(this HotChocolate.Types.IObjectFieldDescriptor! descriptor, System.Type? type = null, System.Type? entityType = null, HotChocolate.Types.Pagination.PagingOptions options = default(HotChocolate.Types.Pagination.PagingOptions)) -> HotChocolate.Types.IObjectFieldDescriptor!
static HotChocolate.Types.MongoPagingObjectFieldDescriptorExtensions.UseMongoDbPaging<TSchemaType, TEntity>(this HotChocolate.Types.IObjectFieldDescriptor! descriptor, HotChocolate.Types.Pagination.PagingOptions options = default(HotChocolate.Types.Pagination.PagingOptions)) -> HotChocolate.Types.IObjectFieldDescriptor!
static HotChocolate.Types.MongoPagingObjectFieldDescriptorExtensions.UseMongoDbPaging<TSchemaType>(this HotChocolate.Types.IObjectFieldDescriptor! descriptor, System.Type? entityType = null, HotChocolate.Types.Pagination.PagingOptions options = default(HotChocolate.Types.Pagination.PagingOptions)) -> HotChocolate.Types.IObjectFieldDescriptor!
static Microsoft.Extensions.DependencyInjection.MongoDbDataRequestBuilderExtensions.AddMongoDbFiltering(this HotChocolate.Execution.Configuration.IRequestExecutorBuilder! builder, string? name = null) -> HotChocolate.Execution.Configuration.IRequestExecutorBuilder!
static Microsoft.Extensions.DependencyInjection.MongoDbDataRequestBuilderExtensions.AddMongoDbProjections(this HotChocolate.Execution.Configuration.IRequestExecutorBuilder! builder, string? name = null) -> HotChocolate.Execution.Configuration.IRequestExecutorBuilder!
static Microsoft.Extensions.DependencyInjection.MongoDbDataRequestBuilderExtensions.AddMongoDbSorting(this HotChocolate.Execution.Configuration.IRequestExecutorBuilder! builder, string? name = null) -> HotChocolate.Execution.Configuration.IRequestExecutorBuilder!
virtual HotChocolate.Data.MongoDb.Filters.MongoDbFilterProvider.Visitor.get -> HotChocolate.Data.Filters.FilterVisitor<HotChocolate.Data.MongoDb.Filters.MongoDbFilterVisitorContext!, HotChocolate.Data.MongoDb.MongoDbFilterDefinition!>!
virtual HotChocolate.Data.MongoDb.Sorting.MongoDbSortProvider.Visitor.get -> HotChocolate.Data.Sorting.SortVisitor<HotChocolate.Data.MongoDb.Sorting.MongoDbSortVisitorContext!, HotChocolate.Data.MongoDb.MongoDbSortDefinition!>!
