schema {
  query: Query
}

type Foo {
  id: ObjectId!
}

type Query {
  foo: Foo!
  loopback(objectId: ObjectId!): ObjectId!
}

"The `@specifiedBy` directive is used within the type system definition language to provide a URL for specifying the behavior of custom scalar definitions."
directive @specifiedBy("The specifiedBy URL points to a human-readable specification. This field will only read a result for scalar types." url: String!) on SCALAR

"The @tag directive is used to apply arbitrary string\nmetadata to a schema location. Custom tooling can use\nthis metadata during any step of the schema delivery flow,\nincluding composition, static analysis, and documentation.\n            \n\ninterface Book {\n  id: ID! @tag(name: \"your-value\")\n  title: String!\n  author: String!\n}"
directive @tag("The name of the tag." name: String!) repeatable on SCHEMA | SCALAR | OBJECT | FIELD_DEFINITION | ARGUMENT_DEFINITION | INTERFACE | UNION | ENUM | ENUM_VALUE | INPUT_OBJECT | INPUT_FIELD_DEFINITION

"The ObjectId scalar type represents a 12 byte ObjectId, represented as UTF-8 character sequences."
scalar ObjectId @specifiedBy(url: "https:\/\/docs.mongodb.com\/manual\/reference\/bson-types\/#objectid")