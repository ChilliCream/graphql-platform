schema {
  query: OutputQuery
}

type OutputQuery {
  int32: Bson!
  int64: Bson!
  dateTime: Bson!
  timestamp: Bson!
  objectId: Bson!
  binary: Bson!
  decimal: Bson!
  double: Bson!
  boolean: Bson!
  bsonArray: [Bson]!
  string: Bson!
  null: Bson
  document: Bson!
}

"The `@specifiedBy` directive is used within the type system definition language to provide a URL for specifying the behavior of custom scalar definitions."
directive @specifiedBy("The specifiedBy URL points to a human-readable specification. This field will only read a result for scalar types." url: String!) on SCALAR

"The @tag directive is used to apply arbitrary string\nmetadata to a schema location. Custom tooling can use\nthis metadata during any step of the schema delivery flow,\nincluding composition, static analysis, and documentation.\n            \n\ninterface Book {\n  id: ID! @tag(name: \"your-value\")\n  title: String!\n  author: String!\n}"
directive @tag("The name of the tag." name: String!) repeatable on SCHEMA | SCALAR | OBJECT | FIELD_DEFINITION | ARGUMENT_DEFINITION | INTERFACE | UNION | ENUM | ENUM_VALUE | INPUT_OBJECT | INPUT_FIELD_DEFINITION

"BSON is a binary format in which zero or more ordered key\/value pairs are stored as a single entity. The results are returned as JSON objects"
scalar Bson @specifiedBy(url: "https:\/\/bsonspec.org\/spec.html")