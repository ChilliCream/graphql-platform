override HotChocolate.Types.Spatial.GeoJsonInputType<T>.OnCompleteCreateInstance(HotChocolate.Configuration.ITypeCompletionContext! context, HotChocolate.Types.Descriptors.Definitions.InputObjectTypeDefinition! definition) -> System.Func<object?[]!, object!>!
override HotChocolate.Types.Spatial.GeoJsonInputType<T>.OnCompleteGetFieldValues(HotChocolate.Configuration.ITypeCompletionContext! context, HotChocolate.Types.Descriptors.Definitions.InputObjectTypeDefinition! definition) -> System.Action<object!, object?[]!>!
override HotChocolate.Types.Spatial.GeoJsonPositionType.IsInstanceOfType(HotChocolate.Language.IValueNode! valueSyntax) -> bool
override HotChocolate.Types.Spatial.GeoJsonPositionType.ParseLiteral(HotChocolate.Language.IValueNode! valueSyntax) -> object?
override HotChocolate.Types.Spatial.GeometryType.ParseLiteral(HotChocolate.Language.IValueNode! valueSyntax) -> object?
*REMOVED*HotChocolate.Types.Spatial.GeoJsonSerializationException
*REMOVED*HotChocolate.Types.Spatial.GeoJsonSerializationException.GeoJsonSerializationException(string! message, params object![]! args) -> void
*REMOVED*HotChocolate.Types.Spatial.GeoJsonSerializationException.GeoJsonSerializationException(string! message) -> void
*REMOVED*override HotChocolate.Types.Spatial.GeoJsonInputType<T>.IsInstanceOfType(HotChocolate.Language.IValueNode! literal) -> bool
*REMOVED*override HotChocolate.Types.Spatial.GeoJsonInputType<T>.IsInstanceOfType(object? value) -> bool
*REMOVED*override HotChocolate.Types.Spatial.GeoJsonInputType<T>.ParseLiteral(HotChocolate.Language.IValueNode! valueSyntax, bool withDefaults = true) -> object?
*REMOVED*override HotChocolate.Types.Spatial.GeoJsonInputType<T>.ParseValue(object? runtimeValue) -> HotChocolate.Language.IValueNode!
*REMOVED*override HotChocolate.Types.Spatial.GeoJsonInputType<T>.TryDeserialize(object? resultValue, out object? runtimeValue) -> bool
*REMOVED*override HotChocolate.Types.Spatial.GeoJsonInputType<T>.TrySerialize(object? runtimeValue, out object? resultValue) -> bool
*REMOVED*override HotChocolate.Types.Spatial.GeoJsonPositionType.IsInstanceOfType(HotChocolate.Language.IValueNode! valueSyntax) -> bool
*REMOVED*override HotChocolate.Types.Spatial.GeometryType.ParseLiteral(HotChocolate.Language.IValueNode! valueSyntax, bool withDefaults = true) -> object?
*REMOVED*override HotChocolate.Types.Spatial.GeoJsonPositionType.ParseLiteral(HotChocolate.Language.IValueNode! valueSyntax, bool withDefaults = true) -> object?