syntax = "proto3";

package hotchocolate.api.v1;

import "google/protobuf/struct.proto";

option csharp_namespace = "HotChocolate.AspNetCore.Grpc";

service GraphqlService {

    // GraphQL query
    rpc Query(QueryRequest) returns (stream QueryResponse) {}

    // GraphQL request batching - https://hotchocolate.io/docs/next/batching#request-batching
    rpc QueryBatch(QueryBatchRequest) returns (stream QueryResponse) {}

    // GraphQL mutation
    // TODO: Not implemented
    rpc Mutation(MutationRequest) returns (stream MutationResponse) {}

    // GraphQL subscription
    // TODO: Not implemented
    rpc Subscription(SubscriptionRequest) returns (stream SubscriptionResponse) {}
}

// GraphQL request
message QueryRequest {

    // The query document.
    string query = 1;

    // The name of the operation that shall be executed.
    string operation_name = 2;

    // A key under which a query document was safed on the server.
    string named_query = 3;

    // The variable values for this request.
    google.protobuf.Struct variables = 4;

    // Custom properties that can be passed to the execution engine context data.
    google.protobuf.Struct extensions = 5;

    // Operation Batching - Since we are sending in multiple operations, we specify the sequence
    //    More info: https://hotchocolate.io/docs/next/batching#operation-batching
    repeated string batch_operations = 6;
}

// GraphQL batch request
//   More info: https://hotchocolate.io/docs/next/batching#request-batching
message QueryBatchRequest {

    // Batch of GraphQL requests
    repeated QueryRequest operation = 1;
}

// GraphQL reponse
message QueryResponse {

    // GraphQL response Data
    //   All fields that can be returned by a query, mutation, stream or defer
    google.protobuf.Struct data = 1;

    // TODO: path can be a number or string
    // GraphQL Path
    google.protobuf.ListValue path = 2;

    // GraphQL Errors
    repeated Error errors = 3;

    // GraphQL Extensions
    //    Free-form extensions (starts with a map)
    google.protobuf.Struct extensions = 4;
}

// TODO: It is necessary to define
// GraphQL mutation request
message MutationRequest {

  // The mutation document.
  string mutation = 1;

}

// TODO: It is necessary to define
// GraphQL mutation response
message MutationResponse {

}

// TODO: It is necessary to define
// GraphQL mutation request
message SubscriptionRequest {

  // The mutation document.
  string subscription = 1;

}

// TODO: It is necessary to define
// GraphQL mutation response
message SubscriptionResponse {

}

// GraphQL Error
message Error {

    // Description of the error intended for the developer.
    string message = 1;

    // The source location for the error.
    repeated SourceLocation locations = 2;

    // Path to the `null` value justified by this error.
    google.protobuf.ListValue path = 3;

    // Free-form extensions (starts with a map)
    google.protobuf.Struct extensions = 4;
}

// The source location of an error.
message SourceLocation {

    // The line the error occurred at.
    int32 line = 1;

    // The column the error occurred at.
    int32 column = 2;
}
