#nullable enable
Microsoft.Extensions.DependencyInjection.InMemoryClientBuilderExtensions
Microsoft.Extensions.DependencyInjection.InMemoryClientFactoryServiceCollectionExtensions
static Microsoft.Extensions.DependencyInjection.InMemoryClientBuilderExtensions.ConfigureInMemoryClient(this StrawberryShake.Transport.InMemory.IInMemoryClientBuilder! builder, System.Action<StrawberryShake.Transport.InMemory.IInMemoryClient!>! configureClient) -> StrawberryShake.Transport.InMemory.IInMemoryClientBuilder!
static Microsoft.Extensions.DependencyInjection.InMemoryClientBuilderExtensions.ConfigureInMemoryClient(this StrawberryShake.Transport.InMemory.IInMemoryClientBuilder! builder, System.Action<System.IServiceProvider!, StrawberryShake.Transport.InMemory.IInMemoryClient!>! configureClient) -> StrawberryShake.Transport.InMemory.IInMemoryClientBuilder!
static Microsoft.Extensions.DependencyInjection.InMemoryClientBuilderExtensions.ConfigureInMemoryClient<T>(this StrawberryShake.IClientBuilder<T>! clientBuilder, System.Action<StrawberryShake.Transport.InMemory.IInMemoryClient!>! configureClient) -> StrawberryShake.IClientBuilder<T>!
static Microsoft.Extensions.DependencyInjection.InMemoryClientBuilderExtensions.ConfigureInMemoryClient<T>(this StrawberryShake.IClientBuilder<T>! clientBuilder, System.Action<System.IServiceProvider!, StrawberryShake.Transport.InMemory.IInMemoryClient!>! configureClient) -> StrawberryShake.IClientBuilder<T>!
static Microsoft.Extensions.DependencyInjection.InMemoryClientBuilderExtensions.ConfigureInMemoryClient<T>(this StrawberryShake.IClientBuilder<T>! clientBuilder) -> StrawberryShake.IClientBuilder<T>!
static Microsoft.Extensions.DependencyInjection.InMemoryClientBuilderExtensions.ConfigureInMemoryClientAsync(this StrawberryShake.Transport.InMemory.IInMemoryClientBuilder! builder, System.Func<StrawberryShake.Transport.InMemory.IInMemoryClient!, System.Threading.CancellationToken, System.Threading.Tasks.ValueTask>! configureClientAsync) -> StrawberryShake.Transport.InMemory.IInMemoryClientBuilder!
static Microsoft.Extensions.DependencyInjection.InMemoryClientBuilderExtensions.ConfigureInMemoryClientAsync(this StrawberryShake.Transport.InMemory.IInMemoryClientBuilder! builder, System.Func<System.IServiceProvider!, StrawberryShake.Transport.InMemory.IInMemoryClient!, System.Threading.CancellationToken, System.Threading.Tasks.ValueTask>! configureClient) -> StrawberryShake.Transport.InMemory.IInMemoryClientBuilder!
static Microsoft.Extensions.DependencyInjection.InMemoryClientBuilderExtensions.ConfigureInMemoryClientAsync<T>(this StrawberryShake.IClientBuilder<T>! clientBuilder, System.Func<StrawberryShake.Transport.InMemory.IInMemoryClient!, System.Threading.CancellationToken, System.Threading.Tasks.ValueTask>! configureClient) -> StrawberryShake.IClientBuilder<T>!
static Microsoft.Extensions.DependencyInjection.InMemoryClientBuilderExtensions.ConfigureInMemoryClientAsync<T>(this StrawberryShake.IClientBuilder<T>! clientBuilder, System.Func<System.IServiceProvider!, StrawberryShake.Transport.InMemory.IInMemoryClient!, System.Threading.CancellationToken, System.Threading.Tasks.ValueTask>! configureClient) -> StrawberryShake.IClientBuilder<T>!
static Microsoft.Extensions.DependencyInjection.InMemoryClientBuilderExtensions.ConfigureRequestInterceptor(this StrawberryShake.Transport.InMemory.IInMemoryClientBuilder! builder, StrawberryShake.Transport.InMemory.IInMemoryRequestInterceptor! interceptor) -> StrawberryShake.Transport.InMemory.IInMemoryClientBuilder!
static Microsoft.Extensions.DependencyInjection.InMemoryClientBuilderExtensions.ConfigureRequestInterceptor(this StrawberryShake.Transport.InMemory.IInMemoryClientBuilder! builder, System.Func<System.IServiceProvider!, StrawberryShake.Transport.InMemory.IInMemoryRequestInterceptor!>! factory) -> StrawberryShake.Transport.InMemory.IInMemoryClientBuilder!
static Microsoft.Extensions.DependencyInjection.InMemoryClientBuilderExtensions.ConfigureRequestInterceptor<TInterceptor>(this StrawberryShake.Transport.InMemory.IInMemoryClientBuilder! builder) -> StrawberryShake.Transport.InMemory.IInMemoryClientBuilder!
static Microsoft.Extensions.DependencyInjection.InMemoryClientFactoryServiceCollectionExtensions.AddInMemoryClient(this Microsoft.Extensions.DependencyInjection.IServiceCollection! services, string! name, System.Action<StrawberryShake.Transport.InMemory.IInMemoryClient!>! configureClient) -> StrawberryShake.Transport.InMemory.IInMemoryClientBuilder!
static Microsoft.Extensions.DependencyInjection.InMemoryClientFactoryServiceCollectionExtensions.AddInMemoryClient(this Microsoft.Extensions.DependencyInjection.IServiceCollection! services, string! name, System.Action<System.IServiceProvider!, StrawberryShake.Transport.InMemory.IInMemoryClient!>! configureClient) -> StrawberryShake.Transport.InMemory.IInMemoryClientBuilder!
static Microsoft.Extensions.DependencyInjection.InMemoryClientFactoryServiceCollectionExtensions.AddInMemoryClient(this Microsoft.Extensions.DependencyInjection.IServiceCollection! services, string! name) -> StrawberryShake.Transport.InMemory.IInMemoryClientBuilder!
static Microsoft.Extensions.DependencyInjection.InMemoryClientFactoryServiceCollectionExtensions.AddInMemoryClientAsync(this Microsoft.Extensions.DependencyInjection.IServiceCollection! services, string! name, System.Func<StrawberryShake.Transport.InMemory.IInMemoryClient!, System.Threading.CancellationToken, System.Threading.Tasks.ValueTask>! configureClientAsync) -> StrawberryShake.Transport.InMemory.IInMemoryClientBuilder!
static Microsoft.Extensions.DependencyInjection.InMemoryClientFactoryServiceCollectionExtensions.AddInMemoryClientAsync(this Microsoft.Extensions.DependencyInjection.IServiceCollection! services, string! name, System.Func<System.IServiceProvider!, StrawberryShake.Transport.InMemory.IInMemoryClient!, System.Threading.CancellationToken, System.Threading.Tasks.ValueTask>! configureClientAsync) -> StrawberryShake.Transport.InMemory.IInMemoryClientBuilder!
StrawberryShake.Transport.InMemory.ConfigureInMemoryClientAsync
StrawberryShake.Transport.InMemory.DefaultInMemoryClientFactory
StrawberryShake.Transport.InMemory.DefaultInMemoryClientFactory.CreateAsync(string! name, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.ValueTask<StrawberryShake.Transport.InMemory.IInMemoryClient!>
StrawberryShake.Transport.InMemory.DefaultInMemoryClientFactory.DefaultInMemoryClientFactory(HotChocolate.Execution.IRequestExecutorResolver! requestExecutorResolver, Microsoft.Extensions.Options.IOptionsMonitor<StrawberryShake.Transport.InMemory.InMemoryClientFactoryOptions!>! optionsMonitor) -> void
StrawberryShake.Transport.InMemory.IInMemoryClient
StrawberryShake.Transport.InMemory.IInMemoryClient.ExecuteAsync(StrawberryShake.OperationRequest! request, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.ValueTask<HotChocolate.Execution.IExecutionResult!>
StrawberryShake.Transport.InMemory.IInMemoryClient.Executor.get -> HotChocolate.Execution.IRequestExecutor?
StrawberryShake.Transport.InMemory.IInMemoryClient.Executor.set -> void
StrawberryShake.Transport.InMemory.IInMemoryClient.Name.get -> string!
StrawberryShake.Transport.InMemory.IInMemoryClient.RequestInterceptors.get -> System.Collections.Generic.IList<StrawberryShake.Transport.InMemory.IInMemoryRequestInterceptor!>!
StrawberryShake.Transport.InMemory.IInMemoryClient.SchemaName.get -> HotChocolate.NameString
StrawberryShake.Transport.InMemory.IInMemoryClient.SchemaName.set -> void
StrawberryShake.Transport.InMemory.IInMemoryClientBuilder
StrawberryShake.Transport.InMemory.IInMemoryClientBuilder.Name.get -> string!
StrawberryShake.Transport.InMemory.IInMemoryClientBuilder.Services.get -> Microsoft.Extensions.DependencyInjection.IServiceCollection!
StrawberryShake.Transport.InMemory.IInMemoryClientFactory
StrawberryShake.Transport.InMemory.IInMemoryClientFactory.CreateAsync(string! name, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.ValueTask<StrawberryShake.Transport.InMemory.IInMemoryClient!>
StrawberryShake.Transport.InMemory.IInMemoryConnection
StrawberryShake.Transport.InMemory.IInMemoryRequestInterceptor
StrawberryShake.Transport.InMemory.IInMemoryRequestInterceptor.OnCreateAsync(System.IServiceProvider! serviceProvider, StrawberryShake.OperationRequest! request, HotChocolate.Execution.IQueryRequestBuilder! requestBuilder, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.ValueTask
StrawberryShake.Transport.InMemory.InMemoryClient
StrawberryShake.Transport.InMemory.InMemoryClient.ExecuteAsync(StrawberryShake.OperationRequest! request, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.ValueTask<HotChocolate.Execution.IExecutionResult!>
StrawberryShake.Transport.InMemory.InMemoryClient.Executor.get -> HotChocolate.Execution.IRequestExecutor?
StrawberryShake.Transport.InMemory.InMemoryClient.Executor.set -> void
StrawberryShake.Transport.InMemory.InMemoryClient.InMemoryClient(string! name) -> void
StrawberryShake.Transport.InMemory.InMemoryClient.Name.get -> string!
StrawberryShake.Transport.InMemory.InMemoryClient.RequestInterceptors.get -> System.Collections.Generic.IList<StrawberryShake.Transport.InMemory.IInMemoryRequestInterceptor!>!
StrawberryShake.Transport.InMemory.InMemoryClient.SchemaName.get -> HotChocolate.NameString
StrawberryShake.Transport.InMemory.InMemoryClient.SchemaName.set -> void
StrawberryShake.Transport.InMemory.InMemoryClientFactoryOptions
StrawberryShake.Transport.InMemory.InMemoryClientFactoryOptions.InMemoryClientActions.get -> System.Collections.Generic.IList<StrawberryShake.Transport.InMemory.ConfigureInMemoryClientAsync!>!
StrawberryShake.Transport.InMemory.InMemoryClientFactoryOptions.InMemoryClientFactoryOptions() -> void
StrawberryShake.Transport.InMemory.InMemoryConnection
StrawberryShake.Transport.InMemory.InMemoryConnection.ExecuteAsync(StrawberryShake.OperationRequest! request, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Collections.Generic.IAsyncEnumerable<StrawberryShake.Response<System.Text.Json.JsonDocument!>!>!
StrawberryShake.Transport.InMemory.InMemoryConnection.InMemoryConnection(System.Func<System.Threading.CancellationToken, System.Threading.Tasks.ValueTask<StrawberryShake.Transport.InMemory.IInMemoryClient!>>! createClientAsync) -> void
