<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
  <dict>
    <key>name</key>
    <string>GraphQL</string>
    <key>scopeName</key>
    <string>source.graphql</string>
    <key>fileTypes</key>
    <array>
      <string>graphql</string>
      <string>graphqls</string>
      <string>gql</string>
      <string>graphcool</string>
    </array>
    <key>patterns</key>
    <array>
      <dict>
        <key>include</key>
        <string>#graphql</string>
      </dict>
    </array>
    <key>repository</key>
    <dict>
      <key>graphql</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#graphql-fragment-definition</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#graphql-type-interface</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#graphql-enum</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#graphql-scalar</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#graphql-union</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#graphql-schema</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#graphql-operation-def</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#graphql-comment</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#literal-quasi-embedded</string>
          </dict>
        </array>
      </dict>
      <key>graphql-operation-def</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#graphql-query-mutation-subscription</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#graphql-directive-definition</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#graphql-name</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#graphql-variable-definitions</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#graphql-directive</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#graphql-selection-set</string>
          </dict>
        </array>
      </dict>
      <key>graphql-fragment-definition</key>
      <dict>
        <key>name</key>
        <string>meta.fragment.graphql</string>
        <key>begin</key>
        <string>\s*(?:(\bfragment\b)\s*([_A-Za-z][_0-9A-Za-z]*)?\s*(?:(\bon\b)\s*([_A-Za-z][_0-9A-Za-z]*)))</string>
        <key>end</key>
        <string>(?&lt;=})</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.fragment.graphql</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>entity.name.fragment.graphql</string>
          </dict>
          <key>3</key>
          <dict>
            <key>name</key>
            <string>keyword.on.graphql</string>
          </dict>
          <key>4</key>
          <dict>
            <key>name</key>
            <string>support.type.graphql</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#graphql-comment</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#graphql-selection-set</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#graphql-directive</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#graphql-skip-newlines</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#literal-quasi-embedded</string>
          </dict>
        </array>
      </dict>
      <key>graphql-query-mutation-subscription</key>
      <dict>
        <key>match</key>
        <string>\s*\b(query|mutation|subscription)\b</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.operation.graphql</string>
          </dict>
        </dict>
      </dict>
      <key>graphql-type-interface</key>
      <dict>
        <key>name</key>
        <string>meta.type.interface.graphql</string>
        <key>begin</key>
        <string>\s*\b(?:(extend)?\b\s*\b(type)|(interface)|(input))\b\s*([_A-Za-z][_0-9A-Za-z]*)?</string>
        <key>end</key>
        <string>(?&lt;=})</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.extend.graphql</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>keyword.type.graphql</string>
          </dict>
          <key>3</key>
          <dict>
            <key>name</key>
            <string>keyword.interface.graphql</string>
          </dict>
          <key>4</key>
          <dict>
            <key>name</key>
            <string>keyword.input.graphql</string>
          </dict>
          <key>5</key>
          <dict>
            <key>name</key>
            <string>support.type.graphql</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>\s*\b(implements)\b\s*</string>
            <key>end</key>
            <string>\s*(?={)</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>keyword.implements.graphql.RRR</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>match</key>
                <string>\s*([_A-Za-z][_0-9A-Za-z]*)</string>
                <key>captures</key>
                <dict>
                  <key>1</key>
                  <dict>
                    <key>name</key>
                    <string>support.type.graphql.XXX</string>
                  </dict>
                </dict>
              </dict>
              <dict>
                <key>include</key>
                <string>#graphql-comma</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>include</key>
            <string>#graphql-directive</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#graphql-comment</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#graphql-type-object</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#literal-quasi-embedded</string>
          </dict>
        </array>
      </dict>
      <key>graphql-type-object</key>
      <dict>
        <key>name</key>
        <string>meta.type.object.graphql</string>
        <key>begin</key>
        <string>\s*({)</string>
        <key>end</key>
        <string>\s*(})</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>punctuation.operation.graphql</string>
          </dict>
        </dict>
        <key>endCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>punctuation.operation.graphql</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#graphql-object-type</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#graphql-comment</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#graphql-type-definition</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#literal-quasi-embedded</string>
          </dict>
        </array>
      </dict>
      <key>graphql-type-definition</key>
      <dict>
        <key>comment</key>
        <string>key (optionalArgs): Type</string>
        <key>begin</key>
        <string>\s*([_A-Za-z][_0-9A-Za-z]*)(?=\s*\(|:)</string>
        <key>end</key>
        <string>(?=\s*(([_A-Za-z][_0-9A-Za-z]*)\s*(\(|:)|(})))|\s*(,)</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>variable.graphql</string>
          </dict>
        </dict>
        <key>endCaptures</key>
        <dict>
          <key>5</key>
          <dict>
            <key>name</key>
            <string>punctuation.comma.graphql</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#graphql-comment</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#graphql-variable-definitions</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#graphql-type-object</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#graphql-colon</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#graphql-input-types</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#graphql-directive</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#literal-quasi-embedded</string>
          </dict>
        </array>
      </dict>
      <key>graphql-schema</key>
      <dict>
        <key>begin</key>
        <string>\s*\b(schema)\b</string>
        <key>end</key>
        <string>(?&lt;=})</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.schema.graphql</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>\s*({)</string>
            <key>end</key>
            <string>\s*(})</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.operation.graphql</string>
              </dict>
            </dict>
            <key>endCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.operation.graphql</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>begin</key>
                <string>\s*([_A-Za-z][_0-9A-Za-z]*)(?=\s*\(|:)</string>
                <key>end</key>
                <string>(?=\s*(([_A-Za-z][_0-9A-Za-z]*)\s*(\(|:)|(})))|\s*(,)</string>
                <key>beginCaptures</key>
                <dict>
                  <key>1</key>
                  <dict>
                    <key>name</key>
                    <string>variable.arguments.graphql</string>
                  </dict>
                </dict>
                <key>endCaptures</key>
                <dict>
                  <key>5</key>
                  <dict>
                    <key>name</key>
                    <string>punctuation.comma.graphql</string>
                  </dict>
                </dict>
                <key>patterns</key>
                <array>
                  <dict>
                    <key>match</key>
                    <string>\s*([_A-Za-z][_0-9A-Za-z]*)</string>
                    <key>captures</key>
                    <dict>
                      <key>1</key>
                      <dict>
                        <key>name</key>
                        <string>support.type.graphql</string>
                      </dict>
                    </dict>
                  </dict>
                  <dict>
                    <key>include</key>
                    <string>#graphql-colon</string>
                  </dict>
                  <dict>
                    <key>include</key>
                    <string>#graphql-comment</string>
                  </dict>
                  <dict>
                    <key>include</key>
                    <string>#graphql-skip-newlines</string>
                  </dict>
                </array>
              </dict>
              <dict>
                <key>include</key>
                <string>#graphql-comment</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#graphql-skip-newlines</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>include</key>
            <string>#graphql-comment</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#graphql-skip-newlines</string>
          </dict>
        </array>
      </dict>
      <key>graphql-directive-definition</key>
      <dict>
        <key>begin</key>
        <string>\s*(\bdirective\b)\s*(@[_A-Za-z][_0-9A-Za-z]*)</string>
        <key>end</key>
        <string>(?=.)</string>
        <key>applyEndPatternLast</key>
        <integer>1</integer>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.directive.graphql</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>entity.name.function.directive.graphql</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#graphql-variable-definitions</string>
          </dict>
          <dict>
            <key>begin</key>
            <string>\s*(\bon\b)\s*([_A-Za-z]*)</string>
            <key>end</key>
            <string>(?=.)</string>
            <key>applyEndPatternLast</key>
            <integer>1</integer>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>keyword.on.graphql</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>support.type.location.graphql</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#graphql-skip-newlines</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#graphql-comment</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#literal-quasi-embedded</string>
              </dict>
              <dict>
                <key>match</key>
                <string>\s*(\|)\s*([_A-Za-z]*)</string>
                <key>captures</key>
                <dict>
                  <key>2</key>
                  <dict>
                    <key>name</key>
                    <string>support.type.location.graphql</string>
                  </dict>
                </dict>
              </dict>
            </array>
          </dict>
          <dict>
            <key>include</key>
            <string>#graphql-skip-newlines</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#graphql-comment</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#literal-quasi-embedded</string>
          </dict>
        </array>
      </dict>
      <key>graphql-comment</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>comment</key>
            <string>need to prefix comment space with a scope else Atom's reflow cmd doesn't work</string>
            <key>name</key>
            <string>comment.line.graphql.js</string>
            <key>match</key>
            <string>(\s*)(#).*</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.whitespace.comment.leading.graphql</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>name</key>
            <string>comment.line.graphql.js</string>
            <key>begin</key>
            <string>(""")</string>
            <key>end</key>
            <string>(""")</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.whitespace.comment.leading.graphql</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>name</key>
            <string>comment.line.graphql.js</string>
            <key>begin</key>
            <string>(")</string>
            <key>end</key>
            <string>(")</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.whitespace.comment.leading.graphql</string>
              </dict>
            </dict>
          </dict>
        </array>
      </dict>
      <key>graphql-variable-definitions</key>
      <dict>
        <key>begin</key>
        <string>\s*(\()</string>
        <key>end</key>
        <string>\s*(\))</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>meta.brace.round.graphql</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#graphql-comment</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#graphql-variable-definition</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#literal-quasi-embedded</string>
          </dict>
        </array>
      </dict>
      <key>graphql-variable-definition</key>
      <dict>
        <key>comment</key>
        <string>variable: type = value,.... which may be a list</string>
        <key>name</key>
        <string>meta.variables.graphql</string>
        <key>begin</key>
        <string>\s*(\$?[_A-Za-z][_0-9A-Za-z]*)(?=\s*\(|:)</string>
        <key>end</key>
        <string>(?=\s*((\$?[_A-Za-z][_0-9A-Za-z]*)\s*(\(|:)|(}|\))))|\s*(,)</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>variable.parameter.graphql</string>
          </dict>
        </dict>
        <key>endCaptures</key>
        <dict>
          <key>5</key>
          <dict>
            <key>name</key>
            <string>punctuation.comma.graphql</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#graphql-comment</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#graphql-colon</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#graphql-input-types</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#graphql-variable-assignment</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#literal-quasi-embedded</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#graphql-skip-newlines</string>
          </dict>
        </array>
      </dict>
      <key>graphql-input-types</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#graphql-scalar-type</string>
          </dict>
          <dict>
            <key>match</key>
            <string>\s*([_A-Za-z][_0-9A-Za-z]*)(?:\s*(!))?</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>support.type.graphql</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>keyword.operator.nulltype.graphql</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>name</key>
            <string>meta.type.list.graphql</string>
            <key>begin</key>
            <string>\s*(\[)</string>
            <key>end</key>
            <string>\s*(\])(?:\s*(!))?</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>meta.brace.square.graphql</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>keyword.operator.nulltype.graphql</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#graphql-input-types</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#graphql-comment</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#graphql-comma</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#literal-quasi-embedded</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>graphql-scalar</key>
      <dict>
        <key>match</key>
        <string>\s*\b(scalar)\b\s*([_A-Za-z][_0-9A-Za-z]*)</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.scalar.graphql</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>entity.scalar.graphql</string>
          </dict>
        </dict>
      </dict>
      <key>graphql-scalar-type</key>
      <dict>
        <key>match</key>
        <string>\s*\b(Int|Float|String|Boolean|ID)\b(?:\s*(!))?</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>support.type.builtin.graphql</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>keyword.operator.nulltype.graphql</string>
          </dict>
        </dict>
      </dict>
      <key>graphql-variable-assignment</key>
      <dict>
        <key>begin</key>
        <string>\s(=)</string>
        <key>end</key>
        <string>(?=[\n,)])</string>
        <key>applyEndPatternLast</key>
        <integer>1</integer>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>punctuation.assignment.graphql</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#graphql-value</string>
          </dict>
        </array>
      </dict>
      <key>graphql-comma</key>
      <dict>
        <key>match</key>
        <string>\s*(,)</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>punctuation.comma.graphql</string>
          </dict>
        </dict>
      </dict>
      <key>graphql-colon</key>
      <dict>
        <key>match</key>
        <string>\s*(:)</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>punctuation.colon.graphql</string>
          </dict>
        </dict>
      </dict>
      <key>graphql-union-mark</key>
      <dict>
        <key>match</key>
        <string>\s*(\|)</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>punctuation.union.graphql</string>
          </dict>
        </dict>
      </dict>
      <key>graphql-name</key>
      <dict>
        <key>match</key>
        <string>\s*([_A-Za-z][_0-9A-Za-z]*)</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>entity.name.function.graphql</string>
          </dict>
        </dict>
      </dict>
      <key>graphql-directive</key>
      <dict>
        <key>begin</key>
        <string>\s*((@)\s*([_A-Za-z][_0-9A-Za-z]*))</string>
        <key>end</key>
        <string>(?=.)</string>
        <key>applyEndPatternLast</key>
        <integer>1</integer>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>entity.name.function.directive.graphql</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#graphql-arguments</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#graphql-comment</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#literal-quasi-embedded</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#graphql-skip-newlines</string>
          </dict>
        </array>
      </dict>
      <key>graphql-selection-set</key>
      <dict>
        <key>name</key>
        <string>meta.selectionset.graphql</string>
        <key>begin</key>
        <string>\s*({)</string>
        <key>end</key>
        <string>\s*(})</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>punctuation.operation.graphql</string>
          </dict>
        </dict>
        <key>endCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>punctuation.operation.graphql</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#graphql-field</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#graphql-fragment-spread</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#graphql-inline-fragment</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#graphql-comma</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#graphql-comment</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#native-interpolation</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#literal-quasi-embedded</string>
          </dict>
        </array>
      </dict>
      <key>graphql-field</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>match</key>
            <string>\s*([_A-Za-z][_0-9A-Za-z]*)\s*(:)</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>string.unquoted.alias.graphql</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.colon.graphql</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>match</key>
            <string>\s*([_A-Za-z][_0-9A-Za-z]*)</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>variable.graphql</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>include</key>
            <string>#graphql-arguments</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#graphql-directive</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#graphql-selection-set</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#literal-quasi-embedded</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#graphql-skip-newlines</string>
          </dict>
        </array>
      </dict>
      <key>graphql-fragment-spread</key>
      <dict>
        <key>begin</key>
        <string>\s*(\.\.\.)\s*(?!\bon\b)([_A-Za-z][_0-9A-Za-z]*)</string>
        <key>end</key>
        <string>(?=.)</string>
        <key>applyEndPatternLast</key>
        <integer>1</integer>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.operator.spread.graphql</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>variable.fragment.graphql</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#graphql-comment</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#graphql-selection-set</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#graphql-directive</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#literal-quasi-embedded</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#graphql-skip-newlines</string>
          </dict>
        </array>
      </dict>
      <key>graphql-inline-fragment</key>
      <dict>
        <key>begin</key>
        <string>\s*(\.\.\.)\s*(?:(\bon\b)\s*([_A-Za-z][_0-9A-Za-z]*))?</string>
        <key>end</key>
        <string>(?=.)</string>
        <key>applyEndPatternLast</key>
        <integer>1</integer>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.operator.spread.graphql</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>keyword.on.graphql</string>
          </dict>
          <key>3</key>
          <dict>
            <key>name</key>
            <string>support.type.graphql</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#graphql-comment</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#graphql-selection-set</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#graphql-directive</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#graphql-skip-newlines</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#literal-quasi-embedded</string>
          </dict>
        </array>
      </dict>
      <key>graphql-arguments</key>
      <dict>
        <key>name</key>
        <string>meta.arguments.graphql</string>
        <key>begin</key>
        <string>\s*(\()</string>
        <key>end</key>
        <string>\s*(\))</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>meta.brace.round.directive.graphql</string>
          </dict>
        </dict>
        <key>endCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>meta.brace.round.directive.graphql</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#graphql-comment</string>
          </dict>
          <dict>
            <key>begin</key>
            <string>\s*([_A-Za-z][_0-9A-Za-z]*)(?:\s*(:))</string>
            <key>end</key>
            <string>(?=\s*(?:(?:([_A-Za-z][_0-9A-Za-z]*)\s*(:))|\)))|\s*(,)</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>variable.parameter.graphql</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.colon.graphql</string>
              </dict>
            </dict>
            <key>endCaptures</key>
            <dict>
              <key>3</key>
              <dict>
                <key>name</key>
                <string>punctuation.comma.graphql</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#graphql-value</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#graphql-comment</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#graphql-skip-newlines</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>include</key>
            <string>#literal-quasi-embedded</string>
          </dict>
        </array>
      </dict>
      <key>graphql-variable-name</key>
      <dict>
        <key>match</key>
        <string>\s*(\$[_A-Za-z][_0-9A-Za-z]*)</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>variable.graphql</string>
          </dict>
        </dict>
      </dict>
      <key>graphql-float-value</key>
      <dict>
        <key>match</key>
        <string>\s*(-?(0|[1-9][0-9]*)(\.[0-9]+)?((e|E)(\+|-)?[0-9]+)?)</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>constant.numeric.float.graphql</string>
          </dict>
        </dict>
      </dict>
      <key>graphql-boolean-value</key>
      <dict>
        <key>match</key>
        <string>\s*\b(true|false)\b</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>constant.language.boolean.graphql</string>
          </dict>
        </dict>
      </dict>
      <key>graphql-null-value</key>
      <dict>
        <key>match</key>
        <string>\s*\b(null)\b</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>constant.language.null.graphql</string>
          </dict>
        </dict>
      </dict>
      <key>graphql-string-value</key>
      <dict>
        <key>contentName</key>
        <string>string.quoted.double.graphql</string>
        <key>begin</key>
        <string>\s*+(("))</string>
        <key>end</key>
        <string>[^\S\n]*+(?:(("))|(\n))</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>string.quoted.double.graphql</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.string.begin.graphql</string>
          </dict>
        </dict>
        <key>endCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>string.quoted.double.graphql</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.string.end.graphql</string>
          </dict>
          <key>3</key>
          <dict>
            <key>name</key>
            <string>invalid.illegal.newline.graphql</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#graphql-string-content</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#literal-quasi-embedded</string>
          </dict>
        </array>
      </dict>
      <key>graphql-string-content</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>constant.character.escape.graphql</string>
            <key>match</key>
            <string>\\[/'"\\nrtbf]</string>
          </dict>
          <dict>
            <key>name</key>
            <string>constant.character.escape.graphql</string>
            <key>match</key>
            <string>\\u([0-9a-fA-F]{4})</string>
          </dict>
        </array>
      </dict>
      <key>graphql-enum</key>
      <dict>
        <key>name</key>
        <string>meta.enum.graphql</string>
        <key>begin</key>
        <string>\s*+\b(enum)\b\s*([_A-Za-z][_0-9A-Za-z]*)</string>
        <key>end</key>
        <string>(?&lt;=})</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.enum.graphql</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>support.type.enum.graphql</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>meta.type.object.graphql</string>
            <key>begin</key>
            <string>\s*({)</string>
            <key>end</key>
            <string>\s*(})</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.operation.graphql</string>
              </dict>
            </dict>
            <key>endCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.operation.graphql</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#graphql-object-type</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#graphql-comment</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#graphql-enum-value</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#literal-quasi-embedded</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>graphql-enum-value</key>
      <dict>
        <key>name</key>
        <string>constant.character.enum.graphql</string>
        <key>match</key>
        <string>\s*(?!=\b(true|false|null)\b)([_A-Za-z][_0-9A-Za-z]*)</string>
      </dict>
      <key>graphql-value</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#graphql-variable-name</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#graphql-float-value</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#graphql-string-value</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#graphql-boolean-value</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#graphql-null-value</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#graphql-enum-value</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#graphql-list-value</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#graphql-object-value</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#graphql-comment</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#literal-quasi-embedded</string>
          </dict>
        </array>
      </dict>
      <key>graphql-list-value</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>meta.listvalues.graphql</string>
            <key>begin</key>
            <string>\s*+(\[)</string>
            <key>end</key>
            <string>\s*(\])</string>
            <key>endCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>meta.brace.square.graphql</string>
              </dict>
            </dict>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>meta.brace.square.graphql</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#graphql-value</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>graphql-object-value</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>meta.objectvalues.graphql</string>
            <key>begin</key>
            <string>\s*+({)</string>
            <key>end</key>
            <string>\s*(})</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>meta.brace.curly.graphql</string>
              </dict>
            </dict>
            <key>endCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>meta.brace.curly.graphql</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#graphql-object-field</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#graphql-value</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>graphql-object-field</key>
      <dict>
        <key>match</key>
        <string>\s*(([_A-Za-z][_0-9A-Za-z]*))\s*(:)</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>constant.object.key.graphql</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>string.unquoted.graphql</string>
          </dict>
          <key>3</key>
          <dict>
            <key>name</key>
            <string>punctuation.graphql</string>
          </dict>
        </dict>
      </dict>
      <key>graphql-union</key>
      <dict>
        <key>begin</key>
        <string>\s*\b(union)\b\s*([_A-Za-z][_0-9A-Za-z]*)</string>
        <key>end</key>
        <string>(?=.)</string>
        <key>applyEndPatternLast</key>
        <integer>1</integer>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.union.graphql</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>support.type.graphql</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>\s*(=)\s*([_A-Za-z][_0-9A-Za-z]*)</string>
            <key>end</key>
            <string>(?=.)</string>
            <key>applyEndPatternLast</key>
            <integer>1</integer>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.assignment.graphql</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>support.type.graphql</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#graphql-skip-newlines</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#graphql-comment</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#literal-quasi-embedded</string>
              </dict>
              <dict>
                <key>match</key>
                <string>\s*(\|)\s*([_A-Za-z][_0-9A-Za-z]*)</string>
                <key>captures</key>
                <dict>
                  <key>1</key>
                  <dict>
                    <key>name</key>
                    <string>punctuation.or.graphql</string>
                  </dict>
                  <key>2</key>
                  <dict>
                    <key>name</key>
                    <string>support.type.graphql</string>
                  </dict>
                </dict>
              </dict>
            </array>
          </dict>
          <dict>
            <key>include</key>
            <string>#graphql-skip-newlines</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#graphql-comment</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#literal-quasi-embedded</string>
          </dict>
        </array>
      </dict>
      <key>native-interpolation</key>
      <dict>
        <key>name</key>
        <string>native.interpolation</string>
        <key>begin</key>
        <string>\s*(\${)</string>
        <key>end</key>
        <string>(})</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.other.substitution.begin</string>
          </dict>
        </dict>
        <key>endCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.other.substitution.end</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>source.js</string>
          </dict>
          <dict>
            <key>include</key>
            <string>source.ts</string>
          </dict>
          <dict>
            <key>include</key>
            <string>source.jsx</string>
          </dict>
          <dict>
            <key>include</key>
            <string>source.tsx</string>
          </dict>
        </array>
      </dict>
      <key>graphql-skip-newlines</key>
      <dict>
        <key>match</key>
        <string>\s*\n</string>
      </dict>
    </dict>
  </dict>
</plist>
