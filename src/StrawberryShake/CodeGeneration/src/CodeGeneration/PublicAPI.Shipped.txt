#nullable enable
abstract StrawberryShake.CodeGeneration.CodeGenerator<TDescriptor>.Generate(TDescriptor descriptor, StrawberryShake.CodeGeneration.CSharpSyntaxGeneratorSettings! settings, StrawberryShake.CodeGeneration.CodeWriter! writer, out string! fileName, out string? path, out string! ns) -> void
abstract StrawberryShake.CodeGeneration.CSharpSyntaxGenerator<TDescriptor>.Generate(TDescriptor descriptor, StrawberryShake.CodeGeneration.CSharpSyntaxGeneratorSettings! settings) -> StrawberryShake.CodeGeneration.CSharpSyntaxGeneratorResult!
const StrawberryShake.CodeGeneration.BuiltInScalarNames.Any = "Any" -> string!
const StrawberryShake.CodeGeneration.BuiltInScalarNames.Boolean = "Boolean" -> string!
const StrawberryShake.CodeGeneration.BuiltInScalarNames.Byte = "Byte" -> string!
const StrawberryShake.CodeGeneration.BuiltInScalarNames.ByteArray = "ByteArray" -> string!
const StrawberryShake.CodeGeneration.BuiltInScalarNames.Date = "Date" -> string!
const StrawberryShake.CodeGeneration.BuiltInScalarNames.DateTime = "DateTime" -> string!
const StrawberryShake.CodeGeneration.BuiltInScalarNames.Decimal = "Decimal" -> string!
const StrawberryShake.CodeGeneration.BuiltInScalarNames.Float = "Float" -> string!
const StrawberryShake.CodeGeneration.BuiltInScalarNames.ID = "ID" -> string!
const StrawberryShake.CodeGeneration.BuiltInScalarNames.Int = "Int" -> string!
const StrawberryShake.CodeGeneration.BuiltInScalarNames.Long = "Long" -> string!
const StrawberryShake.CodeGeneration.BuiltInScalarNames.MultiplierPath = "MultiplierPath" -> string!
const StrawberryShake.CodeGeneration.BuiltInScalarNames.Name = "Name" -> string!
const StrawberryShake.CodeGeneration.BuiltInScalarNames.Short = "Short" -> string!
const StrawberryShake.CodeGeneration.BuiltInScalarNames.String = "String" -> string!
const StrawberryShake.CodeGeneration.BuiltInScalarNames.TimeSpan = "TimeSpan" -> string!
const StrawberryShake.CodeGeneration.BuiltInScalarNames.Url = "Url" -> string!
const StrawberryShake.CodeGeneration.BuiltInScalarNames.Uuid = "Uuid" -> string!
const StrawberryShake.CodeGeneration.CodeGenerationErrorCodes.SchemaValidationError = "SS0002" -> string!
const StrawberryShake.CodeGeneration.CodeGenerationErrorCodes.SyntaxError = "SS0001" -> string!
const StrawberryShake.CodeGeneration.CodeGenerationErrorCodes.UnionTypeDataEntityMixed = "SS0013" -> string!
const StrawberryShake.CodeGeneration.ErrorHelper.FileExtensionKey = "file" -> string!
const StrawberryShake.CodeGeneration.ErrorHelper.TitleExtensionKey = "title" -> string!
const StrawberryShake.CodeGeneration.TransportProfile.DefaultProfileName = "Default" -> string!
const StrawberryShake.CodeGeneration.TypeNames.AddProtocol = "global::Microsoft.Extensions.DependencyInjection.WebSocketClientFactoryServiceCollectionExtensions.AddProtocol" -> string!
const StrawberryShake.CodeGeneration.TypeNames.AddSingleton = "global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton" -> string!
const StrawberryShake.CodeGeneration.TypeNames.ArgumentException = "global::System.ArgumentException" -> string!
const StrawberryShake.CodeGeneration.TypeNames.ArgumentNullException = "global::System.ArgumentNullException" -> string!
const StrawberryShake.CodeGeneration.TypeNames.ArgumentOutOfRangeException = "global::System.ArgumentOutOfRangeException" -> string!
const StrawberryShake.CodeGeneration.TypeNames.Array = "global::System.Array" -> string!
const StrawberryShake.CodeGeneration.TypeNames.ArrayWriter = "global::StrawberryShake.Internal.ArrayWriter" -> string!
const StrawberryShake.CodeGeneration.TypeNames.Boolean = "global::System.Boolean" -> string!
const StrawberryShake.CodeGeneration.TypeNames.BooleanSerializer = "global::StrawberryShake.Serialization.BooleanSerializer" -> string!
const StrawberryShake.CodeGeneration.TypeNames.BuildServiceProvider = "global::Microsoft.Extensions.DependencyInjection.ServiceCollectionContainerBuilderExtensions.BuildServiceProvider" -> string!
const StrawberryShake.CodeGeneration.TypeNames.Byte = "global::System.Byte" -> string!
const StrawberryShake.CodeGeneration.TypeNames.ByteArray = "global::System.Byte[]" -> string!
const StrawberryShake.CodeGeneration.TypeNames.ByteArraySerializer = "global::StrawberryShake.Serialization.ByteArraySerializer" -> string!
const StrawberryShake.CodeGeneration.TypeNames.ByteSerializer = "global::StrawberryShake.Serialization.ByteSerializer" -> string!
const StrawberryShake.CodeGeneration.TypeNames.CancellationToken = "global::System.Threading.CancellationToken" -> string!
const StrawberryShake.CodeGeneration.TypeNames.ClientBuilder = "global::StrawberryShake.ClientBuilder" -> string!
const StrawberryShake.CodeGeneration.TypeNames.ClientError = "global::StrawberryShake.ClientError" -> string!
const StrawberryShake.CodeGeneration.TypeNames.Concat = "global::System.Linq.Enumerable.Concat" -> string!
const StrawberryShake.CodeGeneration.TypeNames.DateSerializer = "global::StrawberryShake.Serialization.DateSerializer" -> string!
const StrawberryShake.CodeGeneration.TypeNames.DateTime = "global::System.DateTime" -> string!
const StrawberryShake.CodeGeneration.TypeNames.DateTimeOffset = "global::System.DateTimeOffset" -> string!
const StrawberryShake.CodeGeneration.TypeNames.DateTimeSerializer = "global::StrawberryShake.Serialization.DateTimeSerializer" -> string!
const StrawberryShake.CodeGeneration.TypeNames.Decimal = "global::System.Decimal" -> string!
const StrawberryShake.CodeGeneration.TypeNames.DecimalSerializer = "global::StrawberryShake.Serialization.DecimalSerializer" -> string!
const StrawberryShake.CodeGeneration.TypeNames.DependencyInjectionExtensions = "global::Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions." -> string!
const StrawberryShake.CodeGeneration.TypeNames.DependencyInjectionNamespace = "Microsoft.Extensions.DependencyInjection" -> string!
const StrawberryShake.CodeGeneration.TypeNames.Dictionary = "global::System.Collections.Generic.Dictionary" -> string!
const StrawberryShake.CodeGeneration.TypeNames.DocumentHash = "global::StrawberryShake.DocumentHash" -> string!
const StrawberryShake.CodeGeneration.TypeNames.Double = "global::System.Double" -> string!
const StrawberryShake.CodeGeneration.TypeNames.EncodingUtf8 = "global::System.Text.Encoding.UTF8" -> string!
const StrawberryShake.CodeGeneration.TypeNames.EntityId = "global::StrawberryShake.EntityId" -> string!
const StrawberryShake.CodeGeneration.TypeNames.EntityIdOrData = "global::StrawberryShake.EntityIdOrData" -> string!
const StrawberryShake.CodeGeneration.TypeNames.EntityStore = "global::StrawberryShake.EntityStore" -> string!
const StrawberryShake.CodeGeneration.TypeNames.Exception = "global::System.Exception" -> string!
const StrawberryShake.CodeGeneration.TypeNames.Execute = "ExecuteAsync" -> string!
const StrawberryShake.CodeGeneration.TypeNames.ExecutionStrategy = "global::StrawberryShake.ExecutionStrategy" -> string!
const StrawberryShake.CodeGeneration.TypeNames.FloatSerializer = "global::StrawberryShake.Serialization.FloatSerializer" -> string!
const StrawberryShake.CodeGeneration.TypeNames.Func = "global::System.Func" -> string!
const StrawberryShake.CodeGeneration.TypeNames.GenericCollectionsNamespace = "global::System.Collections.Generic." -> string!
const StrawberryShake.CodeGeneration.TypeNames.GetPropertyOrNull = "global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull" -> string!
const StrawberryShake.CodeGeneration.TypeNames.GetRequiredService = "global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService" -> string!
const StrawberryShake.CodeGeneration.TypeNames.GlobalDependencyInjectionNamespace = "global::Microsoft.Extensions.DependencyInjection." -> string!
const StrawberryShake.CodeGeneration.TypeNames.GraphQLClientException = "global::StrawberryShake.GraphQLClientException" -> string!
const StrawberryShake.CodeGeneration.TypeNames.GraphQLWebSocketProtocolFactory = "global::StrawberryShake.Transport.WebSockets.Protocol.GraphQLWebSocketProtocolFactory" -> string!
const StrawberryShake.CodeGeneration.TypeNames.Guid = "global::System.Guid" -> string!
const StrawberryShake.CodeGeneration.TypeNames.HashSet = "global::System.Collections.Generic.HashSet" -> string!
const StrawberryShake.CodeGeneration.TypeNames.HttpConnection = "global::StrawberryShake.Transport.Http.HttpConnection" -> string!
const StrawberryShake.CodeGeneration.TypeNames.IClientBuilder = "global::StrawberryShake.IClientBuilder" -> string!
const StrawberryShake.CodeGeneration.TypeNames.IClientError = "global::StrawberryShake.IClientError" -> string!
const StrawberryShake.CodeGeneration.TypeNames.IConnection = "global::StrawberryShake.IConnection" -> string!
const StrawberryShake.CodeGeneration.TypeNames.IDocument = "global::StrawberryShake.IDocument" -> string!
const StrawberryShake.CodeGeneration.TypeNames.IdSerializer = "global::StrawberryShake.Serialization.IdSerializer" -> string!
const StrawberryShake.CodeGeneration.TypeNames.IEntityIdSerializer = "global::StrawberryShake.IEntityIdSerializer" -> string!
const StrawberryShake.CodeGeneration.TypeNames.IEntityMapper = "global::StrawberryShake.IEntityMapper" -> string!
const StrawberryShake.CodeGeneration.TypeNames.IEntityStore = "global::StrawberryShake.IEntityStore" -> string!
const StrawberryShake.CodeGeneration.TypeNames.IEntityStoreSnapshot = "global::StrawberryShake.IEntityStoreSnapshot" -> string!
const StrawberryShake.CodeGeneration.TypeNames.IEntityStoreUpdateSession = "global::StrawberryShake.IEntityStoreUpdateSession" -> string!
const StrawberryShake.CodeGeneration.TypeNames.IEntityUpdateSession = "global::StrawberryShake.IEntityUpdateSession" -> string!
const StrawberryShake.CodeGeneration.TypeNames.IEntityUpdateSession_Version = "Version" -> string!
const StrawberryShake.CodeGeneration.TypeNames.IEnumerable = "global::System.Collections.Generic.IEnumerable" -> string!
const StrawberryShake.CodeGeneration.TypeNames.IEquatable = "global::System.IEquatable" -> string!
const StrawberryShake.CodeGeneration.TypeNames.IHttpClientFactory = "global::System.Net.Http.IHttpClientFactory" -> string!
const StrawberryShake.CodeGeneration.TypeNames.IHttpConnection = "global::StrawberryShake.Transport.Http.IHttpConnection" -> string!
const StrawberryShake.CodeGeneration.TypeNames.IInMemoryClientFactory = "global::StrawberryShake.Transport.InMemory.IInMemoryClientFactory" -> string!
const StrawberryShake.CodeGeneration.TypeNames.IInMemoryConnection = "global::StrawberryShake.Transport.InMemory.IInMemoryConnection" -> string!
const StrawberryShake.CodeGeneration.TypeNames.IInputObjectFormatter = "global::StrawberryShake.Serialization.IInputObjectFormatter" -> string!
const StrawberryShake.CodeGeneration.TypeNames.IInputValueFormatter = "global::StrawberryShake.Serialization.IInputValueFormatter" -> string!
const StrawberryShake.CodeGeneration.TypeNames.ILeafValueParser = "global::StrawberryShake.Serialization.ILeafValueParser" -> string!
const StrawberryShake.CodeGeneration.TypeNames.IList = "global::System.Collections.Generic.IList" -> string!
const StrawberryShake.CodeGeneration.TypeNames.InjectAttribute = "global::Microsoft.AspNetCore.Components.InjectAttribute" -> string!
const StrawberryShake.CodeGeneration.TypeNames.InMemoryConnection = "global::StrawberryShake.Transport.InMemory.InMemoryConnection" -> string!
const StrawberryShake.CodeGeneration.TypeNames.Int16 = "global::System.Int16" -> string!
const StrawberryShake.CodeGeneration.TypeNames.Int32 = "global::System.Int32" -> string!
const StrawberryShake.CodeGeneration.TypeNames.Int64 = "global::System.Int64" -> string!
const StrawberryShake.CodeGeneration.TypeNames.IntSerializer = "global::StrawberryShake.Serialization.IntSerializer" -> string!
const StrawberryShake.CodeGeneration.TypeNames.IOperationExecutor = "global::StrawberryShake.IOperationExecutor" -> string!
const StrawberryShake.CodeGeneration.TypeNames.IOperationObservable = "global::System.IObservable" -> string!
const StrawberryShake.CodeGeneration.TypeNames.IOperationRequestFactory = "global::StrawberryShake.IOperationRequestFactory" -> string!
const StrawberryShake.CodeGeneration.TypeNames.IOperationResult = "global::StrawberryShake.IOperationResult" -> string!
const StrawberryShake.CodeGeneration.TypeNames.IOperationResultBuilder = "global::StrawberryShake.IOperationResultBuilder" -> string!
const StrawberryShake.CodeGeneration.TypeNames.IOperationResultDataFactory = "global::StrawberryShake.IOperationResultDataFactory" -> string!
const StrawberryShake.CodeGeneration.TypeNames.IOperationResultDataInfo = "global::StrawberryShake.IOperationResultDataInfo" -> string!
const StrawberryShake.CodeGeneration.TypeNames.IOperationStore = "global::StrawberryShake.IOperationStore" -> string!
const StrawberryShake.CodeGeneration.TypeNames.IReadOnlyCollection = "global::System.Collections.Generic.IReadOnlyCollection" -> string!
const StrawberryShake.CodeGeneration.TypeNames.IReadOnlyDictionary = "global::System.Collections.Generic.IReadOnlyDictionary" -> string!
const StrawberryShake.CodeGeneration.TypeNames.IReadOnlyList = "global::System.Collections.Generic.IReadOnlyList" -> string!
const StrawberryShake.CodeGeneration.TypeNames.IReadOnlySpan = "global::System.ReadOnlySpan" -> string!
const StrawberryShake.CodeGeneration.TypeNames.ISerializer = "global::StrawberryShake.Serialization.ISerializer" -> string!
const StrawberryShake.CodeGeneration.TypeNames.ISerializerResolver = "global::StrawberryShake.Serialization.ISerializerResolver" -> string!
const StrawberryShake.CodeGeneration.TypeNames.IServiceCollection = "global::Microsoft.Extensions.DependencyInjection.IServiceCollection" -> string!
const StrawberryShake.CodeGeneration.TypeNames.IServiceProvider = "global::System.IServiceProvider" -> string!
const StrawberryShake.CodeGeneration.TypeNames.ISessionPool = "global::StrawberryShake.Transport.WebSockets.ISessionPool" -> string!
const StrawberryShake.CodeGeneration.TypeNames.ISet = "global::System.Collections.Generic.ISet" -> string!
const StrawberryShake.CodeGeneration.TypeNames.IStoreAccessor = "global::StrawberryShake.IStoreAccessor" -> string!
const StrawberryShake.CodeGeneration.TypeNames.IWebSocketConnection = "global::StrawberryShake.Transport.WebSockets.IWebSocketConnection" -> string!
const StrawberryShake.CodeGeneration.TypeNames.JsonDocument = "global::System.Text.Json.JsonDocument" -> string!
const StrawberryShake.CodeGeneration.TypeNames.JsonElement = "global::System.Text.Json.JsonElement" -> string!
const StrawberryShake.CodeGeneration.TypeNames.JsonValueKind = "global::System.Text.Json.JsonValueKind" -> string!
const StrawberryShake.CodeGeneration.TypeNames.JsonWriterOptions = "global::System.Text.Json.JsonWriterOptions" -> string!
const StrawberryShake.CodeGeneration.TypeNames.KeyValuePair = "global::System.Collections.Generic.KeyValuePair" -> string!
const StrawberryShake.CodeGeneration.TypeNames.List = "global::System.Collections.Generic.List" -> string!
const StrawberryShake.CodeGeneration.TypeNames.LongSerializer = "global::StrawberryShake.Serialization.LongSerializer" -> string!
const StrawberryShake.CodeGeneration.TypeNames.NotSupportedException = "global::System.NotSupportedException" -> string!
const StrawberryShake.CodeGeneration.TypeNames.Object = "global::System.Object" -> string!
const StrawberryShake.CodeGeneration.TypeNames.OperationExecutor = "global::StrawberryShake.OperationExecutor" -> string!
const StrawberryShake.CodeGeneration.TypeNames.OperationKind = "global::StrawberryShake.OperationKind" -> string!
const StrawberryShake.CodeGeneration.TypeNames.OperationRequest = "global::StrawberryShake.OperationRequest" -> string!
const StrawberryShake.CodeGeneration.TypeNames.OperationResult = "global::StrawberryShake.OperationResult" -> string!
const StrawberryShake.CodeGeneration.TypeNames.OperationStore = "global::StrawberryShake.OperationStore" -> string!
const StrawberryShake.CodeGeneration.TypeNames.OrdinalStringComparison = "global::System.StringComparison.Ordinal" -> string!
const StrawberryShake.CodeGeneration.TypeNames.ParameterAttribute = "global::Microsoft.AspNetCore.Components.ParameterAttribute" -> string!
const StrawberryShake.CodeGeneration.TypeNames.ParseError = "global::StrawberryShake.Json.JsonErrorParser.ParseErrors" -> string!
const StrawberryShake.CodeGeneration.TypeNames.QueryBase = "global::StrawberryShake.Razor.QueryBase" -> string!
const StrawberryShake.CodeGeneration.TypeNames.RequestStrategy = "global::StrawberryShake.RequestStrategy" -> string!
const StrawberryShake.CodeGeneration.TypeNames.Response = "global::StrawberryShake.Response" -> string!
const StrawberryShake.CodeGeneration.TypeNames.SequenceEqual = "global::StrawberryShake.Helper.ComparisonHelper.SequenceEqual" -> string!
const StrawberryShake.CodeGeneration.TypeNames.SerializerResolver = "global::StrawberryShake.Serialization.SerializerResolver" -> string!
const StrawberryShake.CodeGeneration.TypeNames.ServiceCollection = "global::Microsoft.Extensions.DependencyInjection.ServiceCollection" -> string!
const StrawberryShake.CodeGeneration.TypeNames.ShortSerializer = "global::StrawberryShake.Serialization.ShortSerializer" -> string!
const StrawberryShake.CodeGeneration.TypeNames.Single = "global::System.Single" -> string!
const StrawberryShake.CodeGeneration.TypeNames.StoreAccessor = "global::StrawberryShake.StoreAccessor" -> string!
const StrawberryShake.CodeGeneration.TypeNames.StorelessOperationExecutor = "global::StrawberryShake.StorelessOperationExecutor" -> string!
const StrawberryShake.CodeGeneration.TypeNames.StrawberryshakeNamespace = "global::StrawberryShake." -> string!
const StrawberryShake.CodeGeneration.TypeNames.String = "global::System.String" -> string!
const StrawberryShake.CodeGeneration.TypeNames.StringSerializer = "global::StrawberryShake.Serialization.StringSerializer" -> string!
const StrawberryShake.CodeGeneration.TypeNames.Task = "global::System.Threading.Tasks.Task" -> string!
const StrawberryShake.CodeGeneration.TypeNames.TimeSpan = "global::System.TimeSpan" -> string!
const StrawberryShake.CodeGeneration.TypeNames.TimeSpanSerializer = "global::StrawberryShake.Serialization.TimeSpanSerializer" -> string!
const StrawberryShake.CodeGeneration.TypeNames.TryAddSingleton = "global::Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddSingleton" -> string!
const StrawberryShake.CodeGeneration.TypeNames.Type = "global::System.Type" -> string!
const StrawberryShake.CodeGeneration.TypeNames.UInt16 = "global::System.UInt16" -> string!
const StrawberryShake.CodeGeneration.TypeNames.UInt32 = "global::System.UInt32" -> string!
const StrawberryShake.CodeGeneration.TypeNames.UInt64 = "global::System.UInt64" -> string!
const StrawberryShake.CodeGeneration.TypeNames.Uri = "global::System.Uri" -> string!
const StrawberryShake.CodeGeneration.TypeNames.UrlSerializer = "global::StrawberryShake.Serialization.UrlSerializer" -> string!
const StrawberryShake.CodeGeneration.TypeNames.Utf8JsonWriter = "global::System.Text.Json.Utf8JsonWriter" -> string!
const StrawberryShake.CodeGeneration.TypeNames.UuidSerializer = "global::StrawberryShake.Serialization.UuidSerializer" -> string!
const StrawberryShake.CodeGeneration.TypeNames.Watch = "Watch" -> string!
const StrawberryShake.CodeGeneration.TypeNames.WebSocketConnection = "global::StrawberryShake.Transport.WebSockets.WebSocketConnection" -> string!
const StrawberryShake.CodeGeneration.WellKnownNames.TypeName = "__typename" -> string!
override StrawberryShake.CodeGeneration.Analyzers.Models.OutputTypeModel.ToString() -> string!
override StrawberryShake.CodeGeneration.Analyzers.SelectionSetInfo.Equals(object? obj) -> bool
override StrawberryShake.CodeGeneration.Analyzers.SelectionSetInfo.GetHashCode() -> int
override StrawberryShake.CodeGeneration.Analyzers.Types.EnumValueDirectiveType.Configure(HotChocolate.Types.IDirectiveTypeDescriptor<StrawberryShake.CodeGeneration.Analyzers.Types.EnumValueDirective!>! descriptor) -> void
override StrawberryShake.CodeGeneration.Analyzers.Types.RenameDirectiveType.Configure(HotChocolate.Types.IDirectiveTypeDescriptor<StrawberryShake.CodeGeneration.Analyzers.Types.RenameDirective!>! descriptor) -> void
override StrawberryShake.CodeGeneration.Analyzers.Types.RuntimeTypeDirectiveType.Configure(HotChocolate.Types.IDirectiveTypeDescriptor<StrawberryShake.CodeGeneration.Analyzers.Types.RuntimeTypeDirective!>! descriptor) -> void
override StrawberryShake.CodeGeneration.Analyzers.Types.SerializationTypeDirectiveType.Configure(HotChocolate.Types.IDirectiveTypeDescriptor<StrawberryShake.CodeGeneration.Analyzers.Types.SerializationTypeDirective!>! descriptor) -> void
override StrawberryShake.CodeGeneration.CodeWriter.Dispose(bool disposing) -> void
override StrawberryShake.CodeGeneration.CodeWriter.Encoding.get -> System.Text.Encoding!
override StrawberryShake.CodeGeneration.CodeWriter.Flush() -> void
override StrawberryShake.CodeGeneration.CodeWriter.Write(char value) -> void
override StrawberryShake.CodeGeneration.RuntimeTypeInfo.Equals(object? obj) -> bool
override StrawberryShake.CodeGeneration.RuntimeTypeInfo.GetHashCode() -> int
override StrawberryShake.CodeGeneration.RuntimeTypeInfo.ToString() -> string!
override StrawberryShake.CodeGeneration.Utilities.EntityTypeInterceptor.OnAfterCompleteTypes() -> void
override StrawberryShake.CodeGeneration.Utilities.EntityTypeInterceptor.OnBeforeCompleteType(HotChocolate.Configuration.ITypeCompletionContext! completionContext, HotChocolate.Types.Descriptors.Definitions.DefinitionBase? definition, System.Collections.Generic.IDictionary<string!, object?>! contextData) -> void
override StrawberryShake.CodeGeneration.Utilities.LeafTypeInterceptor.OnAfterCompleteTypeNames() -> void
override StrawberryShake.CodeGeneration.Utilities.LeafTypeInterceptor.OnBeforeCompleteName(HotChocolate.Configuration.ITypeCompletionContext! completionContext, HotChocolate.Types.Descriptors.Definitions.DefinitionBase? definition, System.Collections.Generic.IDictionary<string!, object?>! contextData) -> void
static StrawberryShake.CodeGeneration.Analyzers.DocumentAnalyzer.New() -> StrawberryShake.CodeGeneration.Analyzers.DocumentAnalyzer!
static StrawberryShake.CodeGeneration.Analyzers.FragmentHelper.CreateClass(StrawberryShake.CodeGeneration.Analyzers.IDocumentAnalyzerContext! context, StrawberryShake.CodeGeneration.Analyzers.FragmentNode! fragmentNode, StrawberryShake.CodeGeneration.Analyzers.SelectionSet! selectionSet, StrawberryShake.CodeGeneration.Analyzers.Models.OutputTypeModel! interface) -> StrawberryShake.CodeGeneration.Analyzers.Models.OutputTypeModel!
static StrawberryShake.CodeGeneration.Analyzers.FragmentHelper.CreateFragmentNode(HotChocolate.Types.INamedType! namedType, HotChocolate.Path! selectionPath, StrawberryShake.CodeGeneration.Analyzers.SelectionSet! selectionSet, bool appendTypeName = false) -> StrawberryShake.CodeGeneration.Analyzers.FragmentNode!
static StrawberryShake.CodeGeneration.Analyzers.FragmentHelper.CreateFragmentNode(StrawberryShake.CodeGeneration.Analyzers.SelectionSet! selectionSet, HotChocolate.Path! path, bool appendTypeName = false) -> StrawberryShake.CodeGeneration.Analyzers.FragmentNode!
static StrawberryShake.CodeGeneration.Analyzers.FragmentHelper.CreateInterface(StrawberryShake.CodeGeneration.Analyzers.IDocumentAnalyzerContext! context, StrawberryShake.CodeGeneration.Analyzers.FragmentNode! fragmentNode, HotChocolate.Path! path, System.Collections.Generic.IEnumerable<StrawberryShake.CodeGeneration.Analyzers.Models.OutputTypeModel!>? implements = null) -> StrawberryShake.CodeGeneration.Analyzers.Models.OutputTypeModel!
static StrawberryShake.CodeGeneration.Analyzers.FragmentHelper.CreateName(HotChocolate.Path! selectionPath, System.Func<string!, string!>! nameFormatter) -> string!
static StrawberryShake.CodeGeneration.Analyzers.FragmentHelper.GetFragment(StrawberryShake.CodeGeneration.Analyzers.FragmentNode! fragmentNode, string! name) -> StrawberryShake.CodeGeneration.Analyzers.FragmentNode?
static StrawberryShake.CodeGeneration.Analyzers.FragmentHelper.GetReturnTypeName(StrawberryShake.CodeGeneration.Analyzers.FieldSelection! fieldSelection) -> string?
static StrawberryShake.CodeGeneration.Analyzers.FragmentHelper.RewriteForConcreteType(StrawberryShake.CodeGeneration.Analyzers.FragmentNode! fragmentNode) -> StrawberryShake.CodeGeneration.Analyzers.FragmentNode!
static StrawberryShake.CodeGeneration.BuiltInScalarNames.IsBuiltInScalar(string! typeName) -> bool
static StrawberryShake.CodeGeneration.CodeGenerator<TDescriptor>.DependencyInjection.get -> string!
static StrawberryShake.CodeGeneration.CodeGenerator<TDescriptor>.Serialization.get -> string!
static StrawberryShake.CodeGeneration.CodeGenerator<TDescriptor>.State.get -> string!
static StrawberryShake.CodeGeneration.CodeGeneratorSettingsExtensions.IsStoreDisabled(this StrawberryShake.CodeGeneration.CSharpSyntaxGeneratorSettings! settings) -> bool
static StrawberryShake.CodeGeneration.CodeGeneratorSettingsExtensions.IsStoreEnabled(this StrawberryShake.CodeGeneration.CSharpSyntaxGeneratorSettings! settings) -> bool
static StrawberryShake.CodeGeneration.CodeWriter.Indent.get -> string!
static StrawberryShake.CodeGeneration.CodeWriterExtensions.WriteComment(this StrawberryShake.CodeGeneration.CodeWriter! writer, string! comment) -> StrawberryShake.CodeGeneration.CodeWriter!
static StrawberryShake.CodeGeneration.CodeWriterExtensions.WriteGeneratedAttribute(this StrawberryShake.CodeGeneration.CodeWriter! writer) -> void
static StrawberryShake.CodeGeneration.CSharp.Keywords.ToSafeName(string! name) -> string!
static StrawberryShake.CodeGeneration.CSharpSyntaxGenerator<TDescriptor>.Components.get -> string!
static StrawberryShake.CodeGeneration.CSharpSyntaxGenerator<TDescriptor>.DependencyInjection.get -> string!
static StrawberryShake.CodeGeneration.CSharpSyntaxGenerator<TDescriptor>.Serialization.get -> string!
static StrawberryShake.CodeGeneration.CSharpSyntaxGenerator<TDescriptor>.State.get -> string!
static StrawberryShake.CodeGeneration.Descriptors.NamingConventions.CreateClientProfileKind(string! clientName) -> string!
static StrawberryShake.CodeGeneration.Descriptors.NamingConventions.CreateDataMapperName(string! typeName, string! graphqlTypename) -> HotChocolate.NameString
static StrawberryShake.CodeGeneration.Descriptors.NamingConventions.CreateDataTypeName(string! typeName) -> string!
static StrawberryShake.CodeGeneration.Descriptors.NamingConventions.CreateDocumentTypeName(string! operationTypeName) -> string!
static StrawberryShake.CodeGeneration.Descriptors.NamingConventions.CreateEntityMapperName(string! typeName, string! graphqlTypeName) -> HotChocolate.NameString
static StrawberryShake.CodeGeneration.Descriptors.NamingConventions.CreateEntityType(string! graphqlTypeName, string! namespace) -> StrawberryShake.CodeGeneration.RuntimeTypeInfo!
static StrawberryShake.CodeGeneration.Descriptors.NamingConventions.CreateEnumParserName(string! enumTypeName) -> string!
static StrawberryShake.CodeGeneration.Descriptors.NamingConventions.CreateInputValueField(string! name) -> string!
static StrawberryShake.CodeGeneration.Descriptors.NamingConventions.CreateInputValueFormatter(StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.InputObjectTypeDescriptor! type) -> string!
static StrawberryShake.CodeGeneration.Descriptors.NamingConventions.CreateInputValueInfo(string! name) -> string!
static StrawberryShake.CodeGeneration.Descriptors.NamingConventions.CreateIsSetField(string! name) -> string!
static StrawberryShake.CodeGeneration.Descriptors.NamingConventions.CreateIsSetProperty(string! name) -> string!
static StrawberryShake.CodeGeneration.Descriptors.NamingConventions.CreateMutationServiceName(string! typeName) -> string!
static StrawberryShake.CodeGeneration.Descriptors.NamingConventions.CreateQueryServiceName(string! typeName) -> string!
static StrawberryShake.CodeGeneration.Descriptors.NamingConventions.CreateResultBuilderName(string! typeName) -> string!
static StrawberryShake.CodeGeneration.Descriptors.NamingConventions.CreateResultFactoryName(string! typeName) -> string!
static StrawberryShake.CodeGeneration.Descriptors.NamingConventions.CreateResultInfoName(string! typeName) -> string!
static StrawberryShake.CodeGeneration.Descriptors.NamingConventions.CreateResultRootTypeName(string! typeName, HotChocolate.Types.INamedType? type = null) -> string!
static StrawberryShake.CodeGeneration.Descriptors.NamingConventions.CreateServiceCollectionExtensions(string! clientName) -> string!
static StrawberryShake.CodeGeneration.Descriptors.NamingConventions.CreateStateNamespace(string! namespace) -> string!
static StrawberryShake.CodeGeneration.Descriptors.NamingConventions.CreateStoreAccessor(string! clientName) -> string!
static StrawberryShake.CodeGeneration.Descriptors.NamingConventions.CreateSubscriptionServiceName(string! typeName) -> string!
static StrawberryShake.CodeGeneration.ErrorHelper.SchemaError(this HotChocolate.ISchemaError! error, System.Collections.Generic.IDictionary<HotChocolate.Language.ISyntaxNode!, string!>! fileLookup) -> HotChocolate.IError!
static StrawberryShake.CodeGeneration.ErrorHelper.SyntaxError(this HotChocolate.Language.SyntaxException! exception, string! file) -> HotChocolate.IError!
static StrawberryShake.CodeGeneration.ErrorHelper.WithFileReference(this HotChocolate.IError! error, System.Collections.Generic.IDictionary<HotChocolate.Language.ISyntaxNode!, string!>! fileLookup) -> HotChocolate.IError!
static StrawberryShake.CodeGeneration.Extensions.TypeDescriptorExtensions.ContainsEntity(this StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.ITypeDescriptor! typeDescriptor) -> bool
static StrawberryShake.CodeGeneration.Extensions.TypeDescriptorExtensions.GetName(this StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.ITypeDescriptor! typeDescriptor) -> HotChocolate.NameString
static StrawberryShake.CodeGeneration.Extensions.TypeDescriptorExtensions.GetRuntimeType(this StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.ITypeDescriptor! typeDescriptor) -> StrawberryShake.CodeGeneration.RuntimeTypeInfo!
static StrawberryShake.CodeGeneration.Extensions.TypeDescriptorExtensions.InnerType(this StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.ITypeDescriptor! typeDescriptor) -> StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.ITypeDescriptor!
static StrawberryShake.CodeGeneration.Extensions.TypeDescriptorExtensions.IsData(this StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.ITypeDescriptor! typeDescriptor) -> bool
static StrawberryShake.CodeGeneration.Extensions.TypeDescriptorExtensions.IsEntity(this StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.ITypeDescriptor! typeDescriptor) -> bool
static StrawberryShake.CodeGeneration.Extensions.TypeDescriptorExtensions.IsInterface(this StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.ITypeDescriptor! typeDescriptor) -> bool
static StrawberryShake.CodeGeneration.Extensions.TypeDescriptorExtensions.IsLeaf(this StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.ITypeDescriptor! typeDescriptor) -> bool
static StrawberryShake.CodeGeneration.Extensions.TypeDescriptorExtensions.IsList(this StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.ITypeDescriptor! typeDescriptor) -> bool
static StrawberryShake.CodeGeneration.Extensions.TypeDescriptorExtensions.IsNonNullable(this StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.ITypeDescriptor! typeDescriptor) -> bool
static StrawberryShake.CodeGeneration.Extensions.TypeDescriptorExtensions.IsNullable(this StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.ITypeDescriptor! typeDescriptor) -> bool
static StrawberryShake.CodeGeneration.Extensions.TypeDescriptorExtensions.IsOrContainsEntity(this StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.ITypeDescriptor! typeDescriptor) -> bool
static StrawberryShake.CodeGeneration.Extensions.TypeDescriptorExtensions.NamedType(this StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.ITypeDescriptor! typeDescriptor) -> StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.ITypeDescriptor!
static StrawberryShake.CodeGeneration.Extensions.TypeExtensions.GetEntityDefinition(this HotChocolate.Types.INamedType! namedType) -> HotChocolate.Language.SelectionSetNode!
static StrawberryShake.CodeGeneration.Extensions.TypeExtensions.GetRuntimeType(this HotChocolate.Types.ILeafType! leafType) -> string!
static StrawberryShake.CodeGeneration.Extensions.TypeExtensions.GetSerializationType(this HotChocolate.Types.ILeafType! leafType) -> string!
static StrawberryShake.CodeGeneration.Extensions.TypeExtensions.IsEntity(this HotChocolate.Types.INamedType! namedType) -> bool
static StrawberryShake.CodeGeneration.Mappers.ClientDescriptorMapper.Map(StrawberryShake.CodeGeneration.Analyzers.Models.ClientModel! model, StrawberryShake.CodeGeneration.Mappers.IMapperContext! context) -> void
static StrawberryShake.CodeGeneration.Mappers.DataTypeDescriptorMapper.Map(StrawberryShake.CodeGeneration.Analyzers.Models.ClientModel! model, StrawberryShake.CodeGeneration.Mappers.IMapperContext! context) -> void
static StrawberryShake.CodeGeneration.Mappers.DependencyInjectionMapper.Map(StrawberryShake.CodeGeneration.Analyzers.Models.ClientModel! model, StrawberryShake.CodeGeneration.Mappers.IMapperContext! context) -> void
static StrawberryShake.CodeGeneration.Mappers.EntityIdFactoryDescriptorMapper.Map(StrawberryShake.CodeGeneration.Analyzers.Models.ClientModel! model, StrawberryShake.CodeGeneration.Mappers.IMapperContext! context) -> void
static StrawberryShake.CodeGeneration.Mappers.EntityTypeDescriptorMapper.Map(StrawberryShake.CodeGeneration.Analyzers.Models.ClientModel! model, StrawberryShake.CodeGeneration.Mappers.IMapperContext! context) -> void
static StrawberryShake.CodeGeneration.Mappers.OperationDescriptorMapper.Map(StrawberryShake.CodeGeneration.Analyzers.Models.ClientModel! model, StrawberryShake.CodeGeneration.Mappers.IMapperContext! context) -> void
static StrawberryShake.CodeGeneration.Mappers.ResultBuilderDescriptorMapper.Map(StrawberryShake.CodeGeneration.Analyzers.Models.ClientModel! model, StrawberryShake.CodeGeneration.Mappers.IMapperContext! context) -> void
static StrawberryShake.CodeGeneration.Mappers.StoreAccessorMapper.Map(StrawberryShake.CodeGeneration.Analyzers.Models.ClientModel! model, StrawberryShake.CodeGeneration.Mappers.IMapperContext! context) -> void
static StrawberryShake.CodeGeneration.Mappers.TypeDescriptorMapper.Map(StrawberryShake.CodeGeneration.Analyzers.Models.ClientModel! model, StrawberryShake.CodeGeneration.Mappers.IMapperContext! context) -> void
static StrawberryShake.CodeGeneration.TransportProfile.Default.get -> StrawberryShake.CodeGeneration.TransportProfile!
static StrawberryShake.CodeGeneration.Utilities.DocumentHelper.GetExecutableDocuments(this System.Collections.Generic.IEnumerable<StrawberryShake.CodeGeneration.Utilities.GraphQLFile!>! documentNodes) -> System.Collections.Generic.IReadOnlyList<StrawberryShake.CodeGeneration.Utilities.GraphQLFile!>!
static StrawberryShake.CodeGeneration.Utilities.DocumentHelper.GetTypeSystemDocuments(this System.Collections.Generic.IEnumerable<StrawberryShake.CodeGeneration.Utilities.GraphQLFile!>! documentNodes) -> System.Collections.Generic.IReadOnlyList<StrawberryShake.CodeGeneration.Utilities.GraphQLFile!>!
static StrawberryShake.CodeGeneration.Utilities.DocumentHelper.IndexSyntaxNodes(StrawberryShake.CodeGeneration.Utilities.GraphQLFile! file, System.Collections.Generic.IDictionary<HotChocolate.Language.ISyntaxNode!, string!>! lookup) -> void
static StrawberryShake.CodeGeneration.Utilities.DocumentHelper.IndexSyntaxNodes(System.Collections.Generic.IEnumerable<StrawberryShake.CodeGeneration.Utilities.GraphQLFile!>! files, System.Collections.Generic.IDictionary<HotChocolate.Language.ISyntaxNode!, string!>! lookup) -> void
static StrawberryShake.CodeGeneration.Utilities.NameUtils.GetClassName(HotChocolate.NameString typeName) -> string!
static StrawberryShake.CodeGeneration.Utilities.NameUtils.GetClassName(params string![]! s) -> string!
static StrawberryShake.CodeGeneration.Utilities.NameUtils.GetClassName(string! typeName) -> string!
static StrawberryShake.CodeGeneration.Utilities.NameUtils.GetEnumValue(string! enumValue) -> string!
static StrawberryShake.CodeGeneration.Utilities.NameUtils.GetFieldName(params string![]! s) -> string!
static StrawberryShake.CodeGeneration.Utilities.NameUtils.GetFieldName(string! fieldName) -> string!
static StrawberryShake.CodeGeneration.Utilities.NameUtils.GetInterfaceName(string! typeName) -> string!
static StrawberryShake.CodeGeneration.Utilities.NameUtils.GetLeftPropertyAssignment(string! property) -> string!
static StrawberryShake.CodeGeneration.Utilities.NameUtils.GetMethodName(string! fieldName) -> string!
static StrawberryShake.CodeGeneration.Utilities.NameUtils.GetParameterName(string! parameterName) -> string!
static StrawberryShake.CodeGeneration.Utilities.NameUtils.GetParamNameUnsafe(string! parameterName) -> string!
static StrawberryShake.CodeGeneration.Utilities.NameUtils.GetPathName(HotChocolate.Path! path) -> string!
static StrawberryShake.CodeGeneration.Utilities.NameUtils.GetPropertyName(string! fieldName) -> string!
static StrawberryShake.CodeGeneration.Utilities.QueryDocumentRewriter.Rewrite(HotChocolate.Language.DocumentNode! document, HotChocolate.ISchema! schema) -> HotChocolate.Language.DocumentNode!
static StrawberryShake.CodeGeneration.Utilities.SchemaHelper.GetOrCreateTypeInfo(this HotChocolate.ISchema! schema, string! typeName, bool valueType = false) -> StrawberryShake.CodeGeneration.RuntimeTypeInfo!
static StrawberryShake.CodeGeneration.Utilities.SchemaHelper.Load(System.Collections.Generic.IReadOnlyCollection<StrawberryShake.CodeGeneration.Utilities.GraphQLFile!>! schemaFiles, bool strictValidation = true, bool noStore = false) -> HotChocolate.ISchema!
static StrawberryShake.CodeGeneration.Utilities.SerializerNameUtils.CreateDeserializerName(HotChocolate.Types.IType! type) -> string!
static StrawberryShake.CodeGeneration.Utilities.SerializerNameUtils.CreateSerializerName(HotChocolate.Types.IType! type) -> string!
StrawberryShake.CodeGeneration.Analyzers.DocumentAnalyzer
StrawberryShake.CodeGeneration.Analyzers.DocumentAnalyzer.AddDocument(HotChocolate.Language.DocumentNode! document) -> StrawberryShake.CodeGeneration.Analyzers.DocumentAnalyzer!
StrawberryShake.CodeGeneration.Analyzers.DocumentAnalyzer.Analyze() -> StrawberryShake.CodeGeneration.Analyzers.Models.ClientModel!
StrawberryShake.CodeGeneration.Analyzers.DocumentAnalyzer.DocumentAnalyzer() -> void
StrawberryShake.CodeGeneration.Analyzers.DocumentAnalyzer.SetSchema(HotChocolate.ISchema! schema) -> StrawberryShake.CodeGeneration.Analyzers.DocumentAnalyzer!
StrawberryShake.CodeGeneration.Analyzers.DocumentAnalyzerContext
StrawberryShake.CodeGeneration.Analyzers.DocumentAnalyzerContext.CollectFields() -> StrawberryShake.CodeGeneration.Analyzers.SelectionSetVariants!
StrawberryShake.CodeGeneration.Analyzers.DocumentAnalyzerContext.CollectFields(HotChocolate.Language.SelectionSetNode! selectionSet, HotChocolate.Types.INamedOutputType! type, HotChocolate.Path! path) -> StrawberryShake.CodeGeneration.Analyzers.SelectionSetVariants!
StrawberryShake.CodeGeneration.Analyzers.DocumentAnalyzerContext.CollectFields(StrawberryShake.CodeGeneration.Analyzers.FieldSelection! fieldSelection) -> StrawberryShake.CodeGeneration.Analyzers.SelectionSetVariants!
StrawberryShake.CodeGeneration.Analyzers.DocumentAnalyzerContext.Document.get -> HotChocolate.Language.DocumentNode!
StrawberryShake.CodeGeneration.Analyzers.DocumentAnalyzerContext.DocumentAnalyzerContext(HotChocolate.ISchema! schema, HotChocolate.Language.DocumentNode! document) -> void
StrawberryShake.CodeGeneration.Analyzers.DocumentAnalyzerContext.Fields.get -> System.Collections.Generic.Queue<StrawberryShake.CodeGeneration.Analyzers.FieldSelection!>!
StrawberryShake.CodeGeneration.Analyzers.DocumentAnalyzerContext.GetImplementations(StrawberryShake.CodeGeneration.Analyzers.Models.OutputTypeModel! outputTypeModel) -> System.Collections.Generic.IEnumerable<StrawberryShake.CodeGeneration.Analyzers.Models.OutputTypeModel!>!
StrawberryShake.CodeGeneration.Analyzers.DocumentAnalyzerContext.OperationDefinition.get -> HotChocolate.Language.OperationDefinitionNode!
StrawberryShake.CodeGeneration.Analyzers.DocumentAnalyzerContext.OperationName.get -> HotChocolate.NameString
StrawberryShake.CodeGeneration.Analyzers.DocumentAnalyzerContext.OperationType.get -> HotChocolate.Types.ObjectType!
StrawberryShake.CodeGeneration.Analyzers.DocumentAnalyzerContext.RegisterModel(HotChocolate.NameString name, StrawberryShake.CodeGeneration.Analyzers.Models.ITypeModel! typeModel) -> void
StrawberryShake.CodeGeneration.Analyzers.DocumentAnalyzerContext.RegisterSelectionSet(HotChocolate.Types.INamedType! namedType, HotChocolate.Language.SelectionSetNode! from, HotChocolate.Language.SelectionSetNode! to) -> void
StrawberryShake.CodeGeneration.Analyzers.DocumentAnalyzerContext.RegisterType(HotChocolate.Types.INamedType! type) -> void
StrawberryShake.CodeGeneration.Analyzers.DocumentAnalyzerContext.ResolveTypeName(HotChocolate.NameString proposedName) -> HotChocolate.NameString
StrawberryShake.CodeGeneration.Analyzers.DocumentAnalyzerContext.ResolveTypeName(HotChocolate.NameString proposedName, HotChocolate.Language.ISyntaxNode! syntaxNode, System.Collections.Generic.IReadOnlyList<string!>? additionalNamePatterns = null) -> HotChocolate.NameString
StrawberryShake.CodeGeneration.Analyzers.DocumentAnalyzerContext.RootPath.get -> HotChocolate.Path!
StrawberryShake.CodeGeneration.Analyzers.DocumentAnalyzerContext.Schema.get -> HotChocolate.ISchema!
StrawberryShake.CodeGeneration.Analyzers.DocumentAnalyzerContext.SelectionSets.get -> System.Collections.Generic.IReadOnlyDictionary<StrawberryShake.CodeGeneration.Analyzers.SelectionSetInfo, HotChocolate.Language.SelectionSetNode!>!
StrawberryShake.CodeGeneration.Analyzers.DocumentAnalyzerContext.TryGetModel<T>(HotChocolate.NameString name, out T? typeModel) -> bool
StrawberryShake.CodeGeneration.Analyzers.DocumentAnalyzerContext.TypeModels.get -> System.Collections.Generic.IReadOnlyCollection<StrawberryShake.CodeGeneration.Analyzers.Models.ITypeModel!>!
StrawberryShake.CodeGeneration.Analyzers.FieldSelection
StrawberryShake.CodeGeneration.Analyzers.FieldSelection.Field.get -> HotChocolate.Types.IOutputField!
StrawberryShake.CodeGeneration.Analyzers.FieldSelection.FieldSelection(HotChocolate.Types.IOutputField! field, HotChocolate.Language.FieldNode! syntaxNode, HotChocolate.Path! path, bool isConditional = true) -> void
StrawberryShake.CodeGeneration.Analyzers.FieldSelection.IsConditional.get -> bool
StrawberryShake.CodeGeneration.Analyzers.FieldSelection.Path.get -> HotChocolate.Path!
StrawberryShake.CodeGeneration.Analyzers.FieldSelection.ResponseName.get -> string!
StrawberryShake.CodeGeneration.Analyzers.FieldSelection.SyntaxNode.get -> HotChocolate.Language.FieldNode!
StrawberryShake.CodeGeneration.Analyzers.FieldSelection.WithPath(HotChocolate.Path! path) -> StrawberryShake.CodeGeneration.Analyzers.FieldSelection!
StrawberryShake.CodeGeneration.Analyzers.Fragment
StrawberryShake.CodeGeneration.Analyzers.Fragment.Fragment(string! name, StrawberryShake.CodeGeneration.Analyzers.FragmentKind kind, HotChocolate.Types.INamedType! typeCondition, HotChocolate.Language.SelectionSetNode! selectionSet) -> void
StrawberryShake.CodeGeneration.Analyzers.Fragment.Kind.get -> StrawberryShake.CodeGeneration.Analyzers.FragmentKind
StrawberryShake.CodeGeneration.Analyzers.Fragment.Name.get -> string!
StrawberryShake.CodeGeneration.Analyzers.Fragment.SelectionSet.get -> HotChocolate.Language.SelectionSetNode!
StrawberryShake.CodeGeneration.Analyzers.Fragment.TypeCondition.get -> HotChocolate.Types.INamedType!
StrawberryShake.CodeGeneration.Analyzers.Fragment.WithName(string! name) -> StrawberryShake.CodeGeneration.Analyzers.Fragment!
StrawberryShake.CodeGeneration.Analyzers.FragmentHelper
StrawberryShake.CodeGeneration.Analyzers.FragmentKind
StrawberryShake.CodeGeneration.Analyzers.FragmentKind.Inline = 2 -> StrawberryShake.CodeGeneration.Analyzers.FragmentKind
StrawberryShake.CodeGeneration.Analyzers.FragmentKind.Named = 1 -> StrawberryShake.CodeGeneration.Analyzers.FragmentKind
StrawberryShake.CodeGeneration.Analyzers.FragmentKind.Structure = 0 -> StrawberryShake.CodeGeneration.Analyzers.FragmentKind
StrawberryShake.CodeGeneration.Analyzers.FragmentNode
StrawberryShake.CodeGeneration.Analyzers.FragmentNode.Fragment.get -> StrawberryShake.CodeGeneration.Analyzers.Fragment!
StrawberryShake.CodeGeneration.Analyzers.FragmentNode.FragmentNode(StrawberryShake.CodeGeneration.Analyzers.Fragment! fragment, System.Collections.Generic.IReadOnlyList<StrawberryShake.CodeGeneration.Analyzers.FragmentNode!>? nodes = null) -> void
StrawberryShake.CodeGeneration.Analyzers.FragmentNode.Nodes.get -> System.Collections.Generic.IReadOnlyList<StrawberryShake.CodeGeneration.Analyzers.FragmentNode!>!
StrawberryShake.CodeGeneration.Analyzers.FragmentNode.WithFragment(StrawberryShake.CodeGeneration.Analyzers.Fragment! fragment) -> StrawberryShake.CodeGeneration.Analyzers.FragmentNode!
StrawberryShake.CodeGeneration.Analyzers.FragmentNode.WithNodes(System.Collections.Generic.IReadOnlyList<StrawberryShake.CodeGeneration.Analyzers.FragmentNode!>! nodes) -> StrawberryShake.CodeGeneration.Analyzers.FragmentNode!
StrawberryShake.CodeGeneration.Analyzers.IDocumentAnalyzerContext
StrawberryShake.CodeGeneration.Analyzers.IDocumentAnalyzerContext.CollectFields(HotChocolate.Language.SelectionSetNode! selectionSet, HotChocolate.Types.INamedOutputType! type, HotChocolate.Path! path) -> StrawberryShake.CodeGeneration.Analyzers.SelectionSetVariants!
StrawberryShake.CodeGeneration.Analyzers.IDocumentAnalyzerContext.Document.get -> HotChocolate.Language.DocumentNode!
StrawberryShake.CodeGeneration.Analyzers.IDocumentAnalyzerContext.Fields.get -> System.Collections.Generic.Queue<StrawberryShake.CodeGeneration.Analyzers.FieldSelection!>!
StrawberryShake.CodeGeneration.Analyzers.IDocumentAnalyzerContext.GetImplementations(StrawberryShake.CodeGeneration.Analyzers.Models.OutputTypeModel! outputTypeModel) -> System.Collections.Generic.IEnumerable<StrawberryShake.CodeGeneration.Analyzers.Models.OutputTypeModel!>!
StrawberryShake.CodeGeneration.Analyzers.IDocumentAnalyzerContext.OperationDefinition.get -> HotChocolate.Language.OperationDefinitionNode!
StrawberryShake.CodeGeneration.Analyzers.IDocumentAnalyzerContext.OperationName.get -> HotChocolate.NameString
StrawberryShake.CodeGeneration.Analyzers.IDocumentAnalyzerContext.OperationType.get -> HotChocolate.Types.ObjectType!
StrawberryShake.CodeGeneration.Analyzers.IDocumentAnalyzerContext.RegisterModel(HotChocolate.NameString name, StrawberryShake.CodeGeneration.Analyzers.Models.ITypeModel! typeModel) -> void
StrawberryShake.CodeGeneration.Analyzers.IDocumentAnalyzerContext.RegisterSelectionSet(HotChocolate.Types.INamedType! namedType, HotChocolate.Language.SelectionSetNode! from, HotChocolate.Language.SelectionSetNode! to) -> void
StrawberryShake.CodeGeneration.Analyzers.IDocumentAnalyzerContext.RegisterType(HotChocolate.Types.INamedType! type) -> void
StrawberryShake.CodeGeneration.Analyzers.IDocumentAnalyzerContext.ResolveTypeName(HotChocolate.NameString proposedName) -> HotChocolate.NameString
StrawberryShake.CodeGeneration.Analyzers.IDocumentAnalyzerContext.ResolveTypeName(HotChocolate.NameString proposedName, HotChocolate.Language.ISyntaxNode! syntaxNode, System.Collections.Generic.IReadOnlyList<string!>? additionalNamePatterns = null) -> HotChocolate.NameString
StrawberryShake.CodeGeneration.Analyzers.IDocumentAnalyzerContext.RootPath.get -> HotChocolate.Path!
StrawberryShake.CodeGeneration.Analyzers.IDocumentAnalyzerContext.Schema.get -> HotChocolate.ISchema!
StrawberryShake.CodeGeneration.Analyzers.IDocumentAnalyzerContext.SelectionSets.get -> System.Collections.Generic.IReadOnlyDictionary<StrawberryShake.CodeGeneration.Analyzers.SelectionSetInfo, HotChocolate.Language.SelectionSetNode!>!
StrawberryShake.CodeGeneration.Analyzers.IDocumentAnalyzerContext.TryGetModel<T>(HotChocolate.NameString name, out T? typeModel) -> bool
StrawberryShake.CodeGeneration.Analyzers.IDocumentAnalyzerContext.TypeModels.get -> System.Collections.Generic.IReadOnlyCollection<StrawberryShake.CodeGeneration.Analyzers.Models.ITypeModel!>!
StrawberryShake.CodeGeneration.Analyzers.LeafTypeInfo
StrawberryShake.CodeGeneration.Analyzers.LeafTypeInfo.LeafTypeInfo() -> void
StrawberryShake.CodeGeneration.Analyzers.LeafTypeInfo.LeafTypeInfo(HotChocolate.NameString typeName, string? runtimeTypeType = null, string? serializationType = null) -> void
StrawberryShake.CodeGeneration.Analyzers.LeafTypeInfo.RuntimeType.get -> string!
StrawberryShake.CodeGeneration.Analyzers.LeafTypeInfo.SerializationType.get -> string!
StrawberryShake.CodeGeneration.Analyzers.LeafTypeInfo.TypeName.get -> HotChocolate.NameString
StrawberryShake.CodeGeneration.Analyzers.Models.ArgumentModel
StrawberryShake.CodeGeneration.Analyzers.Models.ArgumentModel.ArgumentModel(HotChocolate.NameString name, HotChocolate.Types.IInputType! type, HotChocolate.Language.VariableDefinitionNode! variable, HotChocolate.Language.IValueNode? defaultValue) -> void
StrawberryShake.CodeGeneration.Analyzers.Models.ArgumentModel.DefaultValue.get -> HotChocolate.Language.IValueNode?
StrawberryShake.CodeGeneration.Analyzers.Models.ArgumentModel.Name.get -> HotChocolate.NameString
StrawberryShake.CodeGeneration.Analyzers.Models.ArgumentModel.Type.get -> HotChocolate.Types.IInputType!
StrawberryShake.CodeGeneration.Analyzers.Models.ArgumentModel.Variable.get -> HotChocolate.Language.VariableDefinitionNode!
StrawberryShake.CodeGeneration.Analyzers.Models.ClientModel
StrawberryShake.CodeGeneration.Analyzers.Models.ClientModel.ClientModel(HotChocolate.ISchema! schema, System.Collections.Generic.IReadOnlyList<StrawberryShake.CodeGeneration.Analyzers.Models.OperationModel!>! operations, System.Collections.Generic.IReadOnlyList<StrawberryShake.CodeGeneration.Analyzers.Models.LeafTypeModel!>! leafTypes, System.Collections.Generic.IReadOnlyList<StrawberryShake.CodeGeneration.Analyzers.Models.InputObjectTypeModel!>! inputObjectTypes) -> void
StrawberryShake.CodeGeneration.Analyzers.Models.ClientModel.Entities.get -> System.Collections.Generic.IReadOnlyCollection<StrawberryShake.CodeGeneration.Analyzers.Models.EntityModel!>!
StrawberryShake.CodeGeneration.Analyzers.Models.ClientModel.InputObjectTypes.get -> System.Collections.Generic.IReadOnlyList<StrawberryShake.CodeGeneration.Analyzers.Models.InputObjectTypeModel!>!
StrawberryShake.CodeGeneration.Analyzers.Models.ClientModel.LeafTypes.get -> System.Collections.Generic.IReadOnlyList<StrawberryShake.CodeGeneration.Analyzers.Models.LeafTypeModel!>!
StrawberryShake.CodeGeneration.Analyzers.Models.ClientModel.Operations.get -> System.Collections.Generic.IReadOnlyList<StrawberryShake.CodeGeneration.Analyzers.Models.OperationModel!>!
StrawberryShake.CodeGeneration.Analyzers.Models.ClientModel.OutputTypes.get -> System.Collections.Generic.IReadOnlyList<StrawberryShake.CodeGeneration.Analyzers.Models.OutputTypeModel!>!
StrawberryShake.CodeGeneration.Analyzers.Models.ClientModel.Schema.get -> HotChocolate.ISchema!
StrawberryShake.CodeGeneration.Analyzers.Models.EntityModel
StrawberryShake.CodeGeneration.Analyzers.Models.EntityModel.Definition.get -> HotChocolate.Language.SelectionSetNode!
StrawberryShake.CodeGeneration.Analyzers.Models.EntityModel.EntityModel(HotChocolate.Types.IComplexOutputType! type) -> void
StrawberryShake.CodeGeneration.Analyzers.Models.EntityModel.Fields.get -> System.Collections.Generic.IReadOnlyList<HotChocolate.Types.IOutputField!>!
StrawberryShake.CodeGeneration.Analyzers.Models.EntityModel.Name.get -> HotChocolate.NameString
StrawberryShake.CodeGeneration.Analyzers.Models.EntityModel.Type.get -> HotChocolate.Types.INamedType!
StrawberryShake.CodeGeneration.Analyzers.Models.EnumTypeModel
StrawberryShake.CodeGeneration.Analyzers.Models.EnumTypeModel.EnumTypeModel(HotChocolate.NameString name, string? description, HotChocolate.Types.IEnumType! type, string? underlyingType, System.Collections.Generic.IReadOnlyList<StrawberryShake.CodeGeneration.Analyzers.Models.EnumValueModel!>! values) -> void
StrawberryShake.CodeGeneration.Analyzers.Models.EnumTypeModel.Type.get -> HotChocolate.Types.IEnumType!
StrawberryShake.CodeGeneration.Analyzers.Models.EnumTypeModel.UnderlyingType.get -> string?
StrawberryShake.CodeGeneration.Analyzers.Models.EnumTypeModel.Values.get -> System.Collections.Generic.IReadOnlyList<StrawberryShake.CodeGeneration.Analyzers.Models.EnumValueModel!>!
StrawberryShake.CodeGeneration.Analyzers.Models.EnumValueModel
StrawberryShake.CodeGeneration.Analyzers.Models.EnumValueModel.Description.get -> string?
StrawberryShake.CodeGeneration.Analyzers.Models.EnumValueModel.EnumValueModel(HotChocolate.NameString name, string? description, HotChocolate.Types.IEnumValue! value, string? underlyingValue) -> void
StrawberryShake.CodeGeneration.Analyzers.Models.EnumValueModel.Name.get -> HotChocolate.NameString
StrawberryShake.CodeGeneration.Analyzers.Models.EnumValueModel.UnderlyingValue.get -> string?
StrawberryShake.CodeGeneration.Analyzers.Models.EnumValueModel.Value.get -> HotChocolate.Types.IEnumValue!
StrawberryShake.CodeGeneration.Analyzers.Models.IFieldModel
StrawberryShake.CodeGeneration.Analyzers.Models.IFieldModel.Description.get -> string?
StrawberryShake.CodeGeneration.Analyzers.Models.IFieldModel.Field.get -> HotChocolate.Types.IField!
StrawberryShake.CodeGeneration.Analyzers.Models.IFieldModel.Name.get -> HotChocolate.NameString
StrawberryShake.CodeGeneration.Analyzers.Models.IFieldModel.Type.get -> HotChocolate.Types.IType!
StrawberryShake.CodeGeneration.Analyzers.Models.InputFieldModel
StrawberryShake.CodeGeneration.Analyzers.Models.InputFieldModel.Description.get -> string?
StrawberryShake.CodeGeneration.Analyzers.Models.InputFieldModel.Field.get -> HotChocolate.Types.IInputField!
StrawberryShake.CodeGeneration.Analyzers.Models.InputFieldModel.InputFieldModel(HotChocolate.NameString name, string? description, HotChocolate.Types.IInputField! field, HotChocolate.Types.IInputType! type) -> void
StrawberryShake.CodeGeneration.Analyzers.Models.InputFieldModel.Name.get -> HotChocolate.NameString
StrawberryShake.CodeGeneration.Analyzers.Models.InputFieldModel.Type.get -> HotChocolate.Types.IInputType!
StrawberryShake.CodeGeneration.Analyzers.Models.InputObjectTypeModel
StrawberryShake.CodeGeneration.Analyzers.Models.InputObjectTypeModel.Description.get -> string?
StrawberryShake.CodeGeneration.Analyzers.Models.InputObjectTypeModel.Fields.get -> System.Collections.Generic.IReadOnlyList<StrawberryShake.CodeGeneration.Analyzers.Models.InputFieldModel!>!
StrawberryShake.CodeGeneration.Analyzers.Models.InputObjectTypeModel.InputObjectTypeModel(HotChocolate.NameString name, string? description, HotChocolate.Types.InputObjectType! type, System.Collections.Generic.IReadOnlyList<StrawberryShake.CodeGeneration.Analyzers.Models.InputFieldModel!>! fields) -> void
StrawberryShake.CodeGeneration.Analyzers.Models.InputObjectTypeModel.Name.get -> HotChocolate.NameString
StrawberryShake.CodeGeneration.Analyzers.Models.InputObjectTypeModel.Type.get -> HotChocolate.Types.InputObjectType!
StrawberryShake.CodeGeneration.Analyzers.Models.ITypeModel
StrawberryShake.CodeGeneration.Analyzers.Models.ITypeModel.Type.get -> HotChocolate.Types.INamedType!
StrawberryShake.CodeGeneration.Analyzers.Models.LeafTypeModel
StrawberryShake.CodeGeneration.Analyzers.Models.LeafTypeModel.Description.get -> string?
StrawberryShake.CodeGeneration.Analyzers.Models.LeafTypeModel.LeafTypeModel(HotChocolate.NameString name, string? description, HotChocolate.Types.ILeafType! type, string! serializationType, string! runtimeType) -> void
StrawberryShake.CodeGeneration.Analyzers.Models.LeafTypeModel.Name.get -> HotChocolate.NameString
StrawberryShake.CodeGeneration.Analyzers.Models.LeafTypeModel.RuntimeType.get -> string!
StrawberryShake.CodeGeneration.Analyzers.Models.LeafTypeModel.SerializationType.get -> string!
StrawberryShake.CodeGeneration.Analyzers.Models.LeafTypeModel.Type.get -> HotChocolate.Types.ILeafType!
StrawberryShake.CodeGeneration.Analyzers.Models.OperationModel
StrawberryShake.CodeGeneration.Analyzers.Models.OperationModel.Arguments.get -> System.Collections.Generic.IReadOnlyList<StrawberryShake.CodeGeneration.Analyzers.Models.ArgumentModel!>!
StrawberryShake.CodeGeneration.Analyzers.Models.OperationModel.Document.get -> HotChocolate.Language.DocumentNode!
StrawberryShake.CodeGeneration.Analyzers.Models.OperationModel.GetFieldResultType(HotChocolate.Language.FieldNode! fieldSyntax) -> StrawberryShake.CodeGeneration.Analyzers.Models.OutputTypeModel!
StrawberryShake.CodeGeneration.Analyzers.Models.OperationModel.GetImplementations(StrawberryShake.CodeGeneration.Analyzers.Models.OutputTypeModel! outputType) -> System.Collections.Generic.IEnumerable<StrawberryShake.CodeGeneration.Analyzers.Models.OutputTypeModel!>!
StrawberryShake.CodeGeneration.Analyzers.Models.OperationModel.InputObjectTypes.get -> System.Collections.Generic.IReadOnlyList<StrawberryShake.CodeGeneration.Analyzers.Models.InputObjectTypeModel!>!
StrawberryShake.CodeGeneration.Analyzers.Models.OperationModel.LeafTypes.get -> System.Collections.Generic.IReadOnlyList<StrawberryShake.CodeGeneration.Analyzers.Models.LeafTypeModel!>!
StrawberryShake.CodeGeneration.Analyzers.Models.OperationModel.Name.get -> string!
StrawberryShake.CodeGeneration.Analyzers.Models.OperationModel.OperationModel(HotChocolate.NameString name, HotChocolate.Types.ObjectType! type, HotChocolate.Language.DocumentNode! document, HotChocolate.Language.OperationType operationType, System.Collections.Generic.IReadOnlyList<StrawberryShake.CodeGeneration.Analyzers.Models.ArgumentModel!>! arguments, StrawberryShake.CodeGeneration.Analyzers.Models.OutputTypeModel! resultType, System.Collections.Generic.IReadOnlyList<StrawberryShake.CodeGeneration.Analyzers.Models.LeafTypeModel!>! leafTypes, System.Collections.Generic.IReadOnlyList<StrawberryShake.CodeGeneration.Analyzers.Models.InputObjectTypeModel!>! inputObjectTypes, System.Collections.Generic.IReadOnlyList<StrawberryShake.CodeGeneration.Analyzers.Models.OutputTypeModel!>! outputTypeModels, System.Collections.Generic.IReadOnlyDictionary<StrawberryShake.CodeGeneration.Analyzers.SelectionSetInfo, HotChocolate.Language.SelectionSetNode!>! selectionSets) -> void
StrawberryShake.CodeGeneration.Analyzers.Models.OperationModel.OperationType.get -> HotChocolate.Language.OperationType
StrawberryShake.CodeGeneration.Analyzers.Models.OperationModel.OutputTypes.get -> System.Collections.Generic.IReadOnlyList<StrawberryShake.CodeGeneration.Analyzers.Models.OutputTypeModel!>!
StrawberryShake.CodeGeneration.Analyzers.Models.OperationModel.ResultType.get -> StrawberryShake.CodeGeneration.Analyzers.Models.OutputTypeModel!
StrawberryShake.CodeGeneration.Analyzers.Models.OperationModel.TryGetFieldResultType(HotChocolate.Language.FieldNode! fieldSyntax, HotChocolate.Types.INamedType! fieldNamedType, out StrawberryShake.CodeGeneration.Analyzers.Models.OutputTypeModel? fieldType) -> bool
StrawberryShake.CodeGeneration.Analyzers.Models.OperationModel.Type.get -> HotChocolate.Types.ObjectType!
StrawberryShake.CodeGeneration.Analyzers.Models.OutputFieldModel
StrawberryShake.CodeGeneration.Analyzers.Models.OutputFieldModel.Description.get -> string?
StrawberryShake.CodeGeneration.Analyzers.Models.OutputFieldModel.Field.get -> HotChocolate.Types.IOutputField!
StrawberryShake.CodeGeneration.Analyzers.Models.OutputFieldModel.Name.get -> HotChocolate.NameString
StrawberryShake.CodeGeneration.Analyzers.Models.OutputFieldModel.OutputFieldModel(HotChocolate.NameString name, HotChocolate.NameString responseName, string? description, HotChocolate.Types.IOutputField! field, HotChocolate.Types.IOutputType! type, HotChocolate.Language.FieldNode! syntaxNode, HotChocolate.Path! path) -> void
StrawberryShake.CodeGeneration.Analyzers.Models.OutputFieldModel.Path.get -> HotChocolate.Path!
StrawberryShake.CodeGeneration.Analyzers.Models.OutputFieldModel.ResponseName.get -> HotChocolate.NameString
StrawberryShake.CodeGeneration.Analyzers.Models.OutputFieldModel.SyntaxNode.get -> HotChocolate.Language.FieldNode!
StrawberryShake.CodeGeneration.Analyzers.Models.OutputFieldModel.Type.get -> HotChocolate.Types.IOutputType!
StrawberryShake.CodeGeneration.Analyzers.Models.OutputTypeModel
StrawberryShake.CodeGeneration.Analyzers.Models.OutputTypeModel.Description.get -> string?
StrawberryShake.CodeGeneration.Analyzers.Models.OutputTypeModel.Fields.get -> System.Collections.Generic.IReadOnlyList<StrawberryShake.CodeGeneration.Analyzers.Models.OutputFieldModel!>!
StrawberryShake.CodeGeneration.Analyzers.Models.OutputTypeModel.Implements.get -> System.Collections.Generic.IReadOnlyList<StrawberryShake.CodeGeneration.Analyzers.Models.OutputTypeModel!>!
StrawberryShake.CodeGeneration.Analyzers.Models.OutputTypeModel.IsInterface.get -> bool
StrawberryShake.CodeGeneration.Analyzers.Models.OutputTypeModel.Name.get -> HotChocolate.NameString
StrawberryShake.CodeGeneration.Analyzers.Models.OutputTypeModel.OutputTypeModel(HotChocolate.NameString name, string? description, bool isInterface, HotChocolate.Types.INamedType! type, HotChocolate.Language.SelectionSetNode! selectionSet, System.Collections.Generic.IReadOnlyList<StrawberryShake.CodeGeneration.Analyzers.Models.OutputFieldModel!>! fields, System.Collections.Generic.IReadOnlyList<StrawberryShake.CodeGeneration.Analyzers.Models.OutputTypeModel!>? implements = null) -> void
StrawberryShake.CodeGeneration.Analyzers.Models.OutputTypeModel.SelectionSet.get -> HotChocolate.Language.SelectionSetNode!
StrawberryShake.CodeGeneration.Analyzers.Models.OutputTypeModel.Type.get -> HotChocolate.Types.INamedType!
StrawberryShake.CodeGeneration.Analyzers.SelectionSet
StrawberryShake.CodeGeneration.Analyzers.SelectionSet.Fields.get -> System.Collections.Generic.IReadOnlyList<StrawberryShake.CodeGeneration.Analyzers.FieldSelection!>!
StrawberryShake.CodeGeneration.Analyzers.SelectionSet.FragmentNodes.get -> System.Collections.Generic.IReadOnlyList<StrawberryShake.CodeGeneration.Analyzers.FragmentNode!>!
StrawberryShake.CodeGeneration.Analyzers.SelectionSet.SelectionSet(HotChocolate.Types.INamedType! type, HotChocolate.Language.SelectionSetNode! syntaxNode, System.Collections.Generic.IReadOnlyList<StrawberryShake.CodeGeneration.Analyzers.FieldSelection!>! fields, System.Collections.Generic.IReadOnlyList<StrawberryShake.CodeGeneration.Analyzers.FragmentNode!>! fragmentNodes) -> void
StrawberryShake.CodeGeneration.Analyzers.SelectionSet.SyntaxNode.get -> HotChocolate.Language.SelectionSetNode!
StrawberryShake.CodeGeneration.Analyzers.SelectionSet.Type.get -> HotChocolate.Types.INamedType!
StrawberryShake.CodeGeneration.Analyzers.SelectionSetInfo
StrawberryShake.CodeGeneration.Analyzers.SelectionSetInfo.Equals(StrawberryShake.CodeGeneration.Analyzers.SelectionSetInfo other) -> bool
StrawberryShake.CodeGeneration.Analyzers.SelectionSetInfo.SelectionSet.get -> HotChocolate.Language.SelectionSetNode!
StrawberryShake.CodeGeneration.Analyzers.SelectionSetInfo.SelectionSetInfo() -> void
StrawberryShake.CodeGeneration.Analyzers.SelectionSetInfo.SelectionSetInfo(HotChocolate.Types.INamedType! type, HotChocolate.Language.SelectionSetNode! selectionSet) -> void
StrawberryShake.CodeGeneration.Analyzers.SelectionSetInfo.Type.get -> HotChocolate.Types.INamedType!
StrawberryShake.CodeGeneration.Analyzers.SelectionSetVariants
StrawberryShake.CodeGeneration.Analyzers.SelectionSetVariants.ReturnType.get -> StrawberryShake.CodeGeneration.Analyzers.SelectionSet!
StrawberryShake.CodeGeneration.Analyzers.SelectionSetVariants.SelectionSetVariants(StrawberryShake.CodeGeneration.Analyzers.SelectionSet! returnType, System.Collections.Generic.IReadOnlyList<StrawberryShake.CodeGeneration.Analyzers.SelectionSet!>? variants = null) -> void
StrawberryShake.CodeGeneration.Analyzers.SelectionSetVariants.Variants.get -> System.Collections.Generic.IReadOnlyList<StrawberryShake.CodeGeneration.Analyzers.SelectionSet!>!
StrawberryShake.CodeGeneration.Analyzers.Types.EnumValueDirective
StrawberryShake.CodeGeneration.Analyzers.Types.EnumValueDirective.EnumValueDirective(string! value) -> void
StrawberryShake.CodeGeneration.Analyzers.Types.EnumValueDirective.Value.get -> string!
StrawberryShake.CodeGeneration.Analyzers.Types.EnumValueDirectiveType
StrawberryShake.CodeGeneration.Analyzers.Types.EnumValueDirectiveType.EnumValueDirectiveType() -> void
StrawberryShake.CodeGeneration.Analyzers.Types.RenameDirective
StrawberryShake.CodeGeneration.Analyzers.Types.RenameDirective.Name.get -> string!
StrawberryShake.CodeGeneration.Analyzers.Types.RenameDirective.RenameDirective(string! name) -> void
StrawberryShake.CodeGeneration.Analyzers.Types.RenameDirectiveType
StrawberryShake.CodeGeneration.Analyzers.Types.RenameDirectiveType.RenameDirectiveType() -> void
StrawberryShake.CodeGeneration.Analyzers.Types.RuntimeTypeDirective
StrawberryShake.CodeGeneration.Analyzers.Types.RuntimeTypeDirective.Name.get -> string!
StrawberryShake.CodeGeneration.Analyzers.Types.RuntimeTypeDirective.RuntimeTypeDirective(string! name, bool? isValueType) -> void
StrawberryShake.CodeGeneration.Analyzers.Types.RuntimeTypeDirective.ValueType.get -> bool?
StrawberryShake.CodeGeneration.Analyzers.Types.RuntimeTypeDirectiveType
StrawberryShake.CodeGeneration.Analyzers.Types.RuntimeTypeDirectiveType.RuntimeTypeDirectiveType() -> void
StrawberryShake.CodeGeneration.Analyzers.Types.SerializationTypeDirective
StrawberryShake.CodeGeneration.Analyzers.Types.SerializationTypeDirective.Name.get -> string!
StrawberryShake.CodeGeneration.Analyzers.Types.SerializationTypeDirective.SerializationTypeDirective(string! name, bool? isValueType) -> void
StrawberryShake.CodeGeneration.Analyzers.Types.SerializationTypeDirective.ValueType.get -> bool?
StrawberryShake.CodeGeneration.Analyzers.Types.SerializationTypeDirectiveType
StrawberryShake.CodeGeneration.Analyzers.Types.SerializationTypeDirectiveType.SerializationTypeDirectiveType() -> void
StrawberryShake.CodeGeneration.BuiltInScalarNames
StrawberryShake.CodeGeneration.CodeGenerationErrorCodes
StrawberryShake.CodeGeneration.CodeGenerator<TDescriptor>
StrawberryShake.CodeGeneration.CodeGenerator<TDescriptor>.CanHandle(StrawberryShake.CodeGeneration.Descriptors.ICodeDescriptor! descriptor, StrawberryShake.CodeGeneration.CSharpSyntaxGeneratorSettings! settings) -> bool
StrawberryShake.CodeGeneration.CodeGenerator<TDescriptor>.CodeGenerator() -> void
StrawberryShake.CodeGeneration.CodeGenerator<TDescriptor>.Generate(StrawberryShake.CodeGeneration.Descriptors.ICodeDescriptor! descriptor, StrawberryShake.CodeGeneration.CSharpSyntaxGeneratorSettings! settings) -> StrawberryShake.CodeGeneration.CSharpSyntaxGeneratorResult!
StrawberryShake.CodeGeneration.CodeGeneratorException
StrawberryShake.CodeGeneration.CodeGeneratorException.CodeGeneratorException(HotChocolate.IError! error) -> void
StrawberryShake.CodeGeneration.CodeGeneratorException.CodeGeneratorException(params HotChocolate.IError![]! errors) -> void
StrawberryShake.CodeGeneration.CodeGeneratorException.CodeGeneratorException(string! message) -> void
StrawberryShake.CodeGeneration.CodeGeneratorException.CodeGeneratorException(System.Collections.Generic.IEnumerable<HotChocolate.IError!>! errors) -> void
StrawberryShake.CodeGeneration.CodeGeneratorException.CodeGeneratorException(System.Runtime.Serialization.SerializationInfo! info, System.Runtime.Serialization.StreamingContext context) -> void
StrawberryShake.CodeGeneration.CodeGeneratorSettingsExtensions
StrawberryShake.CodeGeneration.CodeWriter
StrawberryShake.CodeGeneration.CodeWriter.CodeWriter(System.IO.TextWriter! writer) -> void
StrawberryShake.CodeGeneration.CodeWriter.CodeWriter(System.Text.StringBuilder! text) -> void
StrawberryShake.CodeGeneration.CodeWriter.DecreaseIndent() -> void
StrawberryShake.CodeGeneration.CodeWriter.GetIndentString() -> string!
StrawberryShake.CodeGeneration.CodeWriter.IncreaseIndent() -> System.IDisposable!
StrawberryShake.CodeGeneration.CodeWriter.WriteBraces() -> System.IDisposable!
StrawberryShake.CodeGeneration.CodeWriter.WriteIndent() -> void
StrawberryShake.CodeGeneration.CodeWriter.WriteIndentedLine(string! format, params object?[]! args) -> void
StrawberryShake.CodeGeneration.CodeWriter.WriteLeftBrace() -> void
StrawberryShake.CodeGeneration.CodeWriter.WriteRightBrace() -> void
StrawberryShake.CodeGeneration.CodeWriter.WriteSpace() -> void
StrawberryShake.CodeGeneration.CodeWriter.WriteStringValue(string! value) -> void
StrawberryShake.CodeGeneration.CodeWriterExtensions
StrawberryShake.CodeGeneration.CSharp.Keywords
StrawberryShake.CodeGeneration.CSharpSyntaxGenerator<TDescriptor>
StrawberryShake.CodeGeneration.CSharpSyntaxGenerator<TDescriptor>.CanHandle(StrawberryShake.CodeGeneration.Descriptors.ICodeDescriptor! descriptor, StrawberryShake.CodeGeneration.CSharpSyntaxGeneratorSettings! settings) -> bool
StrawberryShake.CodeGeneration.CSharpSyntaxGenerator<TDescriptor>.CSharpSyntaxGenerator() -> void
StrawberryShake.CodeGeneration.CSharpSyntaxGenerator<TDescriptor>.Generate(StrawberryShake.CodeGeneration.Descriptors.ICodeDescriptor! descriptor, StrawberryShake.CodeGeneration.CSharpSyntaxGeneratorSettings! settings) -> StrawberryShake.CodeGeneration.CSharpSyntaxGeneratorResult!
StrawberryShake.CodeGeneration.CSharpSyntaxGeneratorResult
StrawberryShake.CodeGeneration.CSharpSyntaxGeneratorResult.CSharpSyntaxGeneratorResult(string! fileName, string? path, string! ns, Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeDeclarationSyntax! typeDeclaration, bool isRazorComponent = false) -> void
StrawberryShake.CodeGeneration.CSharpSyntaxGeneratorResult.FileName.get -> string!
StrawberryShake.CodeGeneration.CSharpSyntaxGeneratorResult.IsCSharpDocument.get -> bool
StrawberryShake.CodeGeneration.CSharpSyntaxGeneratorResult.IsRazorComponent.get -> bool
StrawberryShake.CodeGeneration.CSharpSyntaxGeneratorResult.Namespace.get -> string!
StrawberryShake.CodeGeneration.CSharpSyntaxGeneratorResult.Path.get -> string?
StrawberryShake.CodeGeneration.CSharpSyntaxGeneratorResult.TypeDeclaration.get -> Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeDeclarationSyntax!
StrawberryShake.CodeGeneration.CSharpSyntaxGeneratorSettings
StrawberryShake.CodeGeneration.CSharpSyntaxGeneratorSettings.CSharpSyntaxGeneratorSettings(bool noStore, bool inputRecords, bool entityRecords, bool razorComponents) -> void
StrawberryShake.CodeGeneration.CSharpSyntaxGeneratorSettings.EntityRecords.get -> bool
StrawberryShake.CodeGeneration.CSharpSyntaxGeneratorSettings.InputRecords.get -> bool
StrawberryShake.CodeGeneration.CSharpSyntaxGeneratorSettings.NoStore.get -> bool
StrawberryShake.CodeGeneration.CSharpSyntaxGeneratorSettings.RazorComponents.get -> bool
StrawberryShake.CodeGeneration.Descriptors.ClientDescriptor
StrawberryShake.CodeGeneration.Descriptors.ClientDescriptor.ClientDescriptor(HotChocolate.NameString name, string! namespace, System.Collections.Generic.List<StrawberryShake.CodeGeneration.Descriptors.Operations.OperationDescriptor!>! operations) -> void
StrawberryShake.CodeGeneration.Descriptors.ClientDescriptor.Documentation.get -> string!
StrawberryShake.CodeGeneration.Descriptors.ClientDescriptor.InterfaceType.get -> StrawberryShake.CodeGeneration.RuntimeTypeInfo!
StrawberryShake.CodeGeneration.Descriptors.ClientDescriptor.Name.get -> HotChocolate.NameString
StrawberryShake.CodeGeneration.Descriptors.ClientDescriptor.Operations.get -> System.Collections.Generic.List<StrawberryShake.CodeGeneration.Descriptors.Operations.OperationDescriptor!>!
StrawberryShake.CodeGeneration.Descriptors.ClientDescriptor.RuntimeType.get -> StrawberryShake.CodeGeneration.RuntimeTypeInfo!
StrawberryShake.CodeGeneration.Descriptors.DataTypeDescriptor
StrawberryShake.CodeGeneration.Descriptors.DataTypeDescriptor.DataTypeDescriptor(HotChocolate.NameString name, string! namespace, System.Collections.Generic.IReadOnlyList<StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.ComplexTypeDescriptor!>! operationTypes, System.Collections.Generic.IReadOnlyList<string!>! implements, string? documentation, bool isInterface = false) -> void
StrawberryShake.CodeGeneration.Descriptors.DataTypeDescriptor.Documentation.get -> string?
StrawberryShake.CodeGeneration.Descriptors.DataTypeDescriptor.Implements.get -> System.Collections.Generic.IReadOnlyList<string!>!
StrawberryShake.CodeGeneration.Descriptors.DataTypeDescriptor.IsInterface.get -> bool
StrawberryShake.CodeGeneration.Descriptors.DataTypeDescriptor.Name.get -> HotChocolate.NameString
StrawberryShake.CodeGeneration.Descriptors.DataTypeDescriptor.Properties.get -> System.Collections.Generic.IReadOnlyList<StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.PropertyDescriptor!>!
StrawberryShake.CodeGeneration.Descriptors.DataTypeDescriptor.RuntimeType.get -> StrawberryShake.CodeGeneration.RuntimeTypeInfo!
StrawberryShake.CodeGeneration.Descriptors.DependencyInjectionDescriptor
StrawberryShake.CodeGeneration.Descriptors.DependencyInjectionDescriptor.ClientDescriptor.get -> StrawberryShake.CodeGeneration.Descriptors.ClientDescriptor!
StrawberryShake.CodeGeneration.Descriptors.DependencyInjectionDescriptor.DependencyInjectionDescriptor(StrawberryShake.CodeGeneration.Descriptors.ClientDescriptor! clientDescriptor, System.Collections.Generic.IReadOnlyList<StrawberryShake.CodeGeneration.Descriptors.EntityTypeDescriptor!>! entities, System.Collections.Generic.List<StrawberryShake.CodeGeneration.Descriptors.Operations.OperationDescriptor!>! operations, System.Collections.Generic.IReadOnlyList<StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.ITypeDescriptor!>! typeDescriptors, System.Collections.Generic.IReadOnlyList<StrawberryShake.CodeGeneration.TransportProfile!>! transportProfiles, StrawberryShake.CodeGeneration.Descriptors.EntityIdFactoryDescriptor! entityIdFactoryDescriptor, StrawberryShake.CodeGeneration.Descriptors.StoreAccessorDescriptor! storeAccessorDescriptor) -> void
StrawberryShake.CodeGeneration.Descriptors.DependencyInjectionDescriptor.Entities.get -> System.Collections.Generic.IReadOnlyList<StrawberryShake.CodeGeneration.Descriptors.EntityTypeDescriptor!>!
StrawberryShake.CodeGeneration.Descriptors.DependencyInjectionDescriptor.EntityIdFactoryDescriptor.get -> StrawberryShake.CodeGeneration.Descriptors.EntityIdFactoryDescriptor!
StrawberryShake.CodeGeneration.Descriptors.DependencyInjectionDescriptor.EnumTypeDescriptor.get -> System.Collections.Generic.IReadOnlyList<StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.EnumTypeDescriptor!>!
StrawberryShake.CodeGeneration.Descriptors.DependencyInjectionDescriptor.Name.get -> HotChocolate.NameString
StrawberryShake.CodeGeneration.Descriptors.DependencyInjectionDescriptor.Operations.get -> System.Collections.Generic.List<StrawberryShake.CodeGeneration.Descriptors.Operations.OperationDescriptor!>!
StrawberryShake.CodeGeneration.Descriptors.DependencyInjectionDescriptor.StoreAccessor.get -> StrawberryShake.CodeGeneration.Descriptors.StoreAccessorDescriptor!
StrawberryShake.CodeGeneration.Descriptors.DependencyInjectionDescriptor.TransportProfiles.get -> System.Collections.Generic.IReadOnlyList<StrawberryShake.CodeGeneration.TransportProfile!>!
StrawberryShake.CodeGeneration.Descriptors.DependencyInjectionDescriptor.TypeDescriptors.get -> System.Collections.Generic.IReadOnlyList<StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.ITypeDescriptor!>!
StrawberryShake.CodeGeneration.Descriptors.EntityIdDescriptor
StrawberryShake.CodeGeneration.Descriptors.EntityIdDescriptor.EntityIdDescriptor(string! name, string! typeName, System.Collections.Generic.IReadOnlyList<StrawberryShake.CodeGeneration.Descriptors.ScalarEntityIdDescriptor!>! fields) -> void
StrawberryShake.CodeGeneration.Descriptors.EntityIdDescriptor.Fields.get -> System.Collections.Generic.IReadOnlyList<StrawberryShake.CodeGeneration.Descriptors.ScalarEntityIdDescriptor!>!
StrawberryShake.CodeGeneration.Descriptors.EntityIdDescriptor.Name.get -> string!
StrawberryShake.CodeGeneration.Descriptors.EntityIdDescriptor.TypeName.get -> string!
StrawberryShake.CodeGeneration.Descriptors.EntityIdFactoryDescriptor
StrawberryShake.CodeGeneration.Descriptors.EntityIdFactoryDescriptor.Entities.get -> System.Collections.Generic.IReadOnlyList<StrawberryShake.CodeGeneration.Descriptors.EntityIdDescriptor!>!
StrawberryShake.CodeGeneration.Descriptors.EntityIdFactoryDescriptor.EntityIdFactoryDescriptor(HotChocolate.NameString name, System.Collections.Generic.IReadOnlyList<StrawberryShake.CodeGeneration.Descriptors.EntityIdDescriptor!>! entities, string! namespace) -> void
StrawberryShake.CodeGeneration.Descriptors.EntityIdFactoryDescriptor.Name.get -> HotChocolate.NameString
StrawberryShake.CodeGeneration.Descriptors.EntityIdFactoryDescriptor.Namespace.get -> string!
StrawberryShake.CodeGeneration.Descriptors.EntityIdFactoryDescriptor.Type.get -> StrawberryShake.CodeGeneration.RuntimeTypeInfo!
StrawberryShake.CodeGeneration.Descriptors.EntityTypeDescriptor
StrawberryShake.CodeGeneration.Descriptors.EntityTypeDescriptor.Documentation.get -> string?
StrawberryShake.CodeGeneration.Descriptors.EntityTypeDescriptor.EntityTypeDescriptor(HotChocolate.NameString name, StrawberryShake.CodeGeneration.RuntimeTypeInfo! runtimeType, System.Collections.Generic.IReadOnlyList<StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.ComplexTypeDescriptor!>! possibleTypes, string? documentation) -> void
StrawberryShake.CodeGeneration.Descriptors.EntityTypeDescriptor.Name.get -> HotChocolate.NameString
StrawberryShake.CodeGeneration.Descriptors.EntityTypeDescriptor.Properties.get -> System.Collections.Generic.Dictionary<string!, StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.PropertyDescriptor!>!
StrawberryShake.CodeGeneration.Descriptors.EntityTypeDescriptor.RuntimeType.get -> StrawberryShake.CodeGeneration.RuntimeTypeInfo!
StrawberryShake.CodeGeneration.Descriptors.EnumValueDescriptor
StrawberryShake.CodeGeneration.Descriptors.EnumValueDescriptor.Documentation.get -> string?
StrawberryShake.CodeGeneration.Descriptors.EnumValueDescriptor.EnumValueDescriptor(string! runtimeValue, string! name, string? documentation, long? value = null) -> void
StrawberryShake.CodeGeneration.Descriptors.EnumValueDescriptor.Name.get -> HotChocolate.NameString
StrawberryShake.CodeGeneration.Descriptors.EnumValueDescriptor.RuntimeValue.get -> HotChocolate.NameString
StrawberryShake.CodeGeneration.Descriptors.EnumValueDescriptor.Value.get -> long?
StrawberryShake.CodeGeneration.Descriptors.ICodeDescriptor
StrawberryShake.CodeGeneration.Descriptors.ICodeDescriptor.Name.get -> HotChocolate.NameString
StrawberryShake.CodeGeneration.Descriptors.NamingConventions
StrawberryShake.CodeGeneration.Descriptors.Operations.MutationOperationDescriptor
StrawberryShake.CodeGeneration.Descriptors.Operations.MutationOperationDescriptor.MutationOperationDescriptor(HotChocolate.NameString name, string! namespace, StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.ITypeDescriptor! resultTypeReference, System.Collections.Generic.IReadOnlyList<StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.PropertyDescriptor!>! arguments, byte[]! body, string! bodyString, string! hashAlgorithm, string! hashValue, StrawberryShake.Tools.Configuration.RequestStrategy strategy) -> void
StrawberryShake.CodeGeneration.Descriptors.Operations.OperationDescriptor
StrawberryShake.CodeGeneration.Descriptors.Operations.OperationDescriptor.Arguments.get -> System.Collections.Generic.IReadOnlyList<StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.PropertyDescriptor!>!
StrawberryShake.CodeGeneration.Descriptors.Operations.OperationDescriptor.Body.get -> byte[]!
StrawberryShake.CodeGeneration.Descriptors.Operations.OperationDescriptor.BodyString.get -> string!
StrawberryShake.CodeGeneration.Descriptors.Operations.OperationDescriptor.HashAlgorithm.get -> string!
StrawberryShake.CodeGeneration.Descriptors.Operations.OperationDescriptor.HashValue.get -> string!
StrawberryShake.CodeGeneration.Descriptors.Operations.OperationDescriptor.InterfaceType.get -> StrawberryShake.CodeGeneration.RuntimeTypeInfo!
StrawberryShake.CodeGeneration.Descriptors.Operations.OperationDescriptor.Name.get -> HotChocolate.NameString
StrawberryShake.CodeGeneration.Descriptors.Operations.OperationDescriptor.OperationDescriptor(HotChocolate.NameString name, StrawberryShake.CodeGeneration.RuntimeTypeInfo! runtimeType, StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.ITypeDescriptor! resultTypeReference, System.Collections.Generic.IReadOnlyList<StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.PropertyDescriptor!>! arguments, byte[]! body, string! bodyString, string! hashAlgorithm, string! hashValue, StrawberryShake.Tools.Configuration.RequestStrategy strategy) -> void
StrawberryShake.CodeGeneration.Descriptors.Operations.OperationDescriptor.ResultTypeReference.get -> StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.ITypeDescriptor!
StrawberryShake.CodeGeneration.Descriptors.Operations.OperationDescriptor.RuntimeType.get -> StrawberryShake.CodeGeneration.RuntimeTypeInfo!
StrawberryShake.CodeGeneration.Descriptors.Operations.OperationDescriptor.Strategy.get -> StrawberryShake.Tools.Configuration.RequestStrategy
StrawberryShake.CodeGeneration.Descriptors.Operations.QueryOperationDescriptor
StrawberryShake.CodeGeneration.Descriptors.Operations.QueryOperationDescriptor.QueryOperationDescriptor(HotChocolate.NameString name, string! namespace, StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.ITypeDescriptor! resultTypeReference, System.Collections.Generic.IReadOnlyList<StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.PropertyDescriptor!>! arguments, byte[]! body, string! bodyString, string! hashAlgorithm, string! hashValue, StrawberryShake.Tools.Configuration.RequestStrategy strategy) -> void
StrawberryShake.CodeGeneration.Descriptors.Operations.SubscriptionOperationDescriptor
StrawberryShake.CodeGeneration.Descriptors.Operations.SubscriptionOperationDescriptor.SubscriptionOperationDescriptor(HotChocolate.NameString name, string! namespace, StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.ITypeDescriptor! resultTypeReference, System.Collections.Generic.IReadOnlyList<StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.PropertyDescriptor!>! arguments, byte[]! body, string! bodyString, string! hashAlgorithm, string! hashValue, StrawberryShake.Tools.Configuration.RequestStrategy strategy) -> void
StrawberryShake.CodeGeneration.Descriptors.ResultBuilderDescriptor
StrawberryShake.CodeGeneration.Descriptors.ResultBuilderDescriptor.Name.get -> HotChocolate.NameString
StrawberryShake.CodeGeneration.Descriptors.ResultBuilderDescriptor.ResultBuilderDescriptor(StrawberryShake.CodeGeneration.RuntimeTypeInfo! runtimeType, StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.INamedTypeDescriptor! resultNamedType, System.Collections.Generic.IReadOnlyCollection<StrawberryShake.CodeGeneration.Descriptors.ValueParserDescriptor>! valueParsers) -> void
StrawberryShake.CodeGeneration.Descriptors.ResultBuilderDescriptor.ResultNamedType.get -> StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.INamedTypeDescriptor!
StrawberryShake.CodeGeneration.Descriptors.ResultBuilderDescriptor.RuntimeType.get -> StrawberryShake.CodeGeneration.RuntimeTypeInfo!
StrawberryShake.CodeGeneration.Descriptors.ResultBuilderDescriptor.ValueParsers.get -> System.Collections.Generic.IReadOnlyCollection<StrawberryShake.CodeGeneration.Descriptors.ValueParserDescriptor>!
StrawberryShake.CodeGeneration.Descriptors.ResultFromEntityTypeMapperDescriptor
StrawberryShake.CodeGeneration.Descriptors.ResultFromEntityTypeMapperDescriptor.EntityNamedType.get -> StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.INamedTypeDescriptor!
StrawberryShake.CodeGeneration.Descriptors.ResultFromEntityTypeMapperDescriptor.Name.get -> HotChocolate.NameString
StrawberryShake.CodeGeneration.Descriptors.ResultFromEntityTypeMapperDescriptor.ResultFromEntityTypeMapperDescriptor(StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.INamedTypeDescriptor! entityNamedType, StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.INamedTypeDescriptor! resultNamedType) -> void
StrawberryShake.CodeGeneration.Descriptors.ResultFromEntityTypeMapperDescriptor.ResultNamedType.get -> StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.INamedTypeDescriptor!
StrawberryShake.CodeGeneration.Descriptors.ScalarEntityIdDescriptor
StrawberryShake.CodeGeneration.Descriptors.ScalarEntityIdDescriptor.Name.get -> string!
StrawberryShake.CodeGeneration.Descriptors.ScalarEntityIdDescriptor.ScalarEntityIdDescriptor(string! name, string! typeName, StrawberryShake.CodeGeneration.RuntimeTypeInfo! serializationType) -> void
StrawberryShake.CodeGeneration.Descriptors.ScalarEntityIdDescriptor.SerializationType.get -> StrawberryShake.CodeGeneration.RuntimeTypeInfo!
StrawberryShake.CodeGeneration.Descriptors.ScalarEntityIdDescriptor.TypeName.get -> string!
StrawberryShake.CodeGeneration.Descriptors.StoreAccessorDescriptor
StrawberryShake.CodeGeneration.Descriptors.StoreAccessorDescriptor.Name.get -> HotChocolate.NameString
StrawberryShake.CodeGeneration.Descriptors.StoreAccessorDescriptor.RuntimeType.get -> StrawberryShake.CodeGeneration.RuntimeTypeInfo!
StrawberryShake.CodeGeneration.Descriptors.StoreAccessorDescriptor.StoreAccessorDescriptor(HotChocolate.NameString name, string! namespace) -> void
StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.ComplexTypeDescriptor
StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.ComplexTypeDescriptor.CompleteProperties(System.Collections.Generic.IReadOnlyList<StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.PropertyDescriptor!>! properties) -> void
StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.ComplexTypeDescriptor.ComplexTypeDescriptor(HotChocolate.NameString name, StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.TypeKind typeKind, StrawberryShake.CodeGeneration.RuntimeTypeInfo! runtimeType, System.Collections.Generic.IReadOnlyList<HotChocolate.NameString>! implements, string? description, StrawberryShake.CodeGeneration.RuntimeTypeInfo? parentRuntimeType = null) -> void
StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.ComplexTypeDescriptor.Description.get -> string?
StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.ComplexTypeDescriptor.Implements.get -> System.Collections.Generic.IReadOnlyList<HotChocolate.NameString>!
StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.ComplexTypeDescriptor.Kind.get -> StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.TypeKind
StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.ComplexTypeDescriptor.Name.get -> HotChocolate.NameString
StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.ComplexTypeDescriptor.ParentRuntimeType.get -> StrawberryShake.CodeGeneration.RuntimeTypeInfo?
StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.ComplexTypeDescriptor.Properties.get -> System.Collections.Generic.IReadOnlyList<StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.PropertyDescriptor!>!
StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.ComplexTypeDescriptor.RuntimeType.get -> StrawberryShake.CodeGeneration.RuntimeTypeInfo!
StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.EnumTypeDescriptor
StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.EnumTypeDescriptor.Documentation.get -> string?
StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.EnumTypeDescriptor.EnumTypeDescriptor(HotChocolate.NameString name, StrawberryShake.CodeGeneration.RuntimeTypeInfo! runtimeType, StrawberryShake.CodeGeneration.RuntimeTypeInfo? underlyingType, System.Collections.Generic.IReadOnlyList<StrawberryShake.CodeGeneration.Descriptors.EnumValueDescriptor!>! values, string? documentation) -> void
StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.EnumTypeDescriptor.Kind.get -> StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.TypeKind
StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.EnumTypeDescriptor.Name.get -> HotChocolate.NameString
StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.EnumTypeDescriptor.RuntimeType.get -> StrawberryShake.CodeGeneration.RuntimeTypeInfo!
StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.EnumTypeDescriptor.SerializationType.get -> StrawberryShake.CodeGeneration.RuntimeTypeInfo!
StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.EnumTypeDescriptor.UnderlyingType.get -> StrawberryShake.CodeGeneration.RuntimeTypeInfo?
StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.EnumTypeDescriptor.Values.get -> System.Collections.Generic.IReadOnlyList<StrawberryShake.CodeGeneration.Descriptors.EnumValueDescriptor!>!
StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.ILeafTypeDescriptor
StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.ILeafTypeDescriptor.SerializationType.get -> StrawberryShake.CodeGeneration.RuntimeTypeInfo!
StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.INamedTypeDescriptor
StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.INamedTypeDescriptor.RuntimeType.get -> StrawberryShake.CodeGeneration.RuntimeTypeInfo!
StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.InputObjectTypeDescriptor
StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.InputObjectTypeDescriptor.CompleteProperties(System.Collections.Generic.IReadOnlyList<StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.PropertyDescriptor!>! properties) -> void
StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.InputObjectTypeDescriptor.Documentation.get -> string?
StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.InputObjectTypeDescriptor.InputObjectTypeDescriptor(HotChocolate.NameString name, StrawberryShake.CodeGeneration.RuntimeTypeInfo! runtimeType, string? documentation) -> void
StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.InputObjectTypeDescriptor.Kind.get -> StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.TypeKind
StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.InputObjectTypeDescriptor.Name.get -> HotChocolate.NameString
StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.InputObjectTypeDescriptor.Properties.get -> System.Collections.Generic.IReadOnlyList<StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.PropertyDescriptor!>!
StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.InputObjectTypeDescriptor.RuntimeType.get -> StrawberryShake.CodeGeneration.RuntimeTypeInfo!
StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.InterfaceTypeDescriptor
StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.InterfaceTypeDescriptor.ImplementedBy.get -> System.Collections.Generic.IReadOnlyCollection<StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.ObjectTypeDescriptor!>!
StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.InterfaceTypeDescriptor.InterfaceTypeDescriptor(HotChocolate.NameString name, StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.TypeKind typeKind, StrawberryShake.CodeGeneration.RuntimeTypeInfo! runtimeType, System.Collections.Generic.IReadOnlyCollection<StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.ObjectTypeDescriptor!>! implementedBy, System.Collections.Generic.IReadOnlyList<HotChocolate.NameString>! implements, string? description, StrawberryShake.CodeGeneration.RuntimeTypeInfo? parentRuntimeType = null) -> void
StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.ITypeDescriptor
StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.ITypeDescriptor.Kind.get -> StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.TypeKind
StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.ListTypeDescriptor
StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.ListTypeDescriptor.InnerType.get -> StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.ITypeDescriptor!
StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.ListTypeDescriptor.Kind.get -> StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.TypeKind
StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.ListTypeDescriptor.ListTypeDescriptor(StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.ITypeDescriptor! innerType) -> void
StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.ListTypeDescriptor.Name.get -> HotChocolate.NameString
StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.NonNullTypeDescriptor
StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.NonNullTypeDescriptor.InnerType.get -> StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.ITypeDescriptor!
StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.NonNullTypeDescriptor.Kind.get -> StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.TypeKind
StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.NonNullTypeDescriptor.Name.get -> HotChocolate.NameString
StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.NonNullTypeDescriptor.NonNullTypeDescriptor(StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.ITypeDescriptor! innerType) -> void
StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.ObjectTypeDescriptor
StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.ObjectTypeDescriptor.CompleteEntityType(StrawberryShake.CodeGeneration.Descriptors.EntityTypeDescriptor! descriptor) -> void
StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.ObjectTypeDescriptor.EntityTypeDescriptor.get -> StrawberryShake.CodeGeneration.Descriptors.EntityTypeDescriptor!
StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.ObjectTypeDescriptor.ObjectTypeDescriptor(HotChocolate.NameString name, StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.TypeKind typeKind, StrawberryShake.CodeGeneration.RuntimeTypeInfo! runtimeType, System.Collections.Generic.IReadOnlyList<HotChocolate.NameString>! implements, string? description, StrawberryShake.CodeGeneration.RuntimeTypeInfo? parentRuntimeType = null, System.Collections.Generic.IReadOnlyList<StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.PropertyDescriptor!>? properties = null) -> void
StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.PropertyDescriptor
StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.PropertyDescriptor.Description.get -> string?
StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.PropertyDescriptor.FieldName.get -> HotChocolate.NameString
StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.PropertyDescriptor.Name.get -> HotChocolate.NameString
StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.PropertyDescriptor.PropertyDescriptor(HotChocolate.NameString name, HotChocolate.NameString fieldName, StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.ITypeDescriptor! type, string? description) -> void
StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.PropertyDescriptor.Type.get -> StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.ITypeDescriptor!
StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.ScalarTypeDescriptor
StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.ScalarTypeDescriptor.Kind.get -> StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.TypeKind
StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.ScalarTypeDescriptor.Name.get -> HotChocolate.NameString
StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.ScalarTypeDescriptor.RuntimeType.get -> StrawberryShake.CodeGeneration.RuntimeTypeInfo!
StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.ScalarTypeDescriptor.ScalarTypeDescriptor(HotChocolate.NameString name, StrawberryShake.CodeGeneration.RuntimeTypeInfo! runtimeType, StrawberryShake.CodeGeneration.RuntimeTypeInfo! serializationType) -> void
StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.ScalarTypeDescriptor.SerializationType.get -> StrawberryShake.CodeGeneration.RuntimeTypeInfo!
StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.TypeDescriptors
StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.TypeKind
StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.TypeKind.AbstractData = 1 -> StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.TypeKind
StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.TypeKind.Data = 2 -> StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.TypeKind
StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.TypeKind.Entity = 3 -> StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.TypeKind
StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.TypeKind.EntityOrData = 4 -> StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.TypeKind
StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.TypeKind.Input = 6 -> StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.TypeKind
StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.TypeKind.Leaf = 0 -> StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.TypeKind
StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.TypeKind.Result = 5 -> StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.TypeKind
StrawberryShake.CodeGeneration.Descriptors.ValueParserDescriptor
StrawberryShake.CodeGeneration.Descriptors.ValueParserDescriptor.Name.get -> HotChocolate.NameString
StrawberryShake.CodeGeneration.Descriptors.ValueParserDescriptor.RuntimeType.get -> StrawberryShake.CodeGeneration.RuntimeTypeInfo!
StrawberryShake.CodeGeneration.Descriptors.ValueParserDescriptor.SerializedType.get -> StrawberryShake.CodeGeneration.RuntimeTypeInfo!
StrawberryShake.CodeGeneration.Descriptors.ValueParserDescriptor.ValueParserDescriptor() -> void
StrawberryShake.CodeGeneration.Descriptors.ValueParserDescriptor.ValueParserDescriptor(HotChocolate.NameString name, StrawberryShake.CodeGeneration.RuntimeTypeInfo! runtimeType, StrawberryShake.CodeGeneration.RuntimeTypeInfo! serializedType) -> void
StrawberryShake.CodeGeneration.ErrorHelper
StrawberryShake.CodeGeneration.Extensions.TypeDescriptorExtensions
StrawberryShake.CodeGeneration.Extensions.TypeExtensions
StrawberryShake.CodeGeneration.ICSharpSyntaxGenerator
StrawberryShake.CodeGeneration.ICSharpSyntaxGenerator.CanHandle(StrawberryShake.CodeGeneration.Descriptors.ICodeDescriptor! descriptor, StrawberryShake.CodeGeneration.CSharpSyntaxGeneratorSettings! settings) -> bool
StrawberryShake.CodeGeneration.ICSharpSyntaxGenerator.Generate(StrawberryShake.CodeGeneration.Descriptors.ICodeDescriptor! descriptor, StrawberryShake.CodeGeneration.CSharpSyntaxGeneratorSettings! settings) -> StrawberryShake.CodeGeneration.CSharpSyntaxGeneratorResult!
StrawberryShake.CodeGeneration.Mappers.ClientDescriptorMapper
StrawberryShake.CodeGeneration.Mappers.DataTypeDescriptorMapper
StrawberryShake.CodeGeneration.Mappers.DependencyInjectionMapper
StrawberryShake.CodeGeneration.Mappers.EntityIdFactoryDescriptorMapper
StrawberryShake.CodeGeneration.Mappers.EntityTypeDescriptorMapper
StrawberryShake.CodeGeneration.Mappers.IMapperContext
StrawberryShake.CodeGeneration.Mappers.IMapperContext.Client.get -> StrawberryShake.CodeGeneration.Descriptors.ClientDescriptor!
StrawberryShake.CodeGeneration.Mappers.IMapperContext.ClientName.get -> string!
StrawberryShake.CodeGeneration.Mappers.IMapperContext.EntityIdFactory.get -> StrawberryShake.CodeGeneration.Descriptors.EntityIdFactoryDescriptor!
StrawberryShake.CodeGeneration.Mappers.IMapperContext.EntityTypes.get -> System.Collections.Generic.IReadOnlyCollection<StrawberryShake.CodeGeneration.Descriptors.EntityTypeDescriptor!>!
StrawberryShake.CodeGeneration.Mappers.IMapperContext.GetRuntimeType(HotChocolate.NameString typeName, StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.TypeKind kind) -> StrawberryShake.CodeGeneration.RuntimeTypeInfo!
StrawberryShake.CodeGeneration.Mappers.IMapperContext.HashProvider.get -> HotChocolate.Language.IDocumentHashProvider!
StrawberryShake.CodeGeneration.Mappers.IMapperContext.Namespace.get -> string!
StrawberryShake.CodeGeneration.Mappers.IMapperContext.Operations.get -> System.Collections.Generic.IReadOnlyCollection<StrawberryShake.CodeGeneration.Descriptors.Operations.OperationDescriptor!>!
StrawberryShake.CodeGeneration.Mappers.IMapperContext.Register(HotChocolate.NameString operationName, StrawberryShake.CodeGeneration.Descriptors.Operations.OperationDescriptor! operationDescriptor) -> void
StrawberryShake.CodeGeneration.Mappers.IMapperContext.Register(HotChocolate.NameString resultBuilderName, StrawberryShake.CodeGeneration.Descriptors.ResultBuilderDescriptor! operationDescriptor) -> void
StrawberryShake.CodeGeneration.Mappers.IMapperContext.Register(HotChocolate.NameString typeName, StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.TypeKind kind, StrawberryShake.CodeGeneration.RuntimeTypeInfo! runtimeType) -> bool
StrawberryShake.CodeGeneration.Mappers.IMapperContext.Register(StrawberryShake.CodeGeneration.Descriptors.ClientDescriptor! clientDescriptor) -> void
StrawberryShake.CodeGeneration.Mappers.IMapperContext.Register(StrawberryShake.CodeGeneration.Descriptors.DependencyInjectionDescriptor! dependencyInjectionDescriptor) -> void
StrawberryShake.CodeGeneration.Mappers.IMapperContext.Register(StrawberryShake.CodeGeneration.Descriptors.EntityIdFactoryDescriptor! entityIdFactoryDescriptor) -> void
StrawberryShake.CodeGeneration.Mappers.IMapperContext.Register(StrawberryShake.CodeGeneration.Descriptors.StoreAccessorDescriptor! storeAccessorDescriptor) -> void
StrawberryShake.CodeGeneration.Mappers.IMapperContext.Register(System.Collections.Generic.IEnumerable<StrawberryShake.CodeGeneration.Descriptors.DataTypeDescriptor!>! dataTypeDescriptors) -> void
StrawberryShake.CodeGeneration.Mappers.IMapperContext.Register(System.Collections.Generic.IEnumerable<StrawberryShake.CodeGeneration.Descriptors.EntityTypeDescriptor!>! entityTypeDescriptor) -> void
StrawberryShake.CodeGeneration.Mappers.IMapperContext.Register(System.Collections.Generic.IEnumerable<StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.INamedTypeDescriptor!>! typeDescriptors) -> void
StrawberryShake.CodeGeneration.Mappers.IMapperContext.RequestStrategy.get -> StrawberryShake.Tools.Configuration.RequestStrategy
StrawberryShake.CodeGeneration.Mappers.IMapperContext.StoreAccessor.get -> StrawberryShake.CodeGeneration.Descriptors.StoreAccessorDescriptor!
StrawberryShake.CodeGeneration.Mappers.IMapperContext.TransportProfiles.get -> System.Collections.Generic.IReadOnlyList<StrawberryShake.CodeGeneration.TransportProfile!>!
StrawberryShake.CodeGeneration.Mappers.IMapperContext.Types.get -> System.Collections.Generic.IReadOnlyList<StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.INamedTypeDescriptor!>!
StrawberryShake.CodeGeneration.Mappers.MapperContext
StrawberryShake.CodeGeneration.Mappers.MapperContext.Client.get -> StrawberryShake.CodeGeneration.Descriptors.ClientDescriptor!
StrawberryShake.CodeGeneration.Mappers.MapperContext.ClientName.get -> string!
StrawberryShake.CodeGeneration.Mappers.MapperContext.DataTypes.get -> System.Collections.Generic.IReadOnlyCollection<StrawberryShake.CodeGeneration.Descriptors.DataTypeDescriptor!>!
StrawberryShake.CodeGeneration.Mappers.MapperContext.DependencyInjection.get -> StrawberryShake.CodeGeneration.Descriptors.DependencyInjectionDescriptor!
StrawberryShake.CodeGeneration.Mappers.MapperContext.EntityIdFactory.get -> StrawberryShake.CodeGeneration.Descriptors.EntityIdFactoryDescriptor!
StrawberryShake.CodeGeneration.Mappers.MapperContext.EntityTypes.get -> System.Collections.Generic.IReadOnlyCollection<StrawberryShake.CodeGeneration.Descriptors.EntityTypeDescriptor!>!
StrawberryShake.CodeGeneration.Mappers.MapperContext.GetAllDescriptors() -> System.Collections.Generic.IEnumerable<StrawberryShake.CodeGeneration.Descriptors.ICodeDescriptor!>!
StrawberryShake.CodeGeneration.Mappers.MapperContext.GetRuntimeType(HotChocolate.NameString typeName, StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.TypeKind kind) -> StrawberryShake.CodeGeneration.RuntimeTypeInfo!
StrawberryShake.CodeGeneration.Mappers.MapperContext.HashProvider.get -> HotChocolate.Language.IDocumentHashProvider!
StrawberryShake.CodeGeneration.Mappers.MapperContext.MapperContext(string! namespace, string! clientName, HotChocolate.Language.IDocumentHashProvider! hashProvider, StrawberryShake.Tools.Configuration.RequestStrategy requestStrategy, System.Collections.Generic.IReadOnlyList<StrawberryShake.CodeGeneration.TransportProfile!>! transportProfiles) -> void
StrawberryShake.CodeGeneration.Mappers.MapperContext.Namespace.get -> string!
StrawberryShake.CodeGeneration.Mappers.MapperContext.Operations.get -> System.Collections.Generic.IReadOnlyCollection<StrawberryShake.CodeGeneration.Descriptors.Operations.OperationDescriptor!>!
StrawberryShake.CodeGeneration.Mappers.MapperContext.Register(HotChocolate.NameString operationName, StrawberryShake.CodeGeneration.Descriptors.Operations.OperationDescriptor! operationDescriptor) -> void
StrawberryShake.CodeGeneration.Mappers.MapperContext.Register(HotChocolate.NameString operationName, StrawberryShake.CodeGeneration.Descriptors.ResultBuilderDescriptor! resultBuilderDescriptor) -> void
StrawberryShake.CodeGeneration.Mappers.MapperContext.Register(HotChocolate.NameString typeName, StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.TypeKind kind, StrawberryShake.CodeGeneration.RuntimeTypeInfo! runtimeType) -> bool
StrawberryShake.CodeGeneration.Mappers.MapperContext.Register(StrawberryShake.CodeGeneration.Descriptors.ClientDescriptor! clientDescriptor) -> void
StrawberryShake.CodeGeneration.Mappers.MapperContext.Register(StrawberryShake.CodeGeneration.Descriptors.DependencyInjectionDescriptor! dependencyInjectionDescriptor) -> void
StrawberryShake.CodeGeneration.Mappers.MapperContext.Register(StrawberryShake.CodeGeneration.Descriptors.EntityIdFactoryDescriptor! entityIdFactoryDescriptor) -> void
StrawberryShake.CodeGeneration.Mappers.MapperContext.Register(StrawberryShake.CodeGeneration.Descriptors.StoreAccessorDescriptor! storeAccessorDescriptor) -> void
StrawberryShake.CodeGeneration.Mappers.MapperContext.Register(System.Collections.Generic.IEnumerable<StrawberryShake.CodeGeneration.Descriptors.DataTypeDescriptor!>! dataTypeDescriptors) -> void
StrawberryShake.CodeGeneration.Mappers.MapperContext.Register(System.Collections.Generic.IEnumerable<StrawberryShake.CodeGeneration.Descriptors.EntityTypeDescriptor!>! entityTypeDescriptor) -> void
StrawberryShake.CodeGeneration.Mappers.MapperContext.Register(System.Collections.Generic.IEnumerable<StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.INamedTypeDescriptor!>! typeDescriptors) -> void
StrawberryShake.CodeGeneration.Mappers.MapperContext.RequestStrategy.get -> StrawberryShake.Tools.Configuration.RequestStrategy
StrawberryShake.CodeGeneration.Mappers.MapperContext.ResultBuilders.get -> System.Collections.Generic.IReadOnlyCollection<StrawberryShake.CodeGeneration.Descriptors.ResultBuilderDescriptor!>!
StrawberryShake.CodeGeneration.Mappers.MapperContext.StateNamespace.get -> string!
StrawberryShake.CodeGeneration.Mappers.MapperContext.StoreAccessor.get -> StrawberryShake.CodeGeneration.Descriptors.StoreAccessorDescriptor!
StrawberryShake.CodeGeneration.Mappers.MapperContext.TransportProfiles.get -> System.Collections.Generic.IReadOnlyList<StrawberryShake.CodeGeneration.TransportProfile!>!
StrawberryShake.CodeGeneration.Mappers.MapperContext.Types.get -> System.Collections.Generic.IReadOnlyList<StrawberryShake.CodeGeneration.Descriptors.TypeDescriptors.INamedTypeDescriptor!>!
StrawberryShake.CodeGeneration.Mappers.OperationDescriptorMapper
StrawberryShake.CodeGeneration.Mappers.ResultBuilderDescriptorMapper
StrawberryShake.CodeGeneration.Mappers.ResultBuilderDescriptorMapper.ResultBuilderDescriptorMapper() -> void
StrawberryShake.CodeGeneration.Mappers.StoreAccessorMapper
StrawberryShake.CodeGeneration.Mappers.TypeDescriptorMapper
StrawberryShake.CodeGeneration.RuntimeTypeInfo
StrawberryShake.CodeGeneration.RuntimeTypeInfo.Equals(StrawberryShake.CodeGeneration.RuntimeTypeInfo? other) -> bool
StrawberryShake.CodeGeneration.RuntimeTypeInfo.IsValueType.get -> bool
StrawberryShake.CodeGeneration.RuntimeTypeInfo.Name.get -> string!
StrawberryShake.CodeGeneration.RuntimeTypeInfo.Namespace.get -> string!
StrawberryShake.CodeGeneration.RuntimeTypeInfo.NamespaceWithoutGlobal.get -> string!
StrawberryShake.CodeGeneration.RuntimeTypeInfo.RuntimeTypeInfo(string! fullName, bool isValueType = false) -> void
StrawberryShake.CodeGeneration.RuntimeTypeInfo.RuntimeTypeInfo(string! name, string! namespace, bool isValueType = false) -> void
StrawberryShake.CodeGeneration.TransportProfile
StrawberryShake.CodeGeneration.TransportProfile.Mutation.get -> StrawberryShake.Tools.Configuration.TransportType
StrawberryShake.CodeGeneration.TransportProfile.Name.get -> string!
StrawberryShake.CodeGeneration.TransportProfile.Query.get -> StrawberryShake.Tools.Configuration.TransportType
StrawberryShake.CodeGeneration.TransportProfile.Subscription.get -> StrawberryShake.Tools.Configuration.TransportType
StrawberryShake.CodeGeneration.TransportProfile.TransportProfile(string! name, StrawberryShake.Tools.Configuration.TransportType defaultTransport, StrawberryShake.Tools.Configuration.TransportType? query = null, StrawberryShake.Tools.Configuration.TransportType? mutation = null, StrawberryShake.Tools.Configuration.TransportType? subscription = null) -> void
StrawberryShake.CodeGeneration.TypeInfos
StrawberryShake.CodeGeneration.TypeInfos.GetOrCreate(string! fullTypeName, bool valueType = false) -> StrawberryShake.CodeGeneration.RuntimeTypeInfo!
StrawberryShake.CodeGeneration.TypeInfos.TryCreate(StrawberryShake.CodeGeneration.Analyzers.Types.RuntimeTypeDirective! runtimeType) -> StrawberryShake.CodeGeneration.RuntimeTypeInfo!
StrawberryShake.CodeGeneration.TypeInfos.TypeInfos() -> void
StrawberryShake.CodeGeneration.TypeNames
StrawberryShake.CodeGeneration.Utilities.DocumentHelper
StrawberryShake.CodeGeneration.Utilities.EntityTypeInterceptor
StrawberryShake.CodeGeneration.Utilities.EntityTypeInterceptor.EntityTypeInterceptor(System.Collections.Generic.IReadOnlyList<HotChocolate.Language.SelectionSetNode!>! globalEntityPatterns, System.Collections.Generic.IReadOnlyDictionary<HotChocolate.NameString, HotChocolate.Language.SelectionSetNode!>! typeEntityPatterns) -> void
StrawberryShake.CodeGeneration.Utilities.GraphQLFile
StrawberryShake.CodeGeneration.Utilities.GraphQLFile.Document.get -> HotChocolate.Language.DocumentNode!
StrawberryShake.CodeGeneration.Utilities.GraphQLFile.FileName.get -> string!
StrawberryShake.CodeGeneration.Utilities.GraphQLFile.GraphQLFile(HotChocolate.Language.DocumentNode! document) -> void
StrawberryShake.CodeGeneration.Utilities.GraphQLFile.GraphQLFile(string! fileName, HotChocolate.Language.DocumentNode! document) -> void
StrawberryShake.CodeGeneration.Utilities.LeafTypeInterceptor
StrawberryShake.CodeGeneration.Utilities.LeafTypeInterceptor.LeafTypeInterceptor(System.Collections.Generic.Dictionary<HotChocolate.NameString, StrawberryShake.CodeGeneration.Analyzers.LeafTypeInfo>! scalarInfos) -> void
StrawberryShake.CodeGeneration.Utilities.NameUtils
StrawberryShake.CodeGeneration.Utilities.QueryDocumentRewriter
StrawberryShake.CodeGeneration.Utilities.SchemaHelper
StrawberryShake.CodeGeneration.Utilities.SerializerNameUtils
StrawberryShake.CodeGeneration.WellKnownNames
virtual StrawberryShake.CodeGeneration.CodeGenerator<TDescriptor>.CanHandle(TDescriptor descriptor, StrawberryShake.CodeGeneration.CSharpSyntaxGeneratorSettings! settings) -> bool
virtual StrawberryShake.CodeGeneration.CSharpSyntaxGenerator<TDescriptor>.CanHandle(TDescriptor descriptor, StrawberryShake.CodeGeneration.CSharpSyntaxGeneratorSettings! settings) -> bool
