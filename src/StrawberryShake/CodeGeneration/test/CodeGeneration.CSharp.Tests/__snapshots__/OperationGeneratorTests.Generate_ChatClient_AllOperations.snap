// ReSharper disable BuiltInTypeReferenceStyle
// ReSharper disable RedundantNameQualifier
// ReSharper disable ArrangeObjectCreationWhenTypeEvident
// ReSharper disable UnusedType.Global
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable UnusedMethodReturnValue.Local
// ReSharper disable ConvertToAutoProperty
// ReSharper disable UnusedMember.Global
// ReSharper disable SuggestVarOrType_SimpleTypes
// ReSharper disable InconsistentNaming

// PersonEntity

// StrawberryShake.CodeGeneration.CSharp.EntityTypeGenerator

#nullable enable

namespace Foo.Bar
{
    /// <summary>
    /// Type person
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class PersonEntity
    {
        /// <summary>
        /// Field name
        /// </summary>
        public global::System.String Name { get; set; } = default!;

        /// <summary>
        /// Field email
        /// </summary>
        public global::System.String Email { get; set; } = default!;

        /// <summary>
        /// Field isOnline
        /// </summary>
        public global::System.Boolean IsOnline { get; set; } = default!;

        /// <summary>
        /// Field imageUri
        /// </summary>
        public global::System.Uri? ImageUri { get; set; }

        /// <summary>
        /// Field lastSeen
        /// </summary>
        public global::System.DateTimeOffset LastSeen { get; set; } = default!;

        /// <summary>
        /// Field messages
        /// </summary>
        public global::Foo.Bar.State.MessageConnectionData? Messages { get; set; }
    }
}


// MessageEntity

// StrawberryShake.CodeGeneration.CSharp.EntityTypeGenerator

#nullable enable

namespace Foo.Bar
{
    /// <summary>
    /// Type message
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class MessageEntity
    {
        /// <summary>
        /// Field id
        /// </summary>
        public global::System.String Id { get; set; } = default!;

        /// <summary>
        /// Field text
        /// </summary>
        public global::System.String Text { get; set; } = default!;

        /// <summary>
        /// Field direction
        /// </summary>
        public Direction Direction { get; set; } = default!;

        /// <summary>
        /// Fiejld recipient
        /// </summary>
        public global::StrawberryShake.EntityId Recipient { get; set; } = default!;

        /// <summary>
        /// Field sender
        /// </summary>
        public global::StrawberryShake.EntityId Sender { get; set; } = default!;

        /// <summary>
        /// Field sent
        /// </summary>
        public global::System.DateTimeOffset Sent { get; set; } = default!;
    }
}


// GetPeopleResultFactory

// StrawberryShake.CodeGeneration.CSharp.ResultDataFactoryGenerator

#nullable enable

namespace Foo.Bar
{
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class GetPeopleResultFactory
        : global::StrawberryShake.IOperationResultDataFactory<GetPeopleResult>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        private readonly global::StrawberryShake.IEntityMapper<PersonEntity, GetPeople_People_Nodes_Person> _getPeople_People_Nodes_PersonFromPersonEntityMapper;

        public GetPeopleResultFactory(
            global::StrawberryShake.IEntityStore entityStore,
            global::StrawberryShake.IEntityMapper<PersonEntity, GetPeople_People_Nodes_Person> getPeople_People_Nodes_PersonFromPersonEntityMapper)
        {
            _entityStore = entityStore
                 ?? throw new global::System.ArgumentNullException(nameof(entityStore));
            _getPeople_People_Nodes_PersonFromPersonEntityMapper = getPeople_People_Nodes_PersonFromPersonEntityMapper
                 ?? throw new global::System.ArgumentNullException(nameof(getPeople_People_Nodes_PersonFromPersonEntityMapper));
        }

        public GetPeopleResult Create(global::StrawberryShake.IOperationResultDataInfo dataInfo)
        {
            if (dataInfo is GetPeopleResultInfo info)
            {
                return new GetPeopleResult(MapIGetPeople_People(info.People));
            }

            throw new global::System.ArgumentException("GetPeopleResultInfo expected.");
        }

        private IGetPeople_People? MapIGetPeople_People(global::Foo.Bar.State.PersonConnectionData data)
        {
            if (data == default)
            {
                return null;
            }

            IGetPeople_People returnValue = default!;

            if (data?.__typename.Equals(
                    "PersonConnection",
                    global::System.StringComparison.Ordinal) ?? false)
            {
                returnValue = new GetPeople_People_PersonConnection(MapIGetPeople_People_NodesArray(data.Nodes));
            }
            else {
                throw new global::System.NotSupportedException();
            }
            return returnValue;
        }

        private global::System.Collections.Generic.IReadOnlyList<IGetPeople_People_Nodes?>? MapIGetPeople_People_NodesArray(global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.EntityId?>? list)
        {
            if (list == default)
            {
                return null;
            }

            var persons = new global::System.Collections.Generic.List<IGetPeople_People_Nodes?>();

            foreach (global::StrawberryShake.EntityId? child in list)
            {
                persons.Add(MapIGetPeople_People_Nodes(child));
            }

            return persons;
        }

        private IGetPeople_People_Nodes? MapIGetPeople_People_Nodes(global::StrawberryShake.EntityId? entityId)
        {
            if (entityId == default)
            {
                return null;
            }


            if (entityId.Value.Name.Equals(
                    "Person",
                    global::System.StringComparison.Ordinal))
            {
                return _getPeople_People_Nodes_PersonFromPersonEntityMapper.Map(
                    _entityStore.GetEntity<PersonEntity>(entityId.Value)
                        ?? throw new global::StrawberryShake.GraphQLClientException());
            }
            throw new global::System.NotSupportedException();
        }
    }
}


// GetPeopleResultInfo

// StrawberryShake.CodeGeneration.CSharp.ResultInfoGenerator

#nullable enable

namespace Foo.Bar
{
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class GetPeopleResultInfo
        : global::StrawberryShake.IOperationResultDataInfo
    {
        private readonly global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> _entityIds;
        private readonly global::System.UInt64 _version;

        public GetPeopleResultInfo(
            global::Foo.Bar.State.PersonConnectionData? people,
            global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> entityIds,
            global::System.UInt64 version)
        {
            People = people;
            _entityIds = entityIds
                 ?? throw new global::System.ArgumentNullException(nameof(entityIds));
            _version = version;
        }

        /// <summary>
        /// Gets access to all the people known to this service.
        /// </summary>
        public global::Foo.Bar.State.PersonConnectionData? People { get; }

        public global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> EntityIds => _entityIds;

        public global::System.UInt64 Version => _version;

        public global::StrawberryShake.IOperationResultDataInfo WithVersion(global::System.UInt64 version)
        {
            return new GetPeopleResultInfo(
                People,
                _entityIds,
                version);
        }
    }
}


// GetPeopleResult

// StrawberryShake.CodeGeneration.CSharp.ResultTypeGenerator

#nullable enable

namespace Foo.Bar
{
    /// <summary>
    /// Type Query
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class GetPeopleResult
        : IGetPeopleResult
    {
        public GetPeopleResult(IGetPeople_People? people)
        {
            People = people;
        }

        /// <summary>
        /// Gets access to all the people known to this service.
        /// </summary>
        public IGetPeople_People? People { get; } = default!;
    }
}


// GetPeople_People_PersonConnection

// StrawberryShake.CodeGeneration.CSharp.ResultTypeGenerator

#nullable enable

namespace Foo.Bar
{
    /// <summary>
    /// A connection to a list of items.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class GetPeople_People_PersonConnection
        : IGetPeople_People_PersonConnection
    {
        public GetPeople_People_PersonConnection(global::System.Collections.Generic.IReadOnlyList<IGetPeople_People_Nodes?>? nodes)
        {
            Nodes = nodes;
        }

        /// <summary>
        /// A flattened list of the nodes.
        /// </summary>
        public global::System.Collections.Generic.IReadOnlyList<IGetPeople_People_Nodes?>? Nodes { get; } = default!;
    }
}


// GetPeople_People_Nodes_PersonFromPersonEntityMapper

// StrawberryShake.CodeGeneration.CSharp.ResultFromEntityTypeMapperGenerator

#nullable enable

namespace Foo.Bar
{
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class GetPeople_People_Nodes_PersonFromPersonEntityMapper
        : global::StrawberryShake.IEntityMapper<PersonEntity, GetPeople_People_Nodes_Person>
    {
        public GetPeople_People_Nodes_Person Map(PersonEntity entity)
        {
            return new GetPeople_People_Nodes_Person(
                entity.Name,
                entity.Email,
                entity.IsOnline,
                entity.ImageUri,
                entity.LastSeen);
        }
    }
}


// GetPeople_People_Nodes_Person

// StrawberryShake.CodeGeneration.CSharp.ResultTypeGenerator

#nullable enable

namespace Foo.Bar
{
    /// <summary>
    /// Type person
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class GetPeople_People_Nodes_Person
        : IGetPeople_People_Nodes_Person
    {
        public GetPeople_People_Nodes_Person(
            global::System.String name,
            global::System.String email,
            global::System.Boolean isOnline,
            global::System.Uri? imageUri,
            global::System.DateTimeOffset lastSeen)
        {
            Name = name;
            Email = email;
            IsOnline = isOnline;
            ImageUri = imageUri;
            LastSeen = lastSeen;
        }

        /// <summary>
        /// Field name
        /// </summary>
        public global::System.String Name { get; }

        /// <summary>
        /// Field email
        /// </summary>
        public global::System.String Email { get; }

        /// <summary>
        /// Field isOnline
        /// </summary>
        public global::System.Boolean IsOnline { get; }

        /// <summary>
        /// Field imageUri
        /// </summary>
        public global::System.Uri? ImageUri { get; } = default!;

        /// <summary>
        /// Field lastSeen
        /// </summary>
        public global::System.DateTimeOffset LastSeen { get; }
    }
}


// IGetPeopleResult

// StrawberryShake.CodeGeneration.CSharp.ResultInterfaceGenerator

#nullable enable

namespace Foo.Bar
{
    /// <summary>
    /// Type Query
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public interface IGetPeopleResult
    {
        /// <summary>
        /// Gets access to all the people known to this service.
        /// </summary>
        public IGetPeople_People? People { get; }
    }
}


// IGetPeople_People

// StrawberryShake.CodeGeneration.CSharp.ResultInterfaceGenerator

#nullable enable

namespace Foo.Bar
{
    /// <summary>
    /// A connection to a list of items.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public interface IGetPeople_People
    {
        /// <summary>
        /// A flattened list of the nodes.
        /// </summary>
        public global::System.Collections.Generic.IReadOnlyList<IGetPeople_People_Nodes?>? Nodes { get; }
    }
}


// IGetPeople_People_PersonConnection

// StrawberryShake.CodeGeneration.CSharp.ResultInterfaceGenerator

#nullable enable

namespace Foo.Bar
{
    /// <summary>
    /// A connection to a list of items.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public interface IGetPeople_People_PersonConnection
        : IGetPeople_People
    {
    }
}


// IParticipant

// StrawberryShake.CodeGeneration.CSharp.ResultInterfaceGenerator

#nullable enable

namespace Foo.Bar
{
    /// <summary>
    /// Type person
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public interface IParticipant
    {
        /// <summary>
        /// Field name
        /// </summary>
        public global::System.String Name { get; }

        /// <summary>
        /// Field email
        /// </summary>
        public global::System.String Email { get; }

        /// <summary>
        /// Field isOnline
        /// </summary>
        public global::System.Boolean IsOnline { get; }
    }
}


// IPerson

// StrawberryShake.CodeGeneration.CSharp.ResultInterfaceGenerator

#nullable enable

namespace Foo.Bar
{
    /// <summary>
    /// Type person
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public interface IPerson
        : IParticipant
    {
        /// <summary>
        /// Field imageUri
        /// </summary>
        public global::System.Uri? ImageUri { get; }

        /// <summary>
        /// Field lastSeen
        /// </summary>
        public global::System.DateTimeOffset LastSeen { get; }
    }
}


// IGetPeople_People_Nodes

// StrawberryShake.CodeGeneration.CSharp.ResultInterfaceGenerator

#nullable enable

namespace Foo.Bar
{
    /// <summary>
    /// Type person
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public interface IGetPeople_People_Nodes
        : IPerson
    {
    }
}


// IGetPeople_People_Nodes_Person

// StrawberryShake.CodeGeneration.CSharp.ResultInterfaceGenerator

#nullable enable

namespace Foo.Bar
{
    /// <summary>
    /// Type person
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public interface IGetPeople_People_Nodes_Person
        : IGetPeople_People_Nodes
    {
    }
}


// GetMessagesResultFactory

// StrawberryShake.CodeGeneration.CSharp.ResultDataFactoryGenerator

#nullable enable

namespace Foo.Bar
{
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class GetMessagesResultFactory
        : global::StrawberryShake.IOperationResultDataFactory<GetMessagesResult>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        private readonly global::StrawberryShake.IEntityMapper<PersonEntity, GetMessages_PersonByEmail_Person> _getMessages_PersonByEmail_PersonFromPersonEntityMapper;

        public GetMessagesResultFactory(
            global::StrawberryShake.IEntityStore entityStore,
            global::StrawberryShake.IEntityMapper<PersonEntity, GetMessages_PersonByEmail_Person> getMessages_PersonByEmail_PersonFromPersonEntityMapper)
        {
            _entityStore = entityStore
                 ?? throw new global::System.ArgumentNullException(nameof(entityStore));
            _getMessages_PersonByEmail_PersonFromPersonEntityMapper = getMessages_PersonByEmail_PersonFromPersonEntityMapper
                 ?? throw new global::System.ArgumentNullException(nameof(getMessages_PersonByEmail_PersonFromPersonEntityMapper));
        }

        public GetMessagesResult Create(global::StrawberryShake.IOperationResultDataInfo dataInfo)
        {
            if (dataInfo is GetMessagesResultInfo info)
            {
                return new GetMessagesResult(MapNonNullableIGetMessages_PersonByEmail(info.PersonByEmail));
            }

            throw new global::System.ArgumentException("GetMessagesResultInfo expected.");
        }

        private IGetMessages_PersonByEmail MapNonNullableIGetMessages_PersonByEmail(global::StrawberryShake.EntityId entityId)
        {

            if (entityId.Name.Equals(
                    "Person",
                    global::System.StringComparison.Ordinal))
            {
                return _getMessages_PersonByEmail_PersonFromPersonEntityMapper.Map(
                    _entityStore.GetEntity<PersonEntity>(entityId)
                        ?? throw new global::StrawberryShake.GraphQLClientException());
            }
            throw new global::System.NotSupportedException();
        }
    }
}


// GetMessagesResultInfo

// StrawberryShake.CodeGeneration.CSharp.ResultInfoGenerator

#nullable enable

namespace Foo.Bar
{
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class GetMessagesResultInfo
        : global::StrawberryShake.IOperationResultDataInfo
    {
        private readonly global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> _entityIds;
        private readonly global::System.UInt64 _version;

        public GetMessagesResultInfo(
            global::StrawberryShake.EntityId personByEmail,
            global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> entityIds,
            global::System.UInt64 version)
        {
            PersonByEmail = personByEmail;
            _entityIds = entityIds
                 ?? throw new global::System.ArgumentNullException(nameof(entityIds));
            _version = version;
        }

        /// <summary>
        /// Field personByEmail
        /// </summary>
        public global::StrawberryShake.EntityId PersonByEmail { get; }

        public global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> EntityIds => _entityIds;

        public global::System.UInt64 Version => _version;

        public global::StrawberryShake.IOperationResultDataInfo WithVersion(global::System.UInt64 version)
        {
            return new GetMessagesResultInfo(
                PersonByEmail,
                _entityIds,
                version);
        }
    }
}


// GetMessagesResult

// StrawberryShake.CodeGeneration.CSharp.ResultTypeGenerator

#nullable enable

namespace Foo.Bar
{
    /// <summary>
    /// Type Query
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class GetMessagesResult
        : IGetMessagesResult
    {
        public GetMessagesResult(IGetMessages_PersonByEmail personByEmail)
        {
            PersonByEmail = personByEmail;
        }

        /// <summary>
        /// Field personByEmail
        /// </summary>
        public IGetMessages_PersonByEmail PersonByEmail { get; }
    }
}


// GetMessages_PersonByEmail_PersonFromPersonEntityMapper

// StrawberryShake.CodeGeneration.CSharp.ResultFromEntityTypeMapperGenerator

#nullable enable

namespace Foo.Bar
{
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class GetMessages_PersonByEmail_PersonFromPersonEntityMapper
        : global::StrawberryShake.IEntityMapper<PersonEntity, GetMessages_PersonByEmail_Person>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        private readonly global::StrawberryShake.IEntityMapper<MessageEntity, GetMessages_PersonByEmail_Messages_Nodes_Message> _getMessages_PersonByEmail_Messages_Nodes_MessageFromMessageEntityMapper;
        private readonly global::StrawberryShake.IEntityMapper<PersonEntity, GetMessages_PersonByEmail_Messages_Nodes_Recipient_Person> _getMessages_PersonByEmail_Messages_Nodes_Recipient_PersonFromPersonEntityMapper;
        private readonly global::StrawberryShake.IEntityMapper<PersonEntity, GetMessages_PersonByEmail_Messages_Nodes_Sender_Person> _getMessages_PersonByEmail_Messages_Nodes_Sender_PersonFromPersonEntityMapper;

        public GetMessages_PersonByEmail_PersonFromPersonEntityMapper(
            global::StrawberryShake.IEntityStore entityStore,
            global::StrawberryShake.IEntityMapper<MessageEntity, GetMessages_PersonByEmail_Messages_Nodes_Message> getMessages_PersonByEmail_Messages_Nodes_MessageFromMessageEntityMapper,
            global::StrawberryShake.IEntityMapper<PersonEntity, GetMessages_PersonByEmail_Messages_Nodes_Recipient_Person> getMessages_PersonByEmail_Messages_Nodes_Recipient_PersonFromPersonEntityMapper,
            global::StrawberryShake.IEntityMapper<PersonEntity, GetMessages_PersonByEmail_Messages_Nodes_Sender_Person> getMessages_PersonByEmail_Messages_Nodes_Sender_PersonFromPersonEntityMapper)
        {
            _entityStore = entityStore
                 ?? throw new global::System.ArgumentNullException(nameof(entityStore));
            _getMessages_PersonByEmail_Messages_Nodes_MessageFromMessageEntityMapper = getMessages_PersonByEmail_Messages_Nodes_MessageFromMessageEntityMapper
                 ?? throw new global::System.ArgumentNullException(nameof(getMessages_PersonByEmail_Messages_Nodes_MessageFromMessageEntityMapper));
            _getMessages_PersonByEmail_Messages_Nodes_Recipient_PersonFromPersonEntityMapper = getMessages_PersonByEmail_Messages_Nodes_Recipient_PersonFromPersonEntityMapper
                 ?? throw new global::System.ArgumentNullException(nameof(getMessages_PersonByEmail_Messages_Nodes_Recipient_PersonFromPersonEntityMapper));
            _getMessages_PersonByEmail_Messages_Nodes_Sender_PersonFromPersonEntityMapper = getMessages_PersonByEmail_Messages_Nodes_Sender_PersonFromPersonEntityMapper
                 ?? throw new global::System.ArgumentNullException(nameof(getMessages_PersonByEmail_Messages_Nodes_Sender_PersonFromPersonEntityMapper));
        }

        public GetMessages_PersonByEmail_Person Map(PersonEntity entity)
        {
            return new GetMessages_PersonByEmail_Person(MapIGetMessages_PersonByEmail_Messages(entity.Messages));
        }

        private IGetMessages_PersonByEmail_Messages? MapIGetMessages_PersonByEmail_Messages(global::Foo.Bar.State.MessageConnectionData data)
        {
            if (data == default)
            {
                return null;
            }

            IGetMessages_PersonByEmail_Messages returnValue = default!;

            if (data?.__typename.Equals(
                    "MessageConnection",
                    global::System.StringComparison.Ordinal) ?? false)
            {
                returnValue = new GetMessages_PersonByEmail_Messages_MessageConnection(MapIGetMessages_PersonByEmail_Messages_NodesArray(data.Nodes));
            }
            else {
                throw new global::System.NotSupportedException();
            }
            return returnValue;
        }

        private global::System.Collections.Generic.IReadOnlyList<IGetMessages_PersonByEmail_Messages_Nodes?>? MapIGetMessages_PersonByEmail_Messages_NodesArray(global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.EntityId?>? list)
        {
            if (list == default)
            {
                return null;
            }

            var messages = new global::System.Collections.Generic.List<IGetMessages_PersonByEmail_Messages_Nodes?>();

            foreach (global::StrawberryShake.EntityId? child in list)
            {
                messages.Add(MapIGetMessages_PersonByEmail_Messages_Nodes(child));
            }

            return messages;
        }

        private IGetMessages_PersonByEmail_Messages_Nodes? MapIGetMessages_PersonByEmail_Messages_Nodes(global::StrawberryShake.EntityId? entityId)
        {
            if (entityId == default)
            {
                return null;
            }


            if (entityId.Value.Name.Equals(
                    "Message",
                    global::System.StringComparison.Ordinal))
            {
                return _getMessages_PersonByEmail_Messages_Nodes_MessageFromMessageEntityMapper.Map(
                    _entityStore.GetEntity<MessageEntity>(entityId.Value)
                        ?? throw new global::StrawberryShake.GraphQLClientException());
            }
            throw new global::System.NotSupportedException();
        }

        private IGetMessages_PersonByEmail_Messages_Nodes_Recipient MapNonNullableIGetMessages_PersonByEmail_Messages_Nodes_Recipient(global::StrawberryShake.EntityId entityId)
        {

            if (entityId.Name.Equals(
                    "Person",
                    global::System.StringComparison.Ordinal))
            {
                return _getMessages_PersonByEmail_Messages_Nodes_Recipient_PersonFromPersonEntityMapper.Map(
                    _entityStore.GetEntity<PersonEntity>(entityId)
                        ?? throw new global::StrawberryShake.GraphQLClientException());
            }
            throw new global::System.NotSupportedException();
        }

        private IGetMessages_PersonByEmail_Messages_Nodes_Sender MapNonNullableIGetMessages_PersonByEmail_Messages_Nodes_Sender(global::StrawberryShake.EntityId entityId)
        {

            if (entityId.Name.Equals(
                    "Person",
                    global::System.StringComparison.Ordinal))
            {
                return _getMessages_PersonByEmail_Messages_Nodes_Sender_PersonFromPersonEntityMapper.Map(
                    _entityStore.GetEntity<PersonEntity>(entityId)
                        ?? throw new global::StrawberryShake.GraphQLClientException());
            }
            throw new global::System.NotSupportedException();
        }
    }
}


// GetMessages_PersonByEmail_Person

// StrawberryShake.CodeGeneration.CSharp.ResultTypeGenerator

#nullable enable

namespace Foo.Bar
{
    /// <summary>
    /// Type person
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class GetMessages_PersonByEmail_Person
        : IGetMessages_PersonByEmail_Person
    {
        public GetMessages_PersonByEmail_Person(IGetMessages_PersonByEmail_Messages? messages)
        {
            Messages = messages;
        }

        /// <summary>
        /// Field messages
        /// </summary>
        public IGetMessages_PersonByEmail_Messages? Messages { get; } = default!;
    }
}


// GetMessages_PersonByEmail_Messages_MessageConnection

// StrawberryShake.CodeGeneration.CSharp.ResultTypeGenerator

#nullable enable

namespace Foo.Bar
{
    /// <summary>
    /// A connection to a list of items.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class GetMessages_PersonByEmail_Messages_MessageConnection
        : IGetMessages_PersonByEmail_Messages_MessageConnection
    {
        public GetMessages_PersonByEmail_Messages_MessageConnection(global::System.Collections.Generic.IReadOnlyList<IGetMessages_PersonByEmail_Messages_Nodes?>? nodes)
        {
            Nodes = nodes;
        }

        /// <summary>
        /// A flattened list of the nodes.
        /// </summary>
        public global::System.Collections.Generic.IReadOnlyList<IGetMessages_PersonByEmail_Messages_Nodes?>? Nodes { get; } = default!;
    }
}


// GetMessages_PersonByEmail_Messages_Nodes_MessageFromMessageEntityMapper

// StrawberryShake.CodeGeneration.CSharp.ResultFromEntityTypeMapperGenerator

#nullable enable

namespace Foo.Bar
{
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class GetMessages_PersonByEmail_Messages_Nodes_MessageFromMessageEntityMapper
        : global::StrawberryShake.IEntityMapper<MessageEntity, GetMessages_PersonByEmail_Messages_Nodes_Message>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        private readonly global::StrawberryShake.IEntityMapper<PersonEntity, GetMessages_PersonByEmail_Messages_Nodes_Recipient_Person> _getMessages_PersonByEmail_Messages_Nodes_Recipient_PersonFromPersonEntityMapper;
        private readonly global::StrawberryShake.IEntityMapper<PersonEntity, GetMessages_PersonByEmail_Messages_Nodes_Sender_Person> _getMessages_PersonByEmail_Messages_Nodes_Sender_PersonFromPersonEntityMapper;

        public GetMessages_PersonByEmail_Messages_Nodes_MessageFromMessageEntityMapper(
            global::StrawberryShake.IEntityStore entityStore,
            global::StrawberryShake.IEntityMapper<PersonEntity, GetMessages_PersonByEmail_Messages_Nodes_Recipient_Person> getMessages_PersonByEmail_Messages_Nodes_Recipient_PersonFromPersonEntityMapper,
            global::StrawberryShake.IEntityMapper<PersonEntity, GetMessages_PersonByEmail_Messages_Nodes_Sender_Person> getMessages_PersonByEmail_Messages_Nodes_Sender_PersonFromPersonEntityMapper)
        {
            _entityStore = entityStore
                 ?? throw new global::System.ArgumentNullException(nameof(entityStore));
            _getMessages_PersonByEmail_Messages_Nodes_Recipient_PersonFromPersonEntityMapper = getMessages_PersonByEmail_Messages_Nodes_Recipient_PersonFromPersonEntityMapper
                 ?? throw new global::System.ArgumentNullException(nameof(getMessages_PersonByEmail_Messages_Nodes_Recipient_PersonFromPersonEntityMapper));
            _getMessages_PersonByEmail_Messages_Nodes_Sender_PersonFromPersonEntityMapper = getMessages_PersonByEmail_Messages_Nodes_Sender_PersonFromPersonEntityMapper
                 ?? throw new global::System.ArgumentNullException(nameof(getMessages_PersonByEmail_Messages_Nodes_Sender_PersonFromPersonEntityMapper));
        }

        public GetMessages_PersonByEmail_Messages_Nodes_Message Map(MessageEntity entity)
        {
            return new GetMessages_PersonByEmail_Messages_Nodes_Message(
                entity.Id,
                entity.Text,
                entity.Direction,
                MapNonNullableIGetMessages_PersonByEmail_Messages_Nodes_Recipient(entity.Recipient),
                MapNonNullableIGetMessages_PersonByEmail_Messages_Nodes_Sender(entity.Sender),
                entity.Sent);
        }

        private IGetMessages_PersonByEmail_Messages_Nodes_Recipient MapNonNullableIGetMessages_PersonByEmail_Messages_Nodes_Recipient(global::StrawberryShake.EntityId entityId)
        {

            if (entityId.Name.Equals(
                    "Person",
                    global::System.StringComparison.Ordinal))
            {
                return _getMessages_PersonByEmail_Messages_Nodes_Recipient_PersonFromPersonEntityMapper.Map(
                    _entityStore.GetEntity<PersonEntity>(entityId)
                        ?? throw new global::StrawberryShake.GraphQLClientException());
            }
            throw new global::System.NotSupportedException();
        }

        private IGetMessages_PersonByEmail_Messages_Nodes_Sender MapNonNullableIGetMessages_PersonByEmail_Messages_Nodes_Sender(global::StrawberryShake.EntityId entityId)
        {

            if (entityId.Name.Equals(
                    "Person",
                    global::System.StringComparison.Ordinal))
            {
                return _getMessages_PersonByEmail_Messages_Nodes_Sender_PersonFromPersonEntityMapper.Map(
                    _entityStore.GetEntity<PersonEntity>(entityId)
                        ?? throw new global::StrawberryShake.GraphQLClientException());
            }
            throw new global::System.NotSupportedException();
        }
    }
}


// GetMessages_PersonByEmail_Messages_Nodes_Message

// StrawberryShake.CodeGeneration.CSharp.ResultTypeGenerator

#nullable enable

namespace Foo.Bar
{
    /// <summary>
    /// Type message
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class GetMessages_PersonByEmail_Messages_Nodes_Message
        : IGetMessages_PersonByEmail_Messages_Nodes_Message
    {
        public GetMessages_PersonByEmail_Messages_Nodes_Message(
            global::System.String id,
            global::System.String text,
            Direction direction,
            IGetMessages_PersonByEmail_Messages_Nodes_Recipient recipient,
            IGetMessages_PersonByEmail_Messages_Nodes_Sender sender,
            global::System.DateTimeOffset sent)
        {
            Id = id;
            Text = text;
            Direction = direction;
            Recipient = recipient;
            Sender = sender;
            Sent = sent;
        }

        /// <summary>
        /// Field id
        /// </summary>
        public global::System.String Id { get; }

        /// <summary>
        /// Field text
        /// </summary>
        public global::System.String Text { get; }

        /// <summary>
        /// Field direction
        /// </summary>
        public Direction Direction { get; }

        /// <summary>
        /// Fiejld recipient
        /// </summary>
        public IGetMessages_PersonByEmail_Messages_Nodes_Recipient Recipient { get; }

        /// <summary>
        /// Field sender
        /// </summary>
        public IGetMessages_PersonByEmail_Messages_Nodes_Sender Sender { get; }

        /// <summary>
        /// Field sent
        /// </summary>
        public global::System.DateTimeOffset Sent { get; }
    }
}


// GetMessages_PersonByEmail_Messages_Nodes_Recipient_PersonFromPersonEntityMapper

// StrawberryShake.CodeGeneration.CSharp.ResultFromEntityTypeMapperGenerator

#nullable enable

namespace Foo.Bar
{
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class GetMessages_PersonByEmail_Messages_Nodes_Recipient_PersonFromPersonEntityMapper
        : global::StrawberryShake.IEntityMapper<PersonEntity, GetMessages_PersonByEmail_Messages_Nodes_Recipient_Person>
    {
        public GetMessages_PersonByEmail_Messages_Nodes_Recipient_Person Map(PersonEntity entity)
        {
            return new GetMessages_PersonByEmail_Messages_Nodes_Recipient_Person(
                entity.Name,
                entity.Email,
                entity.IsOnline);
        }
    }
}


// GetMessages_PersonByEmail_Messages_Nodes_Recipient_Person

// StrawberryShake.CodeGeneration.CSharp.ResultTypeGenerator

#nullable enable

namespace Foo.Bar
{
    /// <summary>
    /// Type person
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class GetMessages_PersonByEmail_Messages_Nodes_Recipient_Person
        : IGetMessages_PersonByEmail_Messages_Nodes_Recipient_Person
    {
        public GetMessages_PersonByEmail_Messages_Nodes_Recipient_Person(
            global::System.String name,
            global::System.String email,
            global::System.Boolean isOnline)
        {
            Name = name;
            Email = email;
            IsOnline = isOnline;
        }

        /// <summary>
        /// Field name
        /// </summary>
        public global::System.String Name { get; }

        /// <summary>
        /// Field email
        /// </summary>
        public global::System.String Email { get; }

        /// <summary>
        /// Field isOnline
        /// </summary>
        public global::System.Boolean IsOnline { get; }
    }
}


// GetMessages_PersonByEmail_Messages_Nodes_Sender_PersonFromPersonEntityMapper

// StrawberryShake.CodeGeneration.CSharp.ResultFromEntityTypeMapperGenerator

#nullable enable

namespace Foo.Bar
{
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class GetMessages_PersonByEmail_Messages_Nodes_Sender_PersonFromPersonEntityMapper
        : global::StrawberryShake.IEntityMapper<PersonEntity, GetMessages_PersonByEmail_Messages_Nodes_Sender_Person>
    {
        public GetMessages_PersonByEmail_Messages_Nodes_Sender_Person Map(PersonEntity entity)
        {
            return new GetMessages_PersonByEmail_Messages_Nodes_Sender_Person(
                entity.Name,
                entity.Email,
                entity.IsOnline);
        }
    }
}


// GetMessages_PersonByEmail_Messages_Nodes_Sender_Person

// StrawberryShake.CodeGeneration.CSharp.ResultTypeGenerator

#nullable enable

namespace Foo.Bar
{
    /// <summary>
    /// Type person
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class GetMessages_PersonByEmail_Messages_Nodes_Sender_Person
        : IGetMessages_PersonByEmail_Messages_Nodes_Sender_Person
    {
        public GetMessages_PersonByEmail_Messages_Nodes_Sender_Person(
            global::System.String name,
            global::System.String email,
            global::System.Boolean isOnline)
        {
            Name = name;
            Email = email;
            IsOnline = isOnline;
        }

        /// <summary>
        /// Field name
        /// </summary>
        public global::System.String Name { get; }

        /// <summary>
        /// Field email
        /// </summary>
        public global::System.String Email { get; }

        /// <summary>
        /// Field isOnline
        /// </summary>
        public global::System.Boolean IsOnline { get; }
    }
}


// IGetMessagesResult

// StrawberryShake.CodeGeneration.CSharp.ResultInterfaceGenerator

#nullable enable

namespace Foo.Bar
{
    /// <summary>
    /// Type Query
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public interface IGetMessagesResult
    {
        /// <summary>
        /// Field personByEmail
        /// </summary>
        public IGetMessages_PersonByEmail PersonByEmail { get; }
    }
}


// IGetMessages_PersonByEmail

// StrawberryShake.CodeGeneration.CSharp.ResultInterfaceGenerator

#nullable enable

namespace Foo.Bar
{
    /// <summary>
    /// Type person
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public interface IGetMessages_PersonByEmail
    {
        /// <summary>
        /// Field messages
        /// </summary>
        public IGetMessages_PersonByEmail_Messages? Messages { get; }
    }
}


// IGetMessages_PersonByEmail_Person

// StrawberryShake.CodeGeneration.CSharp.ResultInterfaceGenerator

#nullable enable

namespace Foo.Bar
{
    /// <summary>
    /// Type person
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public interface IGetMessages_PersonByEmail_Person
        : IGetMessages_PersonByEmail
    {
    }
}


// IGetMessages_PersonByEmail_Messages

// StrawberryShake.CodeGeneration.CSharp.ResultInterfaceGenerator

#nullable enable

namespace Foo.Bar
{
    /// <summary>
    /// A connection to a list of items.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public interface IGetMessages_PersonByEmail_Messages
    {
        /// <summary>
        /// A flattened list of the nodes.
        /// </summary>
        public global::System.Collections.Generic.IReadOnlyList<IGetMessages_PersonByEmail_Messages_Nodes?>? Nodes { get; }
    }
}


// IGetMessages_PersonByEmail_Messages_MessageConnection

// StrawberryShake.CodeGeneration.CSharp.ResultInterfaceGenerator

#nullable enable

namespace Foo.Bar
{
    /// <summary>
    /// A connection to a list of items.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public interface IGetMessages_PersonByEmail_Messages_MessageConnection
        : IGetMessages_PersonByEmail_Messages
    {
    }
}


// IMessage

// StrawberryShake.CodeGeneration.CSharp.ResultInterfaceGenerator

#nullable enable

namespace Foo.Bar
{
    /// <summary>
    /// Type message
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public interface IMessage
    {
        /// <summary>
        /// Field id
        /// </summary>
        public global::System.String Id { get; }

        /// <summary>
        /// Field text
        /// </summary>
        public global::System.String Text { get; }

        /// <summary>
        /// Field direction
        /// </summary>
        public Direction Direction { get; }

        /// <summary>
        /// Fiejld recipient
        /// </summary>
        public IGetMessages_PersonByEmail_Messages_Nodes_Recipient Recipient { get; }

        /// <summary>
        /// Field sender
        /// </summary>
        public IGetMessages_PersonByEmail_Messages_Nodes_Sender Sender { get; }

        /// <summary>
        /// Field sent
        /// </summary>
        public global::System.DateTimeOffset Sent { get; }
    }
}


// IGetMessages_PersonByEmail_Messages_Nodes

// StrawberryShake.CodeGeneration.CSharp.ResultInterfaceGenerator

#nullable enable

namespace Foo.Bar
{
    /// <summary>
    /// Type message
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public interface IGetMessages_PersonByEmail_Messages_Nodes
        : IMessage
    {
    }
}


// IGetMessages_PersonByEmail_Messages_Nodes_Message

// StrawberryShake.CodeGeneration.CSharp.ResultInterfaceGenerator

#nullable enable

namespace Foo.Bar
{
    /// <summary>
    /// Type message
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public interface IGetMessages_PersonByEmail_Messages_Nodes_Message
        : IGetMessages_PersonByEmail_Messages_Nodes
    {
    }
}


// IGetMessages_PersonByEmail_Messages_Nodes_Recipient

// StrawberryShake.CodeGeneration.CSharp.ResultInterfaceGenerator

#nullable enable

namespace Foo.Bar
{
    /// <summary>
    /// Type person
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public interface IGetMessages_PersonByEmail_Messages_Nodes_Recipient
        : IParticipant
    {
    }
}


// IGetMessages_PersonByEmail_Messages_Nodes_Recipient_Person

// StrawberryShake.CodeGeneration.CSharp.ResultInterfaceGenerator

#nullable enable

namespace Foo.Bar
{
    /// <summary>
    /// Type person
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public interface IGetMessages_PersonByEmail_Messages_Nodes_Recipient_Person
        : IGetMessages_PersonByEmail_Messages_Nodes_Recipient
    {
    }
}


// IGetMessages_PersonByEmail_Messages_Nodes_Sender

// StrawberryShake.CodeGeneration.CSharp.ResultInterfaceGenerator

#nullable enable

namespace Foo.Bar
{
    /// <summary>
    /// Type person
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public interface IGetMessages_PersonByEmail_Messages_Nodes_Sender
        : IParticipant
    {
    }
}


// IGetMessages_PersonByEmail_Messages_Nodes_Sender_Person

// StrawberryShake.CodeGeneration.CSharp.ResultInterfaceGenerator

#nullable enable

namespace Foo.Bar
{
    /// <summary>
    /// Type person
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public interface IGetMessages_PersonByEmail_Messages_Nodes_Sender_Person
        : IGetMessages_PersonByEmail_Messages_Nodes_Sender
    {
    }
}


// SendMessageInput_1ResultFactory

// StrawberryShake.CodeGeneration.CSharp.ResultDataFactoryGenerator

#nullable enable

namespace Foo.Bar
{
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class SendMessageInput_1ResultFactory
        : global::StrawberryShake.IOperationResultDataFactory<SendMessageInput_1Result>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        private readonly global::StrawberryShake.IEntityMapper<MessageEntity, SendMessageInput_SendMessage_Message_Message> _sendMessageInput_SendMessage_Message_MessageFromMessageEntityMapper;
        private readonly global::StrawberryShake.IEntityMapper<PersonEntity, GetMessages_PersonByEmail_Messages_Nodes_Recipient_Person> _getMessages_PersonByEmail_Messages_Nodes_Recipient_PersonFromPersonEntityMapper;
        private readonly global::StrawberryShake.IEntityMapper<PersonEntity, GetMessages_PersonByEmail_Messages_Nodes_Sender_Person> _getMessages_PersonByEmail_Messages_Nodes_Sender_PersonFromPersonEntityMapper;

        public SendMessageInput_1ResultFactory(
            global::StrawberryShake.IEntityStore entityStore,
            global::StrawberryShake.IEntityMapper<MessageEntity, SendMessageInput_SendMessage_Message_Message> sendMessageInput_SendMessage_Message_MessageFromMessageEntityMapper,
            global::StrawberryShake.IEntityMapper<PersonEntity, GetMessages_PersonByEmail_Messages_Nodes_Recipient_Person> getMessages_PersonByEmail_Messages_Nodes_Recipient_PersonFromPersonEntityMapper,
            global::StrawberryShake.IEntityMapper<PersonEntity, GetMessages_PersonByEmail_Messages_Nodes_Sender_Person> getMessages_PersonByEmail_Messages_Nodes_Sender_PersonFromPersonEntityMapper)
        {
            _entityStore = entityStore
                 ?? throw new global::System.ArgumentNullException(nameof(entityStore));
            _sendMessageInput_SendMessage_Message_MessageFromMessageEntityMapper = sendMessageInput_SendMessage_Message_MessageFromMessageEntityMapper
                 ?? throw new global::System.ArgumentNullException(nameof(sendMessageInput_SendMessage_Message_MessageFromMessageEntityMapper));
            _getMessages_PersonByEmail_Messages_Nodes_Recipient_PersonFromPersonEntityMapper = getMessages_PersonByEmail_Messages_Nodes_Recipient_PersonFromPersonEntityMapper
                 ?? throw new global::System.ArgumentNullException(nameof(getMessages_PersonByEmail_Messages_Nodes_Recipient_PersonFromPersonEntityMapper));
            _getMessages_PersonByEmail_Messages_Nodes_Sender_PersonFromPersonEntityMapper = getMessages_PersonByEmail_Messages_Nodes_Sender_PersonFromPersonEntityMapper
                 ?? throw new global::System.ArgumentNullException(nameof(getMessages_PersonByEmail_Messages_Nodes_Sender_PersonFromPersonEntityMapper));
        }

        public SendMessageInput_1Result Create(global::StrawberryShake.IOperationResultDataInfo dataInfo)
        {
            if (dataInfo is SendMessageInput_1ResultInfo info)
            {
                return new SendMessageInput_1Result(MapNonNullableISendMessageInput_SendMessage(info.SendMessage));
            }

            throw new global::System.ArgumentException("SendMessageInput_1ResultInfo expected.");
        }

        private ISendMessageInput_SendMessage MapNonNullableISendMessageInput_SendMessage(global::Foo.Bar.State.SendMessagePayloadData data)
        {
            ISendMessageInput_SendMessage returnValue = default!;

            if (data.__typename.Equals(
                    "SendMessagePayload",
                    global::System.StringComparison.Ordinal))
            {
                returnValue = new SendMessageInput_SendMessage_SendMessagePayload(MapNonNullableISendMessageInput_SendMessage_Message(data.Message ?? throw new global::System.ArgumentNullException()));
            }
            else {
                throw new global::System.NotSupportedException();
            }
            return returnValue;
        }

        private ISendMessageInput_SendMessage_Message MapNonNullableISendMessageInput_SendMessage_Message(global::StrawberryShake.EntityId entityId)
        {

            if (entityId.Name.Equals(
                    "Message",
                    global::System.StringComparison.Ordinal))
            {
                return _sendMessageInput_SendMessage_Message_MessageFromMessageEntityMapper.Map(
                    _entityStore.GetEntity<MessageEntity>(entityId)
                        ?? throw new global::StrawberryShake.GraphQLClientException());
            }
            throw new global::System.NotSupportedException();
        }

        private IGetMessages_PersonByEmail_Messages_Nodes_Recipient MapNonNullableIGetMessages_PersonByEmail_Messages_Nodes_Recipient(global::StrawberryShake.EntityId entityId)
        {

            if (entityId.Name.Equals(
                    "Person",
                    global::System.StringComparison.Ordinal))
            {
                return _getMessages_PersonByEmail_Messages_Nodes_Recipient_PersonFromPersonEntityMapper.Map(
                    _entityStore.GetEntity<PersonEntity>(entityId)
                        ?? throw new global::StrawberryShake.GraphQLClientException());
            }
            throw new global::System.NotSupportedException();
        }

        private IGetMessages_PersonByEmail_Messages_Nodes_Sender MapNonNullableIGetMessages_PersonByEmail_Messages_Nodes_Sender(global::StrawberryShake.EntityId entityId)
        {

            if (entityId.Name.Equals(
                    "Person",
                    global::System.StringComparison.Ordinal))
            {
                return _getMessages_PersonByEmail_Messages_Nodes_Sender_PersonFromPersonEntityMapper.Map(
                    _entityStore.GetEntity<PersonEntity>(entityId)
                        ?? throw new global::StrawberryShake.GraphQLClientException());
            }
            throw new global::System.NotSupportedException();
        }
    }
}


// SendMessageInput_1ResultInfo

// StrawberryShake.CodeGeneration.CSharp.ResultInfoGenerator

#nullable enable

namespace Foo.Bar
{
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class SendMessageInput_1ResultInfo
        : global::StrawberryShake.IOperationResultDataInfo
    {
        private readonly global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> _entityIds;
        private readonly global::System.UInt64 _version;

        public SendMessageInput_1ResultInfo(
            global::Foo.Bar.State.SendMessagePayloadData sendMessage,
            global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> entityIds,
            global::System.UInt64 version)
        {
            SendMessage = sendMessage;
            _entityIds = entityIds
                 ?? throw new global::System.ArgumentNullException(nameof(entityIds));
            _version = version;
        }

        /// <summary>
        /// Field sendMessage
        /// </summary>
        public global::Foo.Bar.State.SendMessagePayloadData SendMessage { get; }

        public global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> EntityIds => _entityIds;

        public global::System.UInt64 Version => _version;

        public global::StrawberryShake.IOperationResultDataInfo WithVersion(global::System.UInt64 version)
        {
            return new SendMessageInput_1ResultInfo(
                SendMessage,
                _entityIds,
                version);
        }
    }
}


// SendMessageInput_1Result

// StrawberryShake.CodeGeneration.CSharp.ResultTypeGenerator

#nullable enable

namespace Foo.Bar
{
    /// <summary>
    /// Type Mutation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class SendMessageInput_1Result
        : ISendMessageInputResult
    {
        public SendMessageInput_1Result(ISendMessageInput_SendMessage sendMessage)
        {
            SendMessage = sendMessage;
        }

        /// <summary>
        /// Field sendMessage
        /// </summary>
        public ISendMessageInput_SendMessage SendMessage { get; }
    }
}


// SendMessageInput_SendMessage_SendMessagePayload

// StrawberryShake.CodeGeneration.CSharp.ResultTypeGenerator

#nullable enable

namespace Foo.Bar
{
    /// <summary>
    /// Type SendMessagePayload
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class SendMessageInput_SendMessage_SendMessagePayload
        : ISendMessageInput_SendMessage_SendMessagePayload
    {
        public SendMessageInput_SendMessage_SendMessagePayload(ISendMessageInput_SendMessage_Message message)
        {
            Message = message;
        }

        /// <summary>
        /// Field message
        /// </summary>
        public ISendMessageInput_SendMessage_Message Message { get; }
    }
}


// SendMessageInput_SendMessage_Message_MessageFromMessageEntityMapper

// StrawberryShake.CodeGeneration.CSharp.ResultFromEntityTypeMapperGenerator

#nullable enable

namespace Foo.Bar
{
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class SendMessageInput_SendMessage_Message_MessageFromMessageEntityMapper
        : global::StrawberryShake.IEntityMapper<MessageEntity, SendMessageInput_SendMessage_Message_Message>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        private readonly global::StrawberryShake.IEntityMapper<PersonEntity, GetMessages_PersonByEmail_Messages_Nodes_Recipient_Person> _getMessages_PersonByEmail_Messages_Nodes_Recipient_PersonFromPersonEntityMapper;
        private readonly global::StrawberryShake.IEntityMapper<PersonEntity, GetMessages_PersonByEmail_Messages_Nodes_Sender_Person> _getMessages_PersonByEmail_Messages_Nodes_Sender_PersonFromPersonEntityMapper;

        public SendMessageInput_SendMessage_Message_MessageFromMessageEntityMapper(
            global::StrawberryShake.IEntityStore entityStore,
            global::StrawberryShake.IEntityMapper<PersonEntity, GetMessages_PersonByEmail_Messages_Nodes_Recipient_Person> getMessages_PersonByEmail_Messages_Nodes_Recipient_PersonFromPersonEntityMapper,
            global::StrawberryShake.IEntityMapper<PersonEntity, GetMessages_PersonByEmail_Messages_Nodes_Sender_Person> getMessages_PersonByEmail_Messages_Nodes_Sender_PersonFromPersonEntityMapper)
        {
            _entityStore = entityStore
                 ?? throw new global::System.ArgumentNullException(nameof(entityStore));
            _getMessages_PersonByEmail_Messages_Nodes_Recipient_PersonFromPersonEntityMapper = getMessages_PersonByEmail_Messages_Nodes_Recipient_PersonFromPersonEntityMapper
                 ?? throw new global::System.ArgumentNullException(nameof(getMessages_PersonByEmail_Messages_Nodes_Recipient_PersonFromPersonEntityMapper));
            _getMessages_PersonByEmail_Messages_Nodes_Sender_PersonFromPersonEntityMapper = getMessages_PersonByEmail_Messages_Nodes_Sender_PersonFromPersonEntityMapper
                 ?? throw new global::System.ArgumentNullException(nameof(getMessages_PersonByEmail_Messages_Nodes_Sender_PersonFromPersonEntityMapper));
        }

        public SendMessageInput_SendMessage_Message_Message Map(MessageEntity entity)
        {
            return new SendMessageInput_SendMessage_Message_Message(
                entity.Id,
                entity.Text,
                entity.Direction,
                MapNonNullableIGetMessages_PersonByEmail_Messages_Nodes_Recipient(entity.Recipient),
                MapNonNullableIGetMessages_PersonByEmail_Messages_Nodes_Sender(entity.Sender),
                entity.Sent);
        }

        private IGetMessages_PersonByEmail_Messages_Nodes_Recipient MapNonNullableIGetMessages_PersonByEmail_Messages_Nodes_Recipient(global::StrawberryShake.EntityId entityId)
        {

            if (entityId.Name.Equals(
                    "Person",
                    global::System.StringComparison.Ordinal))
            {
                return _getMessages_PersonByEmail_Messages_Nodes_Recipient_PersonFromPersonEntityMapper.Map(
                    _entityStore.GetEntity<PersonEntity>(entityId)
                        ?? throw new global::StrawberryShake.GraphQLClientException());
            }
            throw new global::System.NotSupportedException();
        }

        private IGetMessages_PersonByEmail_Messages_Nodes_Sender MapNonNullableIGetMessages_PersonByEmail_Messages_Nodes_Sender(global::StrawberryShake.EntityId entityId)
        {

            if (entityId.Name.Equals(
                    "Person",
                    global::System.StringComparison.Ordinal))
            {
                return _getMessages_PersonByEmail_Messages_Nodes_Sender_PersonFromPersonEntityMapper.Map(
                    _entityStore.GetEntity<PersonEntity>(entityId)
                        ?? throw new global::StrawberryShake.GraphQLClientException());
            }
            throw new global::System.NotSupportedException();
        }
    }
}


// SendMessageInput_SendMessage_Message_Message

// StrawberryShake.CodeGeneration.CSharp.ResultTypeGenerator

#nullable enable

namespace Foo.Bar
{
    /// <summary>
    /// Type message
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class SendMessageInput_SendMessage_Message_Message
        : ISendMessageInput_SendMessage_Message_Message
    {
        public SendMessageInput_SendMessage_Message_Message(
            global::System.String id,
            global::System.String text,
            Direction direction,
            IGetMessages_PersonByEmail_Messages_Nodes_Recipient recipient,
            IGetMessages_PersonByEmail_Messages_Nodes_Sender sender,
            global::System.DateTimeOffset sent)
        {
            Id = id;
            Text = text;
            Direction = direction;
            Recipient = recipient;
            Sender = sender;
            Sent = sent;
        }

        /// <summary>
        /// Field id
        /// </summary>
        public global::System.String Id { get; }

        /// <summary>
        /// Field text
        /// </summary>
        public global::System.String Text { get; }

        /// <summary>
        /// Field direction
        /// </summary>
        public Direction Direction { get; }

        /// <summary>
        /// Fiejld recipient
        /// </summary>
        public IGetMessages_PersonByEmail_Messages_Nodes_Recipient Recipient { get; }

        /// <summary>
        /// Field sender
        /// </summary>
        public IGetMessages_PersonByEmail_Messages_Nodes_Sender Sender { get; }

        /// <summary>
        /// Field sent
        /// </summary>
        public global::System.DateTimeOffset Sent { get; }
    }
}


// SendMessageInput_SendMessage_Message_Recipient_PersonFromPersonEntityMapper

// StrawberryShake.CodeGeneration.CSharp.ResultFromEntityTypeMapperGenerator

#nullable enable

namespace Foo.Bar
{
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class SendMessageInput_SendMessage_Message_Recipient_PersonFromPersonEntityMapper
        : global::StrawberryShake.IEntityMapper<PersonEntity, SendMessageInput_SendMessage_Message_Recipient_Person>
    {
        public SendMessageInput_SendMessage_Message_Recipient_Person Map(PersonEntity entity)
        {
            return new SendMessageInput_SendMessage_Message_Recipient_Person(
                entity.Name,
                entity.Email,
                entity.IsOnline);
        }
    }
}


// SendMessageInput_SendMessage_Message_Recipient_Person

// StrawberryShake.CodeGeneration.CSharp.ResultTypeGenerator

#nullable enable

namespace Foo.Bar
{
    /// <summary>
    /// Type person
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class SendMessageInput_SendMessage_Message_Recipient_Person
        : ISendMessageInput_SendMessage_Message_Recipient_Person
    {
        public SendMessageInput_SendMessage_Message_Recipient_Person(
            global::System.String name,
            global::System.String email,
            global::System.Boolean isOnline)
        {
            Name = name;
            Email = email;
            IsOnline = isOnline;
        }

        /// <summary>
        /// Field name
        /// </summary>
        public global::System.String Name { get; }

        /// <summary>
        /// Field email
        /// </summary>
        public global::System.String Email { get; }

        /// <summary>
        /// Field isOnline
        /// </summary>
        public global::System.Boolean IsOnline { get; }
    }
}


// SendMessageInput_SendMessage_Message_Sender_PersonFromPersonEntityMapper

// StrawberryShake.CodeGeneration.CSharp.ResultFromEntityTypeMapperGenerator

#nullable enable

namespace Foo.Bar
{
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class SendMessageInput_SendMessage_Message_Sender_PersonFromPersonEntityMapper
        : global::StrawberryShake.IEntityMapper<PersonEntity, SendMessageInput_SendMessage_Message_Sender_Person>
    {
        public SendMessageInput_SendMessage_Message_Sender_Person Map(PersonEntity entity)
        {
            return new SendMessageInput_SendMessage_Message_Sender_Person(
                entity.Name,
                entity.Email,
                entity.IsOnline);
        }
    }
}


// SendMessageInput_SendMessage_Message_Sender_Person

// StrawberryShake.CodeGeneration.CSharp.ResultTypeGenerator

#nullable enable

namespace Foo.Bar
{
    /// <summary>
    /// Type person
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class SendMessageInput_SendMessage_Message_Sender_Person
        : ISendMessageInput_SendMessage_Message_Sender_Person
    {
        public SendMessageInput_SendMessage_Message_Sender_Person(
            global::System.String name,
            global::System.String email,
            global::System.Boolean isOnline)
        {
            Name = name;
            Email = email;
            IsOnline = isOnline;
        }

        /// <summary>
        /// Field name
        /// </summary>
        public global::System.String Name { get; }

        /// <summary>
        /// Field email
        /// </summary>
        public global::System.String Email { get; }

        /// <summary>
        /// Field isOnline
        /// </summary>
        public global::System.Boolean IsOnline { get; }
    }
}


// ISendMessageInputResult

// StrawberryShake.CodeGeneration.CSharp.ResultInterfaceGenerator

#nullable enable

namespace Foo.Bar
{
    /// <summary>
    /// Type Mutation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public interface ISendMessageInputResult
    {
        /// <summary>
        /// Field sendMessage
        /// </summary>
        public ISendMessageInput_SendMessage SendMessage { get; }
    }
}


// ISendMessageInput_SendMessage

// StrawberryShake.CodeGeneration.CSharp.ResultInterfaceGenerator

#nullable enable

namespace Foo.Bar
{
    /// <summary>
    /// Type SendMessagePayload
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public interface ISendMessageInput_SendMessage
    {
        /// <summary>
        /// Field message
        /// </summary>
        public ISendMessageInput_SendMessage_Message Message { get; }
    }
}


// ISendMessageInput_SendMessage_SendMessagePayload

// StrawberryShake.CodeGeneration.CSharp.ResultInterfaceGenerator

#nullable enable

namespace Foo.Bar
{
    /// <summary>
    /// Type SendMessagePayload
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public interface ISendMessageInput_SendMessage_SendMessagePayload
        : ISendMessageInput_SendMessage
    {
    }
}


// ISendMessageInput_SendMessage_Message

// StrawberryShake.CodeGeneration.CSharp.ResultInterfaceGenerator

#nullable enable

namespace Foo.Bar
{
    /// <summary>
    /// Type message
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public interface ISendMessageInput_SendMessage_Message
        : IMessage
    {
    }
}


// ISendMessageInput_SendMessage_Message_Message

// StrawberryShake.CodeGeneration.CSharp.ResultInterfaceGenerator

#nullable enable

namespace Foo.Bar
{
    /// <summary>
    /// Type message
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public interface ISendMessageInput_SendMessage_Message_Message
        : ISendMessageInput_SendMessage_Message
    {
    }
}


// ISendMessageInput_SendMessage_Message_Recipient

// StrawberryShake.CodeGeneration.CSharp.ResultInterfaceGenerator

#nullable enable

namespace Foo.Bar
{
    /// <summary>
    /// Type person
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public interface ISendMessageInput_SendMessage_Message_Recipient
        : IParticipant
    {
    }
}


// ISendMessageInput_SendMessage_Message_Recipient_Person

// StrawberryShake.CodeGeneration.CSharp.ResultInterfaceGenerator

#nullable enable

namespace Foo.Bar
{
    /// <summary>
    /// Type person
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public interface ISendMessageInput_SendMessage_Message_Recipient_Person
        : ISendMessageInput_SendMessage_Message_Recipient
    {
    }
}


// ISendMessageInput_SendMessage_Message_Sender

// StrawberryShake.CodeGeneration.CSharp.ResultInterfaceGenerator

#nullable enable

namespace Foo.Bar
{
    /// <summary>
    /// Type person
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public interface ISendMessageInput_SendMessage_Message_Sender
        : IParticipant
    {
    }
}


// ISendMessageInput_SendMessage_Message_Sender_Person

// StrawberryShake.CodeGeneration.CSharp.ResultInterfaceGenerator

#nullable enable

namespace Foo.Bar
{
    /// <summary>
    /// Type person
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public interface ISendMessageInput_SendMessage_Message_Sender_Person
        : ISendMessageInput_SendMessage_Message_Sender
    {
    }
}


// SendMessageMutResultFactory

// StrawberryShake.CodeGeneration.CSharp.ResultDataFactoryGenerator

#nullable enable

namespace Foo.Bar
{
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class SendMessageMutResultFactory
        : global::StrawberryShake.IOperationResultDataFactory<SendMessageMutResult>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        private readonly global::StrawberryShake.IEntityMapper<MessageEntity, SendMessageMut_SendMessage_Message_Message> _sendMessageMut_SendMessage_Message_MessageFromMessageEntityMapper;
        private readonly global::StrawberryShake.IEntityMapper<PersonEntity, GetMessages_PersonByEmail_Messages_Nodes_Recipient_Person> _getMessages_PersonByEmail_Messages_Nodes_Recipient_PersonFromPersonEntityMapper;
        private readonly global::StrawberryShake.IEntityMapper<PersonEntity, GetMessages_PersonByEmail_Messages_Nodes_Sender_Person> _getMessages_PersonByEmail_Messages_Nodes_Sender_PersonFromPersonEntityMapper;

        public SendMessageMutResultFactory(
            global::StrawberryShake.IEntityStore entityStore,
            global::StrawberryShake.IEntityMapper<MessageEntity, SendMessageMut_SendMessage_Message_Message> sendMessageMut_SendMessage_Message_MessageFromMessageEntityMapper,
            global::StrawberryShake.IEntityMapper<PersonEntity, GetMessages_PersonByEmail_Messages_Nodes_Recipient_Person> getMessages_PersonByEmail_Messages_Nodes_Recipient_PersonFromPersonEntityMapper,
            global::StrawberryShake.IEntityMapper<PersonEntity, GetMessages_PersonByEmail_Messages_Nodes_Sender_Person> getMessages_PersonByEmail_Messages_Nodes_Sender_PersonFromPersonEntityMapper)
        {
            _entityStore = entityStore
                 ?? throw new global::System.ArgumentNullException(nameof(entityStore));
            _sendMessageMut_SendMessage_Message_MessageFromMessageEntityMapper = sendMessageMut_SendMessage_Message_MessageFromMessageEntityMapper
                 ?? throw new global::System.ArgumentNullException(nameof(sendMessageMut_SendMessage_Message_MessageFromMessageEntityMapper));
            _getMessages_PersonByEmail_Messages_Nodes_Recipient_PersonFromPersonEntityMapper = getMessages_PersonByEmail_Messages_Nodes_Recipient_PersonFromPersonEntityMapper
                 ?? throw new global::System.ArgumentNullException(nameof(getMessages_PersonByEmail_Messages_Nodes_Recipient_PersonFromPersonEntityMapper));
            _getMessages_PersonByEmail_Messages_Nodes_Sender_PersonFromPersonEntityMapper = getMessages_PersonByEmail_Messages_Nodes_Sender_PersonFromPersonEntityMapper
                 ?? throw new global::System.ArgumentNullException(nameof(getMessages_PersonByEmail_Messages_Nodes_Sender_PersonFromPersonEntityMapper));
        }

        public SendMessageMutResult Create(global::StrawberryShake.IOperationResultDataInfo dataInfo)
        {
            if (dataInfo is SendMessageMutResultInfo info)
            {
                return new SendMessageMutResult(MapNonNullableISendMessageMut_SendMessage(info.SendMessage));
            }

            throw new global::System.ArgumentException("SendMessageMutResultInfo expected.");
        }

        private ISendMessageMut_SendMessage MapNonNullableISendMessageMut_SendMessage(global::Foo.Bar.State.SendMessagePayloadData data)
        {
            ISendMessageMut_SendMessage returnValue = default!;

            if (data.__typename.Equals(
                    "SendMessagePayload",
                    global::System.StringComparison.Ordinal))
            {
                returnValue = new SendMessageMut_SendMessage_SendMessagePayload(MapNonNullableISendMessageMut_SendMessage_Message(data.Message ?? throw new global::System.ArgumentNullException()));
            }
            else {
                throw new global::System.NotSupportedException();
            }
            return returnValue;
        }

        private ISendMessageMut_SendMessage_Message MapNonNullableISendMessageMut_SendMessage_Message(global::StrawberryShake.EntityId entityId)
        {

            if (entityId.Name.Equals(
                    "Message",
                    global::System.StringComparison.Ordinal))
            {
                return _sendMessageMut_SendMessage_Message_MessageFromMessageEntityMapper.Map(
                    _entityStore.GetEntity<MessageEntity>(entityId)
                        ?? throw new global::StrawberryShake.GraphQLClientException());
            }
            throw new global::System.NotSupportedException();
        }

        private IGetMessages_PersonByEmail_Messages_Nodes_Recipient MapNonNullableIGetMessages_PersonByEmail_Messages_Nodes_Recipient(global::StrawberryShake.EntityId entityId)
        {

            if (entityId.Name.Equals(
                    "Person",
                    global::System.StringComparison.Ordinal))
            {
                return _getMessages_PersonByEmail_Messages_Nodes_Recipient_PersonFromPersonEntityMapper.Map(
                    _entityStore.GetEntity<PersonEntity>(entityId)
                        ?? throw new global::StrawberryShake.GraphQLClientException());
            }
            throw new global::System.NotSupportedException();
        }

        private IGetMessages_PersonByEmail_Messages_Nodes_Sender MapNonNullableIGetMessages_PersonByEmail_Messages_Nodes_Sender(global::StrawberryShake.EntityId entityId)
        {

            if (entityId.Name.Equals(
                    "Person",
                    global::System.StringComparison.Ordinal))
            {
                return _getMessages_PersonByEmail_Messages_Nodes_Sender_PersonFromPersonEntityMapper.Map(
                    _entityStore.GetEntity<PersonEntity>(entityId)
                        ?? throw new global::StrawberryShake.GraphQLClientException());
            }
            throw new global::System.NotSupportedException();
        }
    }
}


// SendMessageMutResultInfo

// StrawberryShake.CodeGeneration.CSharp.ResultInfoGenerator

#nullable enable

namespace Foo.Bar
{
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class SendMessageMutResultInfo
        : global::StrawberryShake.IOperationResultDataInfo
    {
        private readonly global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> _entityIds;
        private readonly global::System.UInt64 _version;

        public SendMessageMutResultInfo(
            global::Foo.Bar.State.SendMessagePayloadData sendMessage,
            global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> entityIds,
            global::System.UInt64 version)
        {
            SendMessage = sendMessage;
            _entityIds = entityIds
                 ?? throw new global::System.ArgumentNullException(nameof(entityIds));
            _version = version;
        }

        /// <summary>
        /// Field sendMessage
        /// </summary>
        public global::Foo.Bar.State.SendMessagePayloadData SendMessage { get; }

        public global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> EntityIds => _entityIds;

        public global::System.UInt64 Version => _version;

        public global::StrawberryShake.IOperationResultDataInfo WithVersion(global::System.UInt64 version)
        {
            return new SendMessageMutResultInfo(
                SendMessage,
                _entityIds,
                version);
        }
    }
}


// SendMessageMutResult

// StrawberryShake.CodeGeneration.CSharp.ResultTypeGenerator

#nullable enable

namespace Foo.Bar
{
    /// <summary>
    /// Type Mutation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class SendMessageMutResult
        : ISendMessageMutResult
    {
        public SendMessageMutResult(ISendMessageMut_SendMessage sendMessage)
        {
            SendMessage = sendMessage;
        }

        /// <summary>
        /// Field sendMessage
        /// </summary>
        public ISendMessageMut_SendMessage SendMessage { get; }
    }
}


// SendMessageMut_SendMessage_SendMessagePayload

// StrawberryShake.CodeGeneration.CSharp.ResultTypeGenerator

#nullable enable

namespace Foo.Bar
{
    /// <summary>
    /// Type SendMessagePayload
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class SendMessageMut_SendMessage_SendMessagePayload
        : ISendMessageMut_SendMessage_SendMessagePayload
    {
        public SendMessageMut_SendMessage_SendMessagePayload(ISendMessageMut_SendMessage_Message message)
        {
            Message = message;
        }

        /// <summary>
        /// Field message
        /// </summary>
        public ISendMessageMut_SendMessage_Message Message { get; }
    }
}


// SendMessageMut_SendMessage_Message_MessageFromMessageEntityMapper

// StrawberryShake.CodeGeneration.CSharp.ResultFromEntityTypeMapperGenerator

#nullable enable

namespace Foo.Bar
{
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class SendMessageMut_SendMessage_Message_MessageFromMessageEntityMapper
        : global::StrawberryShake.IEntityMapper<MessageEntity, SendMessageMut_SendMessage_Message_Message>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        private readonly global::StrawberryShake.IEntityMapper<PersonEntity, GetMessages_PersonByEmail_Messages_Nodes_Recipient_Person> _getMessages_PersonByEmail_Messages_Nodes_Recipient_PersonFromPersonEntityMapper;
        private readonly global::StrawberryShake.IEntityMapper<PersonEntity, GetMessages_PersonByEmail_Messages_Nodes_Sender_Person> _getMessages_PersonByEmail_Messages_Nodes_Sender_PersonFromPersonEntityMapper;

        public SendMessageMut_SendMessage_Message_MessageFromMessageEntityMapper(
            global::StrawberryShake.IEntityStore entityStore,
            global::StrawberryShake.IEntityMapper<PersonEntity, GetMessages_PersonByEmail_Messages_Nodes_Recipient_Person> getMessages_PersonByEmail_Messages_Nodes_Recipient_PersonFromPersonEntityMapper,
            global::StrawberryShake.IEntityMapper<PersonEntity, GetMessages_PersonByEmail_Messages_Nodes_Sender_Person> getMessages_PersonByEmail_Messages_Nodes_Sender_PersonFromPersonEntityMapper)
        {
            _entityStore = entityStore
                 ?? throw new global::System.ArgumentNullException(nameof(entityStore));
            _getMessages_PersonByEmail_Messages_Nodes_Recipient_PersonFromPersonEntityMapper = getMessages_PersonByEmail_Messages_Nodes_Recipient_PersonFromPersonEntityMapper
                 ?? throw new global::System.ArgumentNullException(nameof(getMessages_PersonByEmail_Messages_Nodes_Recipient_PersonFromPersonEntityMapper));
            _getMessages_PersonByEmail_Messages_Nodes_Sender_PersonFromPersonEntityMapper = getMessages_PersonByEmail_Messages_Nodes_Sender_PersonFromPersonEntityMapper
                 ?? throw new global::System.ArgumentNullException(nameof(getMessages_PersonByEmail_Messages_Nodes_Sender_PersonFromPersonEntityMapper));
        }

        public SendMessageMut_SendMessage_Message_Message Map(MessageEntity entity)
        {
            return new SendMessageMut_SendMessage_Message_Message(
                entity.Id,
                entity.Text,
                entity.Direction,
                MapNonNullableIGetMessages_PersonByEmail_Messages_Nodes_Recipient(entity.Recipient),
                MapNonNullableIGetMessages_PersonByEmail_Messages_Nodes_Sender(entity.Sender),
                entity.Sent);
        }

        private IGetMessages_PersonByEmail_Messages_Nodes_Recipient MapNonNullableIGetMessages_PersonByEmail_Messages_Nodes_Recipient(global::StrawberryShake.EntityId entityId)
        {

            if (entityId.Name.Equals(
                    "Person",
                    global::System.StringComparison.Ordinal))
            {
                return _getMessages_PersonByEmail_Messages_Nodes_Recipient_PersonFromPersonEntityMapper.Map(
                    _entityStore.GetEntity<PersonEntity>(entityId)
                        ?? throw new global::StrawberryShake.GraphQLClientException());
            }
            throw new global::System.NotSupportedException();
        }

        private IGetMessages_PersonByEmail_Messages_Nodes_Sender MapNonNullableIGetMessages_PersonByEmail_Messages_Nodes_Sender(global::StrawberryShake.EntityId entityId)
        {

            if (entityId.Name.Equals(
                    "Person",
                    global::System.StringComparison.Ordinal))
            {
                return _getMessages_PersonByEmail_Messages_Nodes_Sender_PersonFromPersonEntityMapper.Map(
                    _entityStore.GetEntity<PersonEntity>(entityId)
                        ?? throw new global::StrawberryShake.GraphQLClientException());
            }
            throw new global::System.NotSupportedException();
        }
    }
}


// SendMessageMut_SendMessage_Message_Message

// StrawberryShake.CodeGeneration.CSharp.ResultTypeGenerator

#nullable enable

namespace Foo.Bar
{
    /// <summary>
    /// Type message
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class SendMessageMut_SendMessage_Message_Message
        : ISendMessageMut_SendMessage_Message_Message
    {
        public SendMessageMut_SendMessage_Message_Message(
            global::System.String id,
            global::System.String text,
            Direction direction,
            IGetMessages_PersonByEmail_Messages_Nodes_Recipient recipient,
            IGetMessages_PersonByEmail_Messages_Nodes_Sender sender,
            global::System.DateTimeOffset sent)
        {
            Id = id;
            Text = text;
            Direction = direction;
            Recipient = recipient;
            Sender = sender;
            Sent = sent;
        }

        /// <summary>
        /// Field id
        /// </summary>
        public global::System.String Id { get; }

        /// <summary>
        /// Field text
        /// </summary>
        public global::System.String Text { get; }

        /// <summary>
        /// Field direction
        /// </summary>
        public Direction Direction { get; }

        /// <summary>
        /// Fiejld recipient
        /// </summary>
        public IGetMessages_PersonByEmail_Messages_Nodes_Recipient Recipient { get; }

        /// <summary>
        /// Field sender
        /// </summary>
        public IGetMessages_PersonByEmail_Messages_Nodes_Sender Sender { get; }

        /// <summary>
        /// Field sent
        /// </summary>
        public global::System.DateTimeOffset Sent { get; }
    }
}


// SendMessageMut_SendMessage_Message_Recipient_PersonFromPersonEntityMapper

// StrawberryShake.CodeGeneration.CSharp.ResultFromEntityTypeMapperGenerator

#nullable enable

namespace Foo.Bar
{
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class SendMessageMut_SendMessage_Message_Recipient_PersonFromPersonEntityMapper
        : global::StrawberryShake.IEntityMapper<PersonEntity, SendMessageMut_SendMessage_Message_Recipient_Person>
    {
        public SendMessageMut_SendMessage_Message_Recipient_Person Map(PersonEntity entity)
        {
            return new SendMessageMut_SendMessage_Message_Recipient_Person(
                entity.Name,
                entity.Email,
                entity.IsOnline);
        }
    }
}


// SendMessageMut_SendMessage_Message_Recipient_Person

// StrawberryShake.CodeGeneration.CSharp.ResultTypeGenerator

#nullable enable

namespace Foo.Bar
{
    /// <summary>
    /// Type person
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class SendMessageMut_SendMessage_Message_Recipient_Person
        : ISendMessageMut_SendMessage_Message_Recipient_Person
    {
        public SendMessageMut_SendMessage_Message_Recipient_Person(
            global::System.String name,
            global::System.String email,
            global::System.Boolean isOnline)
        {
            Name = name;
            Email = email;
            IsOnline = isOnline;
        }

        /// <summary>
        /// Field name
        /// </summary>
        public global::System.String Name { get; }

        /// <summary>
        /// Field email
        /// </summary>
        public global::System.String Email { get; }

        /// <summary>
        /// Field isOnline
        /// </summary>
        public global::System.Boolean IsOnline { get; }
    }
}


// SendMessageMut_SendMessage_Message_Sender_PersonFromPersonEntityMapper

// StrawberryShake.CodeGeneration.CSharp.ResultFromEntityTypeMapperGenerator

#nullable enable

namespace Foo.Bar
{
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class SendMessageMut_SendMessage_Message_Sender_PersonFromPersonEntityMapper
        : global::StrawberryShake.IEntityMapper<PersonEntity, SendMessageMut_SendMessage_Message_Sender_Person>
    {
        public SendMessageMut_SendMessage_Message_Sender_Person Map(PersonEntity entity)
        {
            return new SendMessageMut_SendMessage_Message_Sender_Person(
                entity.Name,
                entity.Email,
                entity.IsOnline);
        }
    }
}


// SendMessageMut_SendMessage_Message_Sender_Person

// StrawberryShake.CodeGeneration.CSharp.ResultTypeGenerator

#nullable enable

namespace Foo.Bar
{
    /// <summary>
    /// Type person
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class SendMessageMut_SendMessage_Message_Sender_Person
        : ISendMessageMut_SendMessage_Message_Sender_Person
    {
        public SendMessageMut_SendMessage_Message_Sender_Person(
            global::System.String name,
            global::System.String email,
            global::System.Boolean isOnline)
        {
            Name = name;
            Email = email;
            IsOnline = isOnline;
        }

        /// <summary>
        /// Field name
        /// </summary>
        public global::System.String Name { get; }

        /// <summary>
        /// Field email
        /// </summary>
        public global::System.String Email { get; }

        /// <summary>
        /// Field isOnline
        /// </summary>
        public global::System.Boolean IsOnline { get; }
    }
}


// ISendMessageMutResult

// StrawberryShake.CodeGeneration.CSharp.ResultInterfaceGenerator

#nullable enable

namespace Foo.Bar
{
    /// <summary>
    /// Type Mutation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public interface ISendMessageMutResult
    {
        /// <summary>
        /// Field sendMessage
        /// </summary>
        public ISendMessageMut_SendMessage SendMessage { get; }
    }
}


// ISendMessageMut_SendMessage

// StrawberryShake.CodeGeneration.CSharp.ResultInterfaceGenerator

#nullable enable

namespace Foo.Bar
{
    /// <summary>
    /// Type SendMessagePayload
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public interface ISendMessageMut_SendMessage
    {
        /// <summary>
        /// Field message
        /// </summary>
        public ISendMessageMut_SendMessage_Message Message { get; }
    }
}


// ISendMessageMut_SendMessage_SendMessagePayload

// StrawberryShake.CodeGeneration.CSharp.ResultInterfaceGenerator

#nullable enable

namespace Foo.Bar
{
    /// <summary>
    /// Type SendMessagePayload
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public interface ISendMessageMut_SendMessage_SendMessagePayload
        : ISendMessageMut_SendMessage
    {
    }
}


// ISendMessageMut_SendMessage_Message

// StrawberryShake.CodeGeneration.CSharp.ResultInterfaceGenerator

#nullable enable

namespace Foo.Bar
{
    /// <summary>
    /// Type message
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public interface ISendMessageMut_SendMessage_Message
        : IMessage
    {
    }
}


// ISendMessageMut_SendMessage_Message_Message

// StrawberryShake.CodeGeneration.CSharp.ResultInterfaceGenerator

#nullable enable

namespace Foo.Bar
{
    /// <summary>
    /// Type message
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public interface ISendMessageMut_SendMessage_Message_Message
        : ISendMessageMut_SendMessage_Message
    {
    }
}


// ISendMessageMut_SendMessage_Message_Recipient

// StrawberryShake.CodeGeneration.CSharp.ResultInterfaceGenerator

#nullable enable

namespace Foo.Bar
{
    /// <summary>
    /// Type person
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public interface ISendMessageMut_SendMessage_Message_Recipient
        : IParticipant
    {
    }
}


// ISendMessageMut_SendMessage_Message_Recipient_Person

// StrawberryShake.CodeGeneration.CSharp.ResultInterfaceGenerator

#nullable enable

namespace Foo.Bar
{
    /// <summary>
    /// Type person
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public interface ISendMessageMut_SendMessage_Message_Recipient_Person
        : ISendMessageMut_SendMessage_Message_Recipient
    {
    }
}


// ISendMessageMut_SendMessage_Message_Sender

// StrawberryShake.CodeGeneration.CSharp.ResultInterfaceGenerator

#nullable enable

namespace Foo.Bar
{
    /// <summary>
    /// Type person
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public interface ISendMessageMut_SendMessage_Message_Sender
        : IParticipant
    {
    }
}


// ISendMessageMut_SendMessage_Message_Sender_Person

// StrawberryShake.CodeGeneration.CSharp.ResultInterfaceGenerator

#nullable enable

namespace Foo.Bar
{
    /// <summary>
    /// Type person
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public interface ISendMessageMut_SendMessage_Message_Sender_Person
        : ISendMessageMut_SendMessage_Message_Sender
    {
    }
}


// ReadMessagesResultFactory

// StrawberryShake.CodeGeneration.CSharp.ResultDataFactoryGenerator

#nullable enable

namespace Foo.Bar
{
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class ReadMessagesResultFactory
        : global::StrawberryShake.IOperationResultDataFactory<ReadMessagesResult>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        private readonly global::StrawberryShake.IEntityMapper<MessageEntity, ReadMessages_Message_Message> _readMessages_Message_MessageFromMessageEntityMapper;

        public ReadMessagesResultFactory(
            global::StrawberryShake.IEntityStore entityStore,
            global::StrawberryShake.IEntityMapper<MessageEntity, ReadMessages_Message_Message> readMessages_Message_MessageFromMessageEntityMapper)
        {
            _entityStore = entityStore
                 ?? throw new global::System.ArgumentNullException(nameof(entityStore));
            _readMessages_Message_MessageFromMessageEntityMapper = readMessages_Message_MessageFromMessageEntityMapper
                 ?? throw new global::System.ArgumentNullException(nameof(readMessages_Message_MessageFromMessageEntityMapper));
        }

        public ReadMessagesResult Create(global::StrawberryShake.IOperationResultDataInfo dataInfo)
        {
            if (dataInfo is ReadMessagesResultInfo info)
            {
                return new ReadMessagesResult(MapNonNullableIReadMessages_Message(info.Message));
            }

            throw new global::System.ArgumentException("ReadMessagesResultInfo expected.");
        }

        private IReadMessages_Message MapNonNullableIReadMessages_Message(global::StrawberryShake.EntityId entityId)
        {

            if (entityId.Name.Equals(
                    "Message",
                    global::System.StringComparison.Ordinal))
            {
                return _readMessages_Message_MessageFromMessageEntityMapper.Map(
                    _entityStore.GetEntity<MessageEntity>(entityId)
                        ?? throw new global::StrawberryShake.GraphQLClientException());
            }
            throw new global::System.NotSupportedException();
        }
    }
}


// ReadMessagesResultInfo

// StrawberryShake.CodeGeneration.CSharp.ResultInfoGenerator

#nullable enable

namespace Foo.Bar
{
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class ReadMessagesResultInfo
        : global::StrawberryShake.IOperationResultDataInfo
    {
        private readonly global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> _entityIds;
        private readonly global::System.UInt64 _version;

        public ReadMessagesResultInfo(
            global::StrawberryShake.EntityId message,
            global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> entityIds,
            global::System.UInt64 version)
        {
            Message = message;
            _entityIds = entityIds
                 ?? throw new global::System.ArgumentNullException(nameof(entityIds));
            _version = version;
        }

        /// <summary>
        /// field onMessageReceived
        /// </summary>
        public global::StrawberryShake.EntityId Message { get; }

        public global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> EntityIds => _entityIds;

        public global::System.UInt64 Version => _version;

        public global::StrawberryShake.IOperationResultDataInfo WithVersion(global::System.UInt64 version)
        {
            return new ReadMessagesResultInfo(
                Message,
                _entityIds,
                version);
        }
    }
}


// ReadMessagesResult

// StrawberryShake.CodeGeneration.CSharp.ResultTypeGenerator

#nullable enable

namespace Foo.Bar
{
    /// <summary>
    /// Type SubscriptionType
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class ReadMessagesResult
        : IReadMessagesResult
    {
        public ReadMessagesResult(IReadMessages_Message message)
        {
            Message = message;
        }

        /// <summary>
        /// field onMessageReceived
        /// </summary>
        public IReadMessages_Message Message { get; }
    }
}


// ReadMessages_Message_MessageFromMessageEntityMapper

// StrawberryShake.CodeGeneration.CSharp.ResultFromEntityTypeMapperGenerator

#nullable enable

namespace Foo.Bar
{
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class ReadMessages_Message_MessageFromMessageEntityMapper
        : global::StrawberryShake.IEntityMapper<MessageEntity, ReadMessages_Message_Message>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        private readonly global::StrawberryShake.IEntityMapper<PersonEntity, GetMessages_PersonByEmail_Messages_Nodes_Recipient_Person> _getMessages_PersonByEmail_Messages_Nodes_Recipient_PersonFromPersonEntityMapper;
        private readonly global::StrawberryShake.IEntityMapper<PersonEntity, GetMessages_PersonByEmail_Messages_Nodes_Sender_Person> _getMessages_PersonByEmail_Messages_Nodes_Sender_PersonFromPersonEntityMapper;

        public ReadMessages_Message_MessageFromMessageEntityMapper(
            global::StrawberryShake.IEntityStore entityStore,
            global::StrawberryShake.IEntityMapper<PersonEntity, GetMessages_PersonByEmail_Messages_Nodes_Recipient_Person> getMessages_PersonByEmail_Messages_Nodes_Recipient_PersonFromPersonEntityMapper,
            global::StrawberryShake.IEntityMapper<PersonEntity, GetMessages_PersonByEmail_Messages_Nodes_Sender_Person> getMessages_PersonByEmail_Messages_Nodes_Sender_PersonFromPersonEntityMapper)
        {
            _entityStore = entityStore
                 ?? throw new global::System.ArgumentNullException(nameof(entityStore));
            _getMessages_PersonByEmail_Messages_Nodes_Recipient_PersonFromPersonEntityMapper = getMessages_PersonByEmail_Messages_Nodes_Recipient_PersonFromPersonEntityMapper
                 ?? throw new global::System.ArgumentNullException(nameof(getMessages_PersonByEmail_Messages_Nodes_Recipient_PersonFromPersonEntityMapper));
            _getMessages_PersonByEmail_Messages_Nodes_Sender_PersonFromPersonEntityMapper = getMessages_PersonByEmail_Messages_Nodes_Sender_PersonFromPersonEntityMapper
                 ?? throw new global::System.ArgumentNullException(nameof(getMessages_PersonByEmail_Messages_Nodes_Sender_PersonFromPersonEntityMapper));
        }

        public ReadMessages_Message_Message Map(MessageEntity entity)
        {
            return new ReadMessages_Message_Message(
                entity.Id,
                entity.Text,
                entity.Direction,
                MapNonNullableIGetMessages_PersonByEmail_Messages_Nodes_Recipient(entity.Recipient),
                MapNonNullableIGetMessages_PersonByEmail_Messages_Nodes_Sender(entity.Sender),
                entity.Sent);
        }

        private IGetMessages_PersonByEmail_Messages_Nodes_Recipient MapNonNullableIGetMessages_PersonByEmail_Messages_Nodes_Recipient(global::StrawberryShake.EntityId entityId)
        {

            if (entityId.Name.Equals(
                    "Person",
                    global::System.StringComparison.Ordinal))
            {
                return _getMessages_PersonByEmail_Messages_Nodes_Recipient_PersonFromPersonEntityMapper.Map(
                    _entityStore.GetEntity<PersonEntity>(entityId)
                        ?? throw new global::StrawberryShake.GraphQLClientException());
            }
            throw new global::System.NotSupportedException();
        }

        private IGetMessages_PersonByEmail_Messages_Nodes_Sender MapNonNullableIGetMessages_PersonByEmail_Messages_Nodes_Sender(global::StrawberryShake.EntityId entityId)
        {

            if (entityId.Name.Equals(
                    "Person",
                    global::System.StringComparison.Ordinal))
            {
                return _getMessages_PersonByEmail_Messages_Nodes_Sender_PersonFromPersonEntityMapper.Map(
                    _entityStore.GetEntity<PersonEntity>(entityId)
                        ?? throw new global::StrawberryShake.GraphQLClientException());
            }
            throw new global::System.NotSupportedException();
        }
    }
}


// ReadMessages_Message_Message

// StrawberryShake.CodeGeneration.CSharp.ResultTypeGenerator

#nullable enable

namespace Foo.Bar
{
    /// <summary>
    /// Type message
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class ReadMessages_Message_Message
        : IReadMessages_Message_Message
    {
        public ReadMessages_Message_Message(
            global::System.String id,
            global::System.String text,
            Direction direction,
            IGetMessages_PersonByEmail_Messages_Nodes_Recipient recipient,
            IGetMessages_PersonByEmail_Messages_Nodes_Sender sender,
            global::System.DateTimeOffset sent)
        {
            Id = id;
            Text = text;
            Direction = direction;
            Recipient = recipient;
            Sender = sender;
            Sent = sent;
        }

        /// <summary>
        /// Field id
        /// </summary>
        public global::System.String Id { get; }

        /// <summary>
        /// Field text
        /// </summary>
        public global::System.String Text { get; }

        /// <summary>
        /// Field direction
        /// </summary>
        public Direction Direction { get; }

        /// <summary>
        /// Fiejld recipient
        /// </summary>
        public IGetMessages_PersonByEmail_Messages_Nodes_Recipient Recipient { get; }

        /// <summary>
        /// Field sender
        /// </summary>
        public IGetMessages_PersonByEmail_Messages_Nodes_Sender Sender { get; }

        /// <summary>
        /// Field sent
        /// </summary>
        public global::System.DateTimeOffset Sent { get; }
    }
}


// ReadMessages_Message_Recipient_PersonFromPersonEntityMapper

// StrawberryShake.CodeGeneration.CSharp.ResultFromEntityTypeMapperGenerator

#nullable enable

namespace Foo.Bar
{
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class ReadMessages_Message_Recipient_PersonFromPersonEntityMapper
        : global::StrawberryShake.IEntityMapper<PersonEntity, ReadMessages_Message_Recipient_Person>
    {
        public ReadMessages_Message_Recipient_Person Map(PersonEntity entity)
        {
            return new ReadMessages_Message_Recipient_Person(
                entity.Name,
                entity.Email,
                entity.IsOnline);
        }
    }
}


// ReadMessages_Message_Recipient_Person

// StrawberryShake.CodeGeneration.CSharp.ResultTypeGenerator

#nullable enable

namespace Foo.Bar
{
    /// <summary>
    /// Type person
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class ReadMessages_Message_Recipient_Person
        : IReadMessages_Message_Recipient_Person
    {
        public ReadMessages_Message_Recipient_Person(
            global::System.String name,
            global::System.String email,
            global::System.Boolean isOnline)
        {
            Name = name;
            Email = email;
            IsOnline = isOnline;
        }

        /// <summary>
        /// Field name
        /// </summary>
        public global::System.String Name { get; }

        /// <summary>
        /// Field email
        /// </summary>
        public global::System.String Email { get; }

        /// <summary>
        /// Field isOnline
        /// </summary>
        public global::System.Boolean IsOnline { get; }
    }
}


// ReadMessages_Message_Sender_PersonFromPersonEntityMapper

// StrawberryShake.CodeGeneration.CSharp.ResultFromEntityTypeMapperGenerator

#nullable enable

namespace Foo.Bar
{
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class ReadMessages_Message_Sender_PersonFromPersonEntityMapper
        : global::StrawberryShake.IEntityMapper<PersonEntity, ReadMessages_Message_Sender_Person>
    {
        public ReadMessages_Message_Sender_Person Map(PersonEntity entity)
        {
            return new ReadMessages_Message_Sender_Person(
                entity.Name,
                entity.Email,
                entity.IsOnline);
        }
    }
}


// ReadMessages_Message_Sender_Person

// StrawberryShake.CodeGeneration.CSharp.ResultTypeGenerator

#nullable enable

namespace Foo.Bar
{
    /// <summary>
    /// Type person
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class ReadMessages_Message_Sender_Person
        : IReadMessages_Message_Sender_Person
    {
        public ReadMessages_Message_Sender_Person(
            global::System.String name,
            global::System.String email,
            global::System.Boolean isOnline)
        {
            Name = name;
            Email = email;
            IsOnline = isOnline;
        }

        /// <summary>
        /// Field name
        /// </summary>
        public global::System.String Name { get; }

        /// <summary>
        /// Field email
        /// </summary>
        public global::System.String Email { get; }

        /// <summary>
        /// Field isOnline
        /// </summary>
        public global::System.Boolean IsOnline { get; }
    }
}


// IReadMessagesResult

// StrawberryShake.CodeGeneration.CSharp.ResultInterfaceGenerator

#nullable enable

namespace Foo.Bar
{
    /// <summary>
    /// Type SubscriptionType
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public interface IReadMessagesResult
    {
        /// <summary>
        /// field onMessageReceived
        /// </summary>
        public IReadMessages_Message Message { get; }
    }
}


// IReadMessages_Message

// StrawberryShake.CodeGeneration.CSharp.ResultInterfaceGenerator

#nullable enable

namespace Foo.Bar
{
    /// <summary>
    /// Type message
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public interface IReadMessages_Message
        : IMessage
    {
    }
}


// IReadMessages_Message_Message

// StrawberryShake.CodeGeneration.CSharp.ResultInterfaceGenerator

#nullable enable

namespace Foo.Bar
{
    /// <summary>
    /// Type message
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public interface IReadMessages_Message_Message
        : IReadMessages_Message
    {
    }
}


// IReadMessages_Message_Recipient

// StrawberryShake.CodeGeneration.CSharp.ResultInterfaceGenerator

#nullable enable

namespace Foo.Bar
{
    /// <summary>
    /// Type person
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public interface IReadMessages_Message_Recipient
        : IParticipant
    {
    }
}


// IReadMessages_Message_Recipient_Person

// StrawberryShake.CodeGeneration.CSharp.ResultInterfaceGenerator

#nullable enable

namespace Foo.Bar
{
    /// <summary>
    /// Type person
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public interface IReadMessages_Message_Recipient_Person
        : IReadMessages_Message_Recipient
    {
    }
}


// IReadMessages_Message_Sender

// StrawberryShake.CodeGeneration.CSharp.ResultInterfaceGenerator

#nullable enable

namespace Foo.Bar
{
    /// <summary>
    /// Type person
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public interface IReadMessages_Message_Sender
        : IParticipant
    {
    }
}


// IReadMessages_Message_Sender_Person

// StrawberryShake.CodeGeneration.CSharp.ResultInterfaceGenerator

#nullable enable

namespace Foo.Bar
{
    /// <summary>
    /// Type person
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public interface IReadMessages_Message_Sender_Person
        : IReadMessages_Message_Sender
    {
    }
}


// SendMessageInputInputValueFormatter

// StrawberryShake.CodeGeneration.CSharp.InputValueFormatterGenerator

#nullable enable

namespace Foo.Bar
{
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class SendMessageInputInputValueFormatter
        : global::StrawberryShake.Serialization.IInputValueFormatter
    {
        private global::StrawberryShake.Serialization.IInputValueFormatter _stringFormatter = default!;

        public global::System.String TypeName => "SendMessageInput";

        public void Initialize(global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)
        {
            _stringFormatter = serializerResolver.GetInputValueFormatter("String");
        }

        public global::System.Object? Format(global::System.Object? runtimeValue)
        {
            if (!(runtimeValue is SendMessageInput d))
            {
                throw new global::System.ArgumentException(nameof(runtimeValue));
            }

            return new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>[] {
                new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>(
                    "clientMutationId",
                    FormatClientMutationId(d.ClientMutationId)),
                new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>(
                    "recipientEmail",
                    FormatRecipientEmail(d.RecipientEmail)),
                new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>(
                    "text",
                    FormatText(d.Text))
            };
        }

        private global::System.Object? FormatClientMutationId(global::System.String? value)
        {
            return _stringFormatter.Format(value);
        }

        private global::System.Object? FormatRecipientEmail(global::System.String value)
        {
            if (value == default)
            {
                return null;
            }

            return _stringFormatter.Format(value);
        }

        private global::System.Object? FormatText(global::System.String value)
        {
            if (value == default)
            {
                return null;
            }

            return _stringFormatter.Format(value);
        }
    }
}


// SendMessageInput

// StrawberryShake.CodeGeneration.CSharp.InputTypeGenerator

#nullable enable

namespace Foo.Bar
{
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class SendMessageInput
    {
        public global::System.String? ClientMutationId { get; set; }

        /// <summary>
        /// The email of the person to which a message shall be send.
        /// </summary>
        public global::System.String RecipientEmail { get; set; }

        /// <summary>
        /// The message text.
        /// </summary>
        public global::System.String Text { get; set; }
    }
}


// Direction

// StrawberryShake.CodeGeneration.CSharp.EnumGenerator

#nullable enable

namespace Foo.Bar
{
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public enum Direction
    {
        /// <summary>
        /// enum value Incoming
        /// </summary>
        Incoming,
        /// <summary>
        /// enum value Outgoung
        /// </summary>
        Outgoing
    }
}


// DirectionSerializer

// StrawberryShake.CodeGeneration.CSharp.EnumParserGenerator

#nullable enable

namespace Foo.Bar
{
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class DirectionSerializer
        : global::StrawberryShake.Serialization.IInputValueFormatter
        , global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, Direction>
    {
        public global::System.String TypeName => "Direction";

        public Direction Parse(global::System.String serializedValue)
        {
            return serializedValue switch
            {
                "INCOMING" => Direction.Incoming,
                "OUTGOING" => Direction.Outgoing,
                _ => throw new global::StrawberryShake.GraphQLClientException()
            };
        }

        public global::System.Object Format(global::System.Object? runtimeValue)
        {
            return runtimeValue switch
            {
                Direction.Incoming => "INCOMING",
                Direction.Outgoing => "OUTGOING",
                _ => throw new global::StrawberryShake.GraphQLClientException()
            };
        }
    }
}


// GetPeopleQueryDocument

// StrawberryShake.CodeGeneration.CSharp.OperationDocumentGenerator

#nullable enable

namespace Foo.Bar
{
    /// <summary>
    /// Represents the operation service of the GetPeople GraphQL operation
    /// <code>
    /// query GetPeople {
    ///   people(order_by: { name: ASC }) {
    ///     __typename
    ///     nodes {
    ///       __typename
    ///       ... Person
    ///       ... on Person {
    ///         id
    ///       }
    ///     }
    ///   }
    /// }
    /// 
    /// fragment Person on Person {
    ///   ... Participant
    ///   imageUri
    ///   lastSeen
    /// }
    /// 
    /// fragment Participant on Person {
    ///   name
    ///   email
    ///   isOnline
    /// }
    /// </code>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class GetPeopleQueryDocument
        : global::StrawberryShake.IDocument
    {
        private GetPeopleQueryDocument()
        {
        }

        public static GetPeopleQueryDocument Instance { get; } = new GetPeopleQueryDocument();

        public global::StrawberryShake.OperationKind Kind => global::StrawberryShake.OperationKind.Query;

        public global::System.ReadOnlySpan<global::System.Byte> Body => new global::System.Byte[]{ 0x71, 0x75, 0x65, 0x72, 0x79, 0x20, 0x47, 0x65, 0x74, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x70, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x28, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x3a, 0x20, 0x7b, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x3a, 0x20, 0x41, 0x53, 0x43, 0x20, 0x7d, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x2e, 0x2e, 0x2e, 0x20, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x2e, 0x2e, 0x2e, 0x20, 0x6f, 0x6e, 0x20, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x64, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x7d, 0x0a, 0x7d, 0x0a, 0x0a, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x20, 0x6f, 0x6e, 0x20, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x2e, 0x2e, 0x2e, 0x20, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x0a, 0x20, 0x20, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x69, 0x0a, 0x20, 0x20, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x65, 0x65, 0x6e, 0x0a, 0x7d, 0x0a, 0x0a, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x20, 0x6f, 0x6e, 0x20, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x0a, 0x20, 0x20, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x0a, 0x20, 0x20, 0x69, 0x73, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x0a, 0x7d };

        public override global::System.String ToString()
        {
            return global::System.Text.Encoding.UTF8.GetString(Body);
        }
    }
}


// GetPeopleQuery

// StrawberryShake.CodeGeneration.CSharp.OperationServiceGenerator

#nullable enable

namespace Foo.Bar
{
    /// <summary>
    /// Represents the operation service of the GetPeople GraphQL operation
    /// <code>
    /// query GetPeople {
    ///   people(order_by: { name: ASC }) {
    ///     __typename
    ///     nodes {
    ///       __typename
    ///       ... Person
    ///       ... on Person {
    ///         id
    ///       }
    ///     }
    ///   }
    /// }
    /// 
    /// fragment Person on Person {
    ///   ... Participant
    ///   imageUri
    ///   lastSeen
    /// }
    /// 
    /// fragment Participant on Person {
    ///   name
    ///   email
    ///   isOnline
    /// }
    /// </code>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class GetPeopleQuery
    {
        private readonly global::StrawberryShake.IOperationExecutor<IGetPeopleResult> _operationExecutor;

        public GetPeopleQuery(global::StrawberryShake.IOperationExecutor<IGetPeopleResult> operationExecutor)
        {
            _operationExecutor = operationExecutor
                 ?? throw new global::System.ArgumentNullException(nameof(operationExecutor));
        }

        public async global::System.Threading.Tasks.Task<global::StrawberryShake.IOperationResult<IGetPeopleResult>> ExecuteAsync(global::System.Threading.CancellationToken cancellationToken = default)
        {
            var request = CreateRequest();

            return await _operationExecutor
                .ExecuteAsync(
                    request,
                    cancellationToken)
                .ConfigureAwait(false);
        }

        public global::System.IObservable<global::StrawberryShake.IOperationResult<IGetPeopleResult>> Watch(global::StrawberryShake.ExecutionStrategy? strategy = null)
        {
            var request = CreateRequest();
            return _operationExecutor.Watch(
                request,
                strategy);
        }

        private global::StrawberryShake.OperationRequest CreateRequest()
        {

            return new global::StrawberryShake.OperationRequest(
                "GetPeople",
                GetPeopleQueryDocument.Instance);
        }
    }
}


// GetMessagesQueryDocument

// StrawberryShake.CodeGeneration.CSharp.OperationDocumentGenerator

#nullable enable

namespace Foo.Bar
{
    /// <summary>
    /// Represents the operation service of the GetMessages GraphQL operation
    /// <code>
    /// query GetMessages($email: String!) {
    ///   personByEmail(email: $email) {
    ///     __typename
    ///     messages(order_by: { sent: ASC }) {
    ///       __typename
    ///       nodes {
    ///         __typename
    ///         ... Message
    ///         ... on Message {
    ///           id
    ///         }
    ///       }
    ///     }
    ///     ... on Person {
    ///       id
    ///     }
    ///   }
    /// }
    /// 
    /// fragment Message on Message {
    ///   id
    ///   text
    ///   direction
    ///   recipient {
    ///     __typename
    ///     ... Participant
    ///     ... on Person {
    ///       id
    ///     }
    ///   }
    ///   sender {
    ///     __typename
    ///     ... Participant
    ///     ... on Person {
    ///       id
    ///     }
    ///   }
    ///   sent
    /// }
    /// 
    /// fragment Participant on Person {
    ///   name
    ///   email
    ///   isOnline
    /// }
    /// </code>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class GetMessagesQueryDocument
        : global::StrawberryShake.IDocument
    {
        private GetMessagesQueryDocument()
        {
        }

        public static GetMessagesQueryDocument Instance { get; } = new GetMessagesQueryDocument();

        public global::StrawberryShake.OperationKind Kind => global::StrawberryShake.OperationKind.Query;

        public global::System.ReadOnlySpan<global::System.Byte> Body => new global::System.Byte[]{ 0x71, 0x75, 0x65, 0x72, 0x79, 0x20, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x28, 0x24, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x3a, 0x20, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x21, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x42, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x28, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x3a, 0x20, 0x24, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x28, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x3a, 0x20, 0x7b, 0x20, 0x73, 0x65, 0x6e, 0x74, 0x3a, 0x20, 0x41, 0x53, 0x43, 0x20, 0x7d, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x2e, 0x2e, 0x2e, 0x20, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x2e, 0x2e, 0x2e, 0x20, 0x6f, 0x6e, 0x20, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x64, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x2e, 0x2e, 0x2e, 0x20, 0x6f, 0x6e, 0x20, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x64, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x7d, 0x0a, 0x7d, 0x0a, 0x0a, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x20, 0x6f, 0x6e, 0x20, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x69, 0x64, 0x0a, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x0a, 0x20, 0x20, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x0a, 0x20, 0x20, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x2e, 0x2e, 0x2e, 0x20, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x2e, 0x2e, 0x2e, 0x20, 0x6f, 0x6e, 0x20, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x64, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x2e, 0x2e, 0x2e, 0x20, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x2e, 0x2e, 0x2e, 0x20, 0x6f, 0x6e, 0x20, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x64, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x73, 0x65, 0x6e, 0x74, 0x0a, 0x7d, 0x0a, 0x0a, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x20, 0x6f, 0x6e, 0x20, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x0a, 0x20, 0x20, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x0a, 0x20, 0x20, 0x69, 0x73, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x0a, 0x7d };

        public override global::System.String ToString()
        {
            return global::System.Text.Encoding.UTF8.GetString(Body);
        }
    }
}


// GetMessagesQuery

// StrawberryShake.CodeGeneration.CSharp.OperationServiceGenerator

#nullable enable

namespace Foo.Bar
{
    /// <summary>
    /// Represents the operation service of the GetMessages GraphQL operation
    /// <code>
    /// query GetMessages($email: String!) {
    ///   personByEmail(email: $email) {
    ///     __typename
    ///     messages(order_by: { sent: ASC }) {
    ///       __typename
    ///       nodes {
    ///         __typename
    ///         ... Message
    ///         ... on Message {
    ///           id
    ///         }
    ///       }
    ///     }
    ///     ... on Person {
    ///       id
    ///     }
    ///   }
    /// }
    /// 
    /// fragment Message on Message {
    ///   id
    ///   text
    ///   direction
    ///   recipient {
    ///     __typename
    ///     ... Participant
    ///     ... on Person {
    ///       id
    ///     }
    ///   }
    ///   sender {
    ///     __typename
    ///     ... Participant
    ///     ... on Person {
    ///       id
    ///     }
    ///   }
    ///   sent
    /// }
    /// 
    /// fragment Participant on Person {
    ///   name
    ///   email
    ///   isOnline
    /// }
    /// </code>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class GetMessagesQuery
    {
        private readonly global::StrawberryShake.IOperationExecutor<IGetMessagesResult> _operationExecutor;
        private readonly global::StrawberryShake.Serialization.IInputValueFormatter _stringFormatter;

        public GetMessagesQuery(
            global::StrawberryShake.IOperationExecutor<IGetMessagesResult> operationExecutor,
            global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)
        {
            _operationExecutor = operationExecutor
                 ?? throw new global::System.ArgumentNullException(nameof(operationExecutor));
            _stringFormatter = serializerResolver.GetInputValueFormatter("String");
        }

        public async global::System.Threading.Tasks.Task<global::StrawberryShake.IOperationResult<IGetMessagesResult>> ExecuteAsync(
            global::System.String email,
            global::System.Threading.CancellationToken cancellationToken = default)
        {
            var request = CreateRequest(email);

            return await _operationExecutor
                .ExecuteAsync(
                    request,
                    cancellationToken)
                .ConfigureAwait(false);
        }

        public global::System.IObservable<global::StrawberryShake.IOperationResult<IGetMessagesResult>> Watch(
            global::System.String email,
            global::StrawberryShake.ExecutionStrategy? strategy = null)
        {
            var request = CreateRequest(email);
            return _operationExecutor.Watch(
                request,
                strategy);
        }

        private global::StrawberryShake.OperationRequest CreateRequest(global::System.String email)
        {
            var variables = new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object?>();

            variables.Add(
                "email",
                FormatEmail(email));

            return new global::StrawberryShake.OperationRequest(
                "GetMessages",
                GetMessagesQueryDocument.Instance,
                variables);
        }

        private global::System.Object? FormatEmail(global::System.String value)
        {
            if (value == default)
            {
                return null;
            }

            return _stringFormatter.Format(value);
        }
    }
}


// SendMessageInputMutationDocument

// StrawberryShake.CodeGeneration.CSharp.OperationDocumentGenerator

#nullable enable

namespace Foo.Bar
{
    /// <summary>
    /// Represents the operation service of the SendMessageInput GraphQL operation
    /// <code>
    /// mutation SendMessageInput($input: SendMessageInput!) {
    ///   sendMessage(input: $input) {
    ///     __typename
    ///     message {
    ///       __typename
    ///       ... Message
    ///       ... on Message {
    ///         id
    ///       }
    ///     }
    ///   }
    /// }
    /// 
    /// fragment Message on Message {
    ///   id
    ///   text
    ///   direction
    ///   recipient {
    ///     __typename
    ///     ... Participant
    ///     ... on Person {
    ///       id
    ///     }
    ///   }
    ///   sender {
    ///     __typename
    ///     ... Participant
    ///     ... on Person {
    ///       id
    ///     }
    ///   }
    ///   sent
    /// }
    /// 
    /// fragment Participant on Person {
    ///   name
    ///   email
    ///   isOnline
    /// }
    /// </code>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class SendMessageInputMutationDocument
        : global::StrawberryShake.IDocument
    {
        private SendMessageInputMutationDocument()
        {
        }

        public static SendMessageInputMutationDocument Instance { get; } = new SendMessageInputMutationDocument();

        public global::StrawberryShake.OperationKind Kind => global::StrawberryShake.OperationKind.Mutation;

        public global::System.ReadOnlySpan<global::System.Byte> Body => new global::System.Byte[]{ 0x6d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x28, 0x24, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x3a, 0x20, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x21, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x73, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x28, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x3a, 0x20, 0x24, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x2e, 0x2e, 0x2e, 0x20, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x2e, 0x2e, 0x2e, 0x20, 0x6f, 0x6e, 0x20, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x64, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x7d, 0x0a, 0x7d, 0x0a, 0x0a, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x20, 0x6f, 0x6e, 0x20, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x69, 0x64, 0x0a, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x0a, 0x20, 0x20, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x0a, 0x20, 0x20, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x2e, 0x2e, 0x2e, 0x20, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x2e, 0x2e, 0x2e, 0x20, 0x6f, 0x6e, 0x20, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x64, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x2e, 0x2e, 0x2e, 0x20, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x2e, 0x2e, 0x2e, 0x20, 0x6f, 0x6e, 0x20, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x64, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x73, 0x65, 0x6e, 0x74, 0x0a, 0x7d, 0x0a, 0x0a, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x20, 0x6f, 0x6e, 0x20, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x0a, 0x20, 0x20, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x0a, 0x20, 0x20, 0x69, 0x73, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x0a, 0x7d };

        public override global::System.String ToString()
        {
            return global::System.Text.Encoding.UTF8.GetString(Body);
        }
    }
}


// SendMessageInputMutation

// StrawberryShake.CodeGeneration.CSharp.OperationServiceGenerator

#nullable enable

namespace Foo.Bar
{
    /// <summary>
    /// Represents the operation service of the SendMessageInput GraphQL operation
    /// <code>
    /// mutation SendMessageInput($input: SendMessageInput!) {
    ///   sendMessage(input: $input) {
    ///     __typename
    ///     message {
    ///       __typename
    ///       ... Message
    ///       ... on Message {
    ///         id
    ///       }
    ///     }
    ///   }
    /// }
    /// 
    /// fragment Message on Message {
    ///   id
    ///   text
    ///   direction
    ///   recipient {
    ///     __typename
    ///     ... Participant
    ///     ... on Person {
    ///       id
    ///     }
    ///   }
    ///   sender {
    ///     __typename
    ///     ... Participant
    ///     ... on Person {
    ///       id
    ///     }
    ///   }
    ///   sent
    /// }
    /// 
    /// fragment Participant on Person {
    ///   name
    ///   email
    ///   isOnline
    /// }
    /// </code>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class SendMessageInputMutation
    {
        private readonly global::StrawberryShake.IOperationExecutor<ISendMessageInputResult> _operationExecutor;
        private readonly global::StrawberryShake.Serialization.IInputValueFormatter _sendMessageInputFormatter;

        public SendMessageInputMutation(
            global::StrawberryShake.IOperationExecutor<ISendMessageInputResult> operationExecutor,
            global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)
        {
            _operationExecutor = operationExecutor
                 ?? throw new global::System.ArgumentNullException(nameof(operationExecutor));
            _sendMessageInputFormatter = serializerResolver.GetInputValueFormatter("SendMessageInput");
        }

        public async global::System.Threading.Tasks.Task<global::StrawberryShake.IOperationResult<ISendMessageInputResult>> ExecuteAsync(
            SendMessageInput input,
            global::System.Threading.CancellationToken cancellationToken = default)
        {
            var request = CreateRequest(input);

            return await _operationExecutor
                .ExecuteAsync(
                    request,
                    cancellationToken)
                .ConfigureAwait(false);
        }

        public global::System.IObservable<global::StrawberryShake.IOperationResult<ISendMessageInputResult>> Watch(
            SendMessageInput input,
            global::StrawberryShake.ExecutionStrategy? strategy = null)
        {
            var request = CreateRequest(input);
            return _operationExecutor.Watch(
                request,
                strategy);
        }

        private global::StrawberryShake.OperationRequest CreateRequest(SendMessageInput input)
        {
            var variables = new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object?>();

            variables.Add(
                "input",
                FormatInput(input));

            return new global::StrawberryShake.OperationRequest(
                "SendMessageInput",
                SendMessageInputMutationDocument.Instance,
                variables);
        }

        private global::System.Object? FormatInput(SendMessageInput value)
        {
            if (value == default)
            {
                return null;
            }

            return _sendMessageInputFormatter.Format(value);
        }
    }
}


// SendMessageMutMutationDocument

// StrawberryShake.CodeGeneration.CSharp.OperationDocumentGenerator

#nullable enable

namespace Foo.Bar
{
    /// <summary>
    /// Represents the operation service of the SendMessageMut GraphQL operation
    /// <code>
    /// mutation SendMessageMut($email: String!, $text: String!) {
    ///   sendMessage(input: { recipientEmail: $email, text: $text }) {
    ///     __typename
    ///     message {
    ///       __typename
    ///       ... Message
    ///       ... on Message {
    ///         id
    ///       }
    ///     }
    ///   }
    /// }
    /// 
    /// fragment Message on Message {
    ///   id
    ///   text
    ///   direction
    ///   recipient {
    ///     __typename
    ///     ... Participant
    ///     ... on Person {
    ///       id
    ///     }
    ///   }
    ///   sender {
    ///     __typename
    ///     ... Participant
    ///     ... on Person {
    ///       id
    ///     }
    ///   }
    ///   sent
    /// }
    /// 
    /// fragment Participant on Person {
    ///   name
    ///   email
    ///   isOnline
    /// }
    /// </code>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class SendMessageMutMutationDocument
        : global::StrawberryShake.IDocument
    {
        private SendMessageMutMutationDocument()
        {
        }

        public static SendMessageMutMutationDocument Instance { get; } = new SendMessageMutMutationDocument();

        public global::StrawberryShake.OperationKind Kind => global::StrawberryShake.OperationKind.Mutation;

        public global::System.ReadOnlySpan<global::System.Byte> Body => new global::System.Byte[]{ 0x6d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4d, 0x75, 0x74, 0x28, 0x24, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x3a, 0x20, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x21, 0x2c, 0x20, 0x24, 0x74, 0x65, 0x78, 0x74, 0x3a, 0x20, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x21, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x73, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x28, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x3a, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x3a, 0x20, 0x24, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2c, 0x20, 0x74, 0x65, 0x78, 0x74, 0x3a, 0x20, 0x24, 0x74, 0x65, 0x78, 0x74, 0x20, 0x7d, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x2e, 0x2e, 0x2e, 0x20, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x2e, 0x2e, 0x2e, 0x20, 0x6f, 0x6e, 0x20, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x64, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x7d, 0x0a, 0x7d, 0x0a, 0x0a, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x20, 0x6f, 0x6e, 0x20, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x69, 0x64, 0x0a, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x0a, 0x20, 0x20, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x0a, 0x20, 0x20, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x2e, 0x2e, 0x2e, 0x20, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x2e, 0x2e, 0x2e, 0x20, 0x6f, 0x6e, 0x20, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x64, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x2e, 0x2e, 0x2e, 0x20, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x2e, 0x2e, 0x2e, 0x20, 0x6f, 0x6e, 0x20, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x64, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x73, 0x65, 0x6e, 0x74, 0x0a, 0x7d, 0x0a, 0x0a, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x20, 0x6f, 0x6e, 0x20, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x0a, 0x20, 0x20, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x0a, 0x20, 0x20, 0x69, 0x73, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x0a, 0x7d };

        public override global::System.String ToString()
        {
            return global::System.Text.Encoding.UTF8.GetString(Body);
        }
    }
}


// SendMessageMutMutation

// StrawberryShake.CodeGeneration.CSharp.OperationServiceGenerator

#nullable enable

namespace Foo.Bar
{
    /// <summary>
    /// Represents the operation service of the SendMessageMut GraphQL operation
    /// <code>
    /// mutation SendMessageMut($email: String!, $text: String!) {
    ///   sendMessage(input: { recipientEmail: $email, text: $text }) {
    ///     __typename
    ///     message {
    ///       __typename
    ///       ... Message
    ///       ... on Message {
    ///         id
    ///       }
    ///     }
    ///   }
    /// }
    /// 
    /// fragment Message on Message {
    ///   id
    ///   text
    ///   direction
    ///   recipient {
    ///     __typename
    ///     ... Participant
    ///     ... on Person {
    ///       id
    ///     }
    ///   }
    ///   sender {
    ///     __typename
    ///     ... Participant
    ///     ... on Person {
    ///       id
    ///     }
    ///   }
    ///   sent
    /// }
    /// 
    /// fragment Participant on Person {
    ///   name
    ///   email
    ///   isOnline
    /// }
    /// </code>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class SendMessageMutMutation
    {
        private readonly global::StrawberryShake.IOperationExecutor<ISendMessageMutResult> _operationExecutor;
        private readonly global::StrawberryShake.Serialization.IInputValueFormatter _stringFormatter;

        public SendMessageMutMutation(
            global::StrawberryShake.IOperationExecutor<ISendMessageMutResult> operationExecutor,
            global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)
        {
            _operationExecutor = operationExecutor
                 ?? throw new global::System.ArgumentNullException(nameof(operationExecutor));
            _stringFormatter = serializerResolver.GetInputValueFormatter("String");
        }

        public async global::System.Threading.Tasks.Task<global::StrawberryShake.IOperationResult<ISendMessageMutResult>> ExecuteAsync(
            global::System.String email,
            global::System.String text,
            global::System.Threading.CancellationToken cancellationToken = default)
        {
            var request = CreateRequest(
                email,
                text);

            return await _operationExecutor
                .ExecuteAsync(
                    request,
                    cancellationToken)
                .ConfigureAwait(false);
        }

        public global::System.IObservable<global::StrawberryShake.IOperationResult<ISendMessageMutResult>> Watch(
            global::System.String email,
            global::System.String text,
            global::StrawberryShake.ExecutionStrategy? strategy = null)
        {
            var request = CreateRequest(
                email,
                text);
            return _operationExecutor.Watch(
                request,
                strategy);
        }

        private global::StrawberryShake.OperationRequest CreateRequest(
            global::System.String email,
            global::System.String text)
        {
            var variables = new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object?>();

            variables.Add(
                "email",
                FormatEmail(email));
            variables.Add(
                "text",
                FormatText(text));

            return new global::StrawberryShake.OperationRequest(
                "SendMessageMut",
                SendMessageMutMutationDocument.Instance,
                variables);
        }

        private global::System.Object? FormatEmail(global::System.String value)
        {
            if (value == default)
            {
                return null;
            }

            return _stringFormatter.Format(value);
        }

        private global::System.Object? FormatText(global::System.String value)
        {
            if (value == default)
            {
                return null;
            }

            return _stringFormatter.Format(value);
        }
    }
}


// ReadMessagesSubscriptionDocument

// StrawberryShake.CodeGeneration.CSharp.OperationDocumentGenerator

#nullable enable

namespace Foo.Bar
{
    /// <summary>
    /// Represents the operation service of the ReadMessages GraphQL operation
    /// <code>
    /// subscription ReadMessages {
    ///   message: onMessageReceived {
    ///     __typename
    ///     ... Message
    ///     ... on Message {
    ///       id
    ///     }
    ///   }
    /// }
    /// 
    /// fragment Message on Message {
    ///   id
    ///   text
    ///   direction
    ///   recipient {
    ///     __typename
    ///     ... Participant
    ///     ... on Person {
    ///       id
    ///     }
    ///   }
    ///   sender {
    ///     __typename
    ///     ... Participant
    ///     ... on Person {
    ///       id
    ///     }
    ///   }
    ///   sent
    /// }
    /// 
    /// fragment Participant on Person {
    ///   name
    ///   email
    ///   isOnline
    /// }
    /// </code>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class ReadMessagesSubscriptionDocument
        : global::StrawberryShake.IDocument
    {
        private ReadMessagesSubscriptionDocument()
        {
        }

        public static ReadMessagesSubscriptionDocument Instance { get; } = new ReadMessagesSubscriptionDocument();

        public global::StrawberryShake.OperationKind Kind => global::StrawberryShake.OperationKind.Subscription;

        public global::System.ReadOnlySpan<global::System.Byte> Body => new global::System.Byte[]{ 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x52, 0x65, 0x61, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x3a, 0x20, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x2e, 0x2e, 0x2e, 0x20, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x2e, 0x2e, 0x2e, 0x20, 0x6f, 0x6e, 0x20, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x64, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x7d, 0x0a, 0x7d, 0x0a, 0x0a, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x20, 0x6f, 0x6e, 0x20, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x69, 0x64, 0x0a, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x0a, 0x20, 0x20, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x0a, 0x20, 0x20, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x2e, 0x2e, 0x2e, 0x20, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x2e, 0x2e, 0x2e, 0x20, 0x6f, 0x6e, 0x20, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x64, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x2e, 0x2e, 0x2e, 0x20, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x2e, 0x2e, 0x2e, 0x20, 0x6f, 0x6e, 0x20, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x64, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x73, 0x65, 0x6e, 0x74, 0x0a, 0x7d, 0x0a, 0x0a, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x20, 0x6f, 0x6e, 0x20, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x0a, 0x20, 0x20, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x0a, 0x20, 0x20, 0x69, 0x73, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x0a, 0x7d };

        public override global::System.String ToString()
        {
            return global::System.Text.Encoding.UTF8.GetString(Body);
        }
    }
}


// ReadMessagesSubscription

// StrawberryShake.CodeGeneration.CSharp.OperationServiceGenerator

#nullable enable

namespace Foo.Bar
{
    /// <summary>
    /// Represents the operation service of the ReadMessages GraphQL operation
    /// <code>
    /// subscription ReadMessages {
    ///   message: onMessageReceived {
    ///     __typename
    ///     ... Message
    ///     ... on Message {
    ///       id
    ///     }
    ///   }
    /// }
    /// 
    /// fragment Message on Message {
    ///   id
    ///   text
    ///   direction
    ///   recipient {
    ///     __typename
    ///     ... Participant
    ///     ... on Person {
    ///       id
    ///     }
    ///   }
    ///   sender {
    ///     __typename
    ///     ... Participant
    ///     ... on Person {
    ///       id
    ///     }
    ///   }
    ///   sent
    /// }
    /// 
    /// fragment Participant on Person {
    ///   name
    ///   email
    ///   isOnline
    /// }
    /// </code>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class ReadMessagesSubscription
    {
        private readonly global::StrawberryShake.IOperationExecutor<IReadMessagesResult> _operationExecutor;

        public ReadMessagesSubscription(global::StrawberryShake.IOperationExecutor<IReadMessagesResult> operationExecutor)
        {
            _operationExecutor = operationExecutor
                 ?? throw new global::System.ArgumentNullException(nameof(operationExecutor));
        }

        public global::System.IObservable<global::StrawberryShake.IOperationResult<IReadMessagesResult>> Watch(global::StrawberryShake.ExecutionStrategy? strategy = null)
        {
            var request = CreateRequest();
            return _operationExecutor.Watch(
                request,
                strategy);
        }

        private global::StrawberryShake.OperationRequest CreateRequest()
        {

            return new global::StrawberryShake.OperationRequest(
                "ReadMessages",
                ReadMessagesSubscriptionDocument.Instance);
        }
    }
}


// GetPeopleBuilder

// StrawberryShake.CodeGeneration.CSharp.JsonResultBuilderGenerator

#nullable enable

namespace Foo.Bar
{
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class GetPeopleBuilder
        : global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, IGetPeopleResult>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        private readonly global::System.Func<global::System.Text.Json.JsonElement, global::StrawberryShake.EntityId> _extractId;
        private readonly global::StrawberryShake.IOperationResultDataFactory<IGetPeopleResult> _resultDataFactory;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::System.String> _stringParser;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.Boolean, global::System.Boolean> _booleanParser;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::System.Uri> _urlParser;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::System.DateTimeOffset> _dateTimeParser;

        public GetPeopleBuilder(
            global::StrawberryShake.IEntityStore entityStore,
            global::System.Func<global::System.Text.Json.JsonElement, global::StrawberryShake.EntityId> extractId,
            global::StrawberryShake.IOperationResultDataFactory<IGetPeopleResult> resultDataFactory,
            global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)
        {
            _entityStore = entityStore
                 ?? throw new global::System.ArgumentNullException(nameof(entityStore));
            _extractId = extractId
                 ?? throw new global::System.ArgumentNullException(nameof(extractId));
            _resultDataFactory = resultDataFactory
                 ?? throw new global::System.ArgumentNullException(nameof(resultDataFactory));
            _stringParser = serializerResolver.GetLeafValueParser<global::System.String, global::System.String>("String")
                 ?? throw new global::System.ArgumentException("No serializer for type `String` found.");
            _booleanParser = serializerResolver.GetLeafValueParser<global::System.Boolean, global::System.Boolean>("Boolean")
                 ?? throw new global::System.ArgumentException("No serializer for type `Boolean` found.");
            _urlParser = serializerResolver.GetLeafValueParser<global::System.String, global::System.Uri>("Url")
                 ?? throw new global::System.ArgumentException("No serializer for type `Url` found.");
            _dateTimeParser = serializerResolver.GetLeafValueParser<global::System.String, global::System.DateTimeOffset>("DateTime")
                 ?? throw new global::System.ArgumentException("No serializer for type `DateTime` found.");
        }

        public global::StrawberryShake.IOperationResult<IGetPeopleResult> Build(global::StrawberryShake.Response<global::System.Text.Json.JsonDocument> response)
        {
            (IGetPeopleResult Result, GetPeopleResultInfo Info)? data = null;

            if (response.Body is not null
                && response.Body.RootElement.TryGetProperty("data", out global::System.Text.Json.JsonElement obj))
            {
                data = BuildData(obj);
            }

            return new global::StrawberryShake.OperationResult<IGetPeopleResult>(
                data?.Result,
                data?.Info,
                _resultDataFactory,
                null);
        }

        private (IGetPeopleResult, GetPeopleResultInfo) BuildData(global::System.Text.Json.JsonElement obj)
        {
            using global::StrawberryShake.IEntityUpdateSession session = _entityStore.BeginUpdate();
            var entityIds = new global::System.Collections.Generic.HashSet<global::StrawberryShake.EntityId>();


            var resultInfo = new GetPeopleResultInfo(
                DeserializeIGetPeople_People(
                    global::StrawberryShake.Transport.Http.JsonElementExtensions.GetPropertyOrNull(
                        obj,
                        "people"),
                    entityIds),
                entityIds,
                session.Version);

            return (
                _resultDataFactory.Create(resultInfo),
                resultInfo
            );
        }

        private global::Foo.Bar.State.PersonConnectionData? DeserializeIGetPeople_People(
            global::System.Text.Json.JsonElement? obj,
            global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (!obj.HasValue)
            {
                return null;
            }

            var typename = obj.Value
                .GetProperty("__typename")
                .GetString();

            if (typename?.Equals("PersonConnection", global::System.StringComparison.Ordinal) ?? false)
            {
                return new global::Foo.Bar.State.PersonConnectionData(
                    typename,
                    nodes: UpdateIGetPeople_People_NodesEntityArray(
                        global::StrawberryShake.Transport.Http.JsonElementExtensions.GetPropertyOrNull(
                            obj,
                            "nodes"),
                        entityIds));
            }

            throw new global::System.NotSupportedException();
        }

        private global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.EntityId?>? UpdateIGetPeople_People_NodesEntityArray(
            global::System.Text.Json.JsonElement? obj,
            global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (!obj.HasValue)
            {
                return null;
            }

            var persons = new global::System.Collections.Generic.List<global::StrawberryShake.EntityId?>();

            foreach (global::System.Text.Json.JsonElement child in obj.Value.EnumerateArray())
            {
                persons.Add(UpdateIGetPeople_People_NodesEntity(
                    child,
                    entityIds));
            }

            return persons;
        }

        private global::StrawberryShake.EntityId? UpdateIGetPeople_People_NodesEntity(
            global::System.Text.Json.JsonElement? obj,
            global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (!obj.HasValue)
            {
                return null;
            }

            global::StrawberryShake.EntityId entityId = _extractId(obj.Value);
            entityIds.Add(entityId);


            if (entityId.Name.Equals(
                    "Person",
                    global::System.StringComparison.Ordinal))
            {
                PersonEntity entity = _entityStore.GetOrCreate<PersonEntity>(entityId);
                entity.Name = DeserializeNonNullableString(
                    global::StrawberryShake.Transport.Http.JsonElementExtensions.GetPropertyOrNull(
                        obj,
                        "name"));
                entity.Email = DeserializeNonNullableString(
                    global::StrawberryShake.Transport.Http.JsonElementExtensions.GetPropertyOrNull(
                        obj,
                        "email"));
                entity.IsOnline = DeserializeNonNullableBoolean(
                    global::StrawberryShake.Transport.Http.JsonElementExtensions.GetPropertyOrNull(
                        obj,
                        "isOnline"));
                entity.ImageUri = DeserializeUri(
                    global::StrawberryShake.Transport.Http.JsonElementExtensions.GetPropertyOrNull(
                        obj,
                        "imageUri"));
                entity.LastSeen = DeserializeNonNullableDateTimeOffset(
                    global::StrawberryShake.Transport.Http.JsonElementExtensions.GetPropertyOrNull(
                        obj,
                        "lastSeen"));

                return entityId;
            }

            throw new global::System.NotSupportedException();
        }

        private global::System.String DeserializeNonNullableString(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            return _stringParser.Parse(obj.Value.GetString()!);
        }

        private global::System.Boolean DeserializeNonNullableBoolean(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            return _booleanParser.Parse(obj.Value.GetBoolean()!);
        }

        private global::System.Uri? DeserializeUri(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                return null;
            }

            return _urlParser.Parse(obj.Value.GetString()!);
        }

        private global::System.DateTimeOffset DeserializeNonNullableDateTimeOffset(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            return _dateTimeParser.Parse(obj.Value.GetString()!);
        }
    }
}


// GetMessagesBuilder

// StrawberryShake.CodeGeneration.CSharp.JsonResultBuilderGenerator

#nullable enable

namespace Foo.Bar
{
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class GetMessagesBuilder
        : global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, IGetMessagesResult>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        private readonly global::System.Func<global::System.Text.Json.JsonElement, global::StrawberryShake.EntityId> _extractId;
        private readonly global::StrawberryShake.IOperationResultDataFactory<IGetMessagesResult> _resultDataFactory;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::Foo.Bar.Direction> _directionParser;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::System.String> _iDParser;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::System.String> _stringParser;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::System.DateTimeOffset> _dateTimeParser;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.Boolean, global::System.Boolean> _booleanParser;

        public GetMessagesBuilder(
            global::StrawberryShake.IEntityStore entityStore,
            global::System.Func<global::System.Text.Json.JsonElement, global::StrawberryShake.EntityId> extractId,
            global::StrawberryShake.IOperationResultDataFactory<IGetMessagesResult> resultDataFactory,
            global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)
        {
            _entityStore = entityStore
                 ?? throw new global::System.ArgumentNullException(nameof(entityStore));
            _extractId = extractId
                 ?? throw new global::System.ArgumentNullException(nameof(extractId));
            _resultDataFactory = resultDataFactory
                 ?? throw new global::System.ArgumentNullException(nameof(resultDataFactory));
            _directionParser = serializerResolver.GetLeafValueParser<global::System.String, global::Foo.Bar.Direction>("Direction")
                 ?? throw new global::System.ArgumentException("No serializer for type `Direction` found.");
            _iDParser = serializerResolver.GetLeafValueParser<global::System.String, global::System.String>("ID")
                 ?? throw new global::System.ArgumentException("No serializer for type `ID` found.");
            _stringParser = serializerResolver.GetLeafValueParser<global::System.String, global::System.String>("String")
                 ?? throw new global::System.ArgumentException("No serializer for type `String` found.");
            _dateTimeParser = serializerResolver.GetLeafValueParser<global::System.String, global::System.DateTimeOffset>("DateTime")
                 ?? throw new global::System.ArgumentException("No serializer for type `DateTime` found.");
            _booleanParser = serializerResolver.GetLeafValueParser<global::System.Boolean, global::System.Boolean>("Boolean")
                 ?? throw new global::System.ArgumentException("No serializer for type `Boolean` found.");
        }

        public global::StrawberryShake.IOperationResult<IGetMessagesResult> Build(global::StrawberryShake.Response<global::System.Text.Json.JsonDocument> response)
        {
            (IGetMessagesResult Result, GetMessagesResultInfo Info)? data = null;

            if (response.Body is not null
                && response.Body.RootElement.TryGetProperty("data", out global::System.Text.Json.JsonElement obj))
            {
                data = BuildData(obj);
            }

            return new global::StrawberryShake.OperationResult<IGetMessagesResult>(
                data?.Result,
                data?.Info,
                _resultDataFactory,
                null);
        }

        private (IGetMessagesResult, GetMessagesResultInfo) BuildData(global::System.Text.Json.JsonElement obj)
        {
            using global::StrawberryShake.IEntityUpdateSession session = _entityStore.BeginUpdate();
            var entityIds = new global::System.Collections.Generic.HashSet<global::StrawberryShake.EntityId>();

            global::StrawberryShake.EntityId personByEmailId = UpdateNonNullableIGetMessages_PersonByEmailEntity(
                global::StrawberryShake.Transport.Http.JsonElementExtensions.GetPropertyOrNull(
                    obj,
                    "personByEmail"),
                entityIds);

            var resultInfo = new GetMessagesResultInfo(
                personByEmailId,
                entityIds,
                session.Version);

            return (
                _resultDataFactory.Create(resultInfo),
                resultInfo
            );
        }

        private global::StrawberryShake.EntityId UpdateNonNullableIGetMessages_PersonByEmailEntity(
            global::System.Text.Json.JsonElement? obj,
            global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            global::StrawberryShake.EntityId entityId = _extractId(obj.Value);
            entityIds.Add(entityId);


            if (entityId.Name.Equals(
                    "Person",
                    global::System.StringComparison.Ordinal))
            {
                PersonEntity entity = _entityStore.GetOrCreate<PersonEntity>(entityId);
                entity.Messages = DeserializeIGetMessages_PersonByEmail_Messages(
                    global::StrawberryShake.Transport.Http.JsonElementExtensions.GetPropertyOrNull(
                        obj,
                        "messages"),
                    entityIds);

                return entityId;
            }

            throw new global::System.NotSupportedException();
        }

        private global::Foo.Bar.State.MessageConnectionData? DeserializeIGetMessages_PersonByEmail_Messages(
            global::System.Text.Json.JsonElement? obj,
            global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (!obj.HasValue)
            {
                return null;
            }

            var typename = obj.Value
                .GetProperty("__typename")
                .GetString();

            if (typename?.Equals("MessageConnection", global::System.StringComparison.Ordinal) ?? false)
            {
                return new global::Foo.Bar.State.MessageConnectionData(
                    typename,
                    nodes: UpdateIGetMessages_PersonByEmail_Messages_NodesEntityArray(
                        global::StrawberryShake.Transport.Http.JsonElementExtensions.GetPropertyOrNull(
                            obj,
                            "nodes"),
                        entityIds));
            }

            throw new global::System.NotSupportedException();
        }

        private global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.EntityId?>? UpdateIGetMessages_PersonByEmail_Messages_NodesEntityArray(
            global::System.Text.Json.JsonElement? obj,
            global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (!obj.HasValue)
            {
                return null;
            }

            var messages = new global::System.Collections.Generic.List<global::StrawberryShake.EntityId?>();

            foreach (global::System.Text.Json.JsonElement child in obj.Value.EnumerateArray())
            {
                messages.Add(UpdateIGetMessages_PersonByEmail_Messages_NodesEntity(
                    child,
                    entityIds));
            }

            return messages;
        }

        private global::StrawberryShake.EntityId? UpdateIGetMessages_PersonByEmail_Messages_NodesEntity(
            global::System.Text.Json.JsonElement? obj,
            global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (!obj.HasValue)
            {
                return null;
            }

            global::StrawberryShake.EntityId entityId = _extractId(obj.Value);
            entityIds.Add(entityId);


            if (entityId.Name.Equals(
                    "Message",
                    global::System.StringComparison.Ordinal))
            {
                MessageEntity entity = _entityStore.GetOrCreate<MessageEntity>(entityId);
                entity.Id = DeserializeNonNullableString(
                    global::StrawberryShake.Transport.Http.JsonElementExtensions.GetPropertyOrNull(
                        obj,
                        "id"));
                entity.Text = DeserializeNonNullableString(
                    global::StrawberryShake.Transport.Http.JsonElementExtensions.GetPropertyOrNull(
                        obj,
                        "text"));
                entity.Direction = DeserializeNonNullableDirection(
                    global::StrawberryShake.Transport.Http.JsonElementExtensions.GetPropertyOrNull(
                        obj,
                        "direction"));
                entity.Recipient = UpdateNonNullableIGetMessages_PersonByEmail_Messages_Nodes_RecipientEntity(
                    global::StrawberryShake.Transport.Http.JsonElementExtensions.GetPropertyOrNull(
                        obj,
                        "recipient"),
                    entityIds);
                entity.Sender = UpdateNonNullableIGetMessages_PersonByEmail_Messages_Nodes_SenderEntity(
                    global::StrawberryShake.Transport.Http.JsonElementExtensions.GetPropertyOrNull(
                        obj,
                        "sender"),
                    entityIds);
                entity.Sent = DeserializeNonNullableDateTimeOffset(
                    global::StrawberryShake.Transport.Http.JsonElementExtensions.GetPropertyOrNull(
                        obj,
                        "sent"));

                return entityId;
            }

            throw new global::System.NotSupportedException();
        }

        private global::System.String DeserializeNonNullableString(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            return _iDParser.Parse(obj.Value.GetString()!);
        }

        private Direction DeserializeNonNullableDirection(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            return _directionParser.Parse(obj.Value.GetString()!);
        }

        private global::StrawberryShake.EntityId UpdateNonNullableIGetMessages_PersonByEmail_Messages_Nodes_RecipientEntity(
            global::System.Text.Json.JsonElement? obj,
            global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            global::StrawberryShake.EntityId entityId = _extractId(obj.Value);
            entityIds.Add(entityId);


            if (entityId.Name.Equals(
                    "Person",
                    global::System.StringComparison.Ordinal))
            {
                PersonEntity entity = _entityStore.GetOrCreate<PersonEntity>(entityId);
                entity.Name = DeserializeNonNullableString(
                    global::StrawberryShake.Transport.Http.JsonElementExtensions.GetPropertyOrNull(
                        obj,
                        "name"));
                entity.Email = DeserializeNonNullableString(
                    global::StrawberryShake.Transport.Http.JsonElementExtensions.GetPropertyOrNull(
                        obj,
                        "email"));
                entity.IsOnline = DeserializeNonNullableBoolean(
                    global::StrawberryShake.Transport.Http.JsonElementExtensions.GetPropertyOrNull(
                        obj,
                        "isOnline"));

                return entityId;
            }

            throw new global::System.NotSupportedException();
        }

        private global::System.Boolean DeserializeNonNullableBoolean(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            return _booleanParser.Parse(obj.Value.GetBoolean()!);
        }

        private global::StrawberryShake.EntityId UpdateNonNullableIGetMessages_PersonByEmail_Messages_Nodes_SenderEntity(
            global::System.Text.Json.JsonElement? obj,
            global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            global::StrawberryShake.EntityId entityId = _extractId(obj.Value);
            entityIds.Add(entityId);


            if (entityId.Name.Equals(
                    "Person",
                    global::System.StringComparison.Ordinal))
            {
                PersonEntity entity = _entityStore.GetOrCreate<PersonEntity>(entityId);
                entity.Name = DeserializeNonNullableString(
                    global::StrawberryShake.Transport.Http.JsonElementExtensions.GetPropertyOrNull(
                        obj,
                        "name"));
                entity.Email = DeserializeNonNullableString(
                    global::StrawberryShake.Transport.Http.JsonElementExtensions.GetPropertyOrNull(
                        obj,
                        "email"));
                entity.IsOnline = DeserializeNonNullableBoolean(
                    global::StrawberryShake.Transport.Http.JsonElementExtensions.GetPropertyOrNull(
                        obj,
                        "isOnline"));

                return entityId;
            }

            throw new global::System.NotSupportedException();
        }

        private global::System.DateTimeOffset DeserializeNonNullableDateTimeOffset(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            return _dateTimeParser.Parse(obj.Value.GetString()!);
        }
    }
}


// SendMessageInputBuilder

// StrawberryShake.CodeGeneration.CSharp.JsonResultBuilderGenerator

#nullable enable

namespace Foo.Bar
{
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class SendMessageInputBuilder
        : global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, ISendMessageInputResult>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        private readonly global::System.Func<global::System.Text.Json.JsonElement, global::StrawberryShake.EntityId> _extractId;
        private readonly global::StrawberryShake.IOperationResultDataFactory<ISendMessageInputResult> _resultDataFactory;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::Foo.Bar.Direction> _directionParser;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::System.String> _iDParser;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::System.String> _stringParser;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::System.DateTimeOffset> _dateTimeParser;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.Boolean, global::System.Boolean> _booleanParser;

        public SendMessageInputBuilder(
            global::StrawberryShake.IEntityStore entityStore,
            global::System.Func<global::System.Text.Json.JsonElement, global::StrawberryShake.EntityId> extractId,
            global::StrawberryShake.IOperationResultDataFactory<ISendMessageInputResult> resultDataFactory,
            global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)
        {
            _entityStore = entityStore
                 ?? throw new global::System.ArgumentNullException(nameof(entityStore));
            _extractId = extractId
                 ?? throw new global::System.ArgumentNullException(nameof(extractId));
            _resultDataFactory = resultDataFactory
                 ?? throw new global::System.ArgumentNullException(nameof(resultDataFactory));
            _directionParser = serializerResolver.GetLeafValueParser<global::System.String, global::Foo.Bar.Direction>("Direction")
                 ?? throw new global::System.ArgumentException("No serializer for type `Direction` found.");
            _iDParser = serializerResolver.GetLeafValueParser<global::System.String, global::System.String>("ID")
                 ?? throw new global::System.ArgumentException("No serializer for type `ID` found.");
            _stringParser = serializerResolver.GetLeafValueParser<global::System.String, global::System.String>("String")
                 ?? throw new global::System.ArgumentException("No serializer for type `String` found.");
            _dateTimeParser = serializerResolver.GetLeafValueParser<global::System.String, global::System.DateTimeOffset>("DateTime")
                 ?? throw new global::System.ArgumentException("No serializer for type `DateTime` found.");
            _booleanParser = serializerResolver.GetLeafValueParser<global::System.Boolean, global::System.Boolean>("Boolean")
                 ?? throw new global::System.ArgumentException("No serializer for type `Boolean` found.");
        }

        public global::StrawberryShake.IOperationResult<ISendMessageInputResult> Build(global::StrawberryShake.Response<global::System.Text.Json.JsonDocument> response)
        {
            (ISendMessageInputResult Result, SendMessageInput_1ResultInfo Info)? data = null;

            if (response.Body is not null
                && response.Body.RootElement.TryGetProperty("data", out global::System.Text.Json.JsonElement obj))
            {
                data = BuildData(obj);
            }

            return new global::StrawberryShake.OperationResult<ISendMessageInputResult>(
                data?.Result,
                data?.Info,
                _resultDataFactory,
                null);
        }

        private (ISendMessageInputResult, SendMessageInput_1ResultInfo) BuildData(global::System.Text.Json.JsonElement obj)
        {
            using global::StrawberryShake.IEntityUpdateSession session = _entityStore.BeginUpdate();
            var entityIds = new global::System.Collections.Generic.HashSet<global::StrawberryShake.EntityId>();


            var resultInfo = new SendMessageInput_1ResultInfo(
                DeserializeNonNullableISendMessageInput_SendMessage(
                    global::StrawberryShake.Transport.Http.JsonElementExtensions.GetPropertyOrNull(
                        obj,
                        "sendMessage"),
                    entityIds),
                entityIds,
                session.Version);

            return (
                _resultDataFactory.Create(resultInfo),
                resultInfo
            );
        }

        private global::Foo.Bar.State.SendMessagePayloadData DeserializeNonNullableISendMessageInput_SendMessage(
            global::System.Text.Json.JsonElement? obj,
            global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            var typename = obj.Value
                .GetProperty("__typename")
                .GetString();

            if (typename?.Equals("SendMessagePayload", global::System.StringComparison.Ordinal) ?? false)
            {
                return new global::Foo.Bar.State.SendMessagePayloadData(
                    typename,
                    message: UpdateNonNullableISendMessageInput_SendMessage_MessageEntity(
                        global::StrawberryShake.Transport.Http.JsonElementExtensions.GetPropertyOrNull(
                            obj,
                            "message"),
                        entityIds));
            }

            throw new global::System.NotSupportedException();
        }

        private global::StrawberryShake.EntityId UpdateNonNullableISendMessageInput_SendMessage_MessageEntity(
            global::System.Text.Json.JsonElement? obj,
            global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            global::StrawberryShake.EntityId entityId = _extractId(obj.Value);
            entityIds.Add(entityId);


            if (entityId.Name.Equals(
                    "Message",
                    global::System.StringComparison.Ordinal))
            {
                MessageEntity entity = _entityStore.GetOrCreate<MessageEntity>(entityId);
                entity.Id = DeserializeNonNullableString(
                    global::StrawberryShake.Transport.Http.JsonElementExtensions.GetPropertyOrNull(
                        obj,
                        "id"));
                entity.Text = DeserializeNonNullableString(
                    global::StrawberryShake.Transport.Http.JsonElementExtensions.GetPropertyOrNull(
                        obj,
                        "text"));
                entity.Direction = DeserializeNonNullableDirection(
                    global::StrawberryShake.Transport.Http.JsonElementExtensions.GetPropertyOrNull(
                        obj,
                        "direction"));
                entity.Recipient = UpdateNonNullableIGetMessages_PersonByEmail_Messages_Nodes_RecipientEntity(
                    global::StrawberryShake.Transport.Http.JsonElementExtensions.GetPropertyOrNull(
                        obj,
                        "recipient"),
                    entityIds);
                entity.Sender = UpdateNonNullableIGetMessages_PersonByEmail_Messages_Nodes_SenderEntity(
                    global::StrawberryShake.Transport.Http.JsonElementExtensions.GetPropertyOrNull(
                        obj,
                        "sender"),
                    entityIds);
                entity.Sent = DeserializeNonNullableDateTimeOffset(
                    global::StrawberryShake.Transport.Http.JsonElementExtensions.GetPropertyOrNull(
                        obj,
                        "sent"));

                return entityId;
            }

            throw new global::System.NotSupportedException();
        }

        private global::System.String DeserializeNonNullableString(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            return _iDParser.Parse(obj.Value.GetString()!);
        }

        private Direction DeserializeNonNullableDirection(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            return _directionParser.Parse(obj.Value.GetString()!);
        }

        private global::StrawberryShake.EntityId UpdateNonNullableIGetMessages_PersonByEmail_Messages_Nodes_RecipientEntity(
            global::System.Text.Json.JsonElement? obj,
            global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            global::StrawberryShake.EntityId entityId = _extractId(obj.Value);
            entityIds.Add(entityId);


            if (entityId.Name.Equals(
                    "Person",
                    global::System.StringComparison.Ordinal))
            {
                PersonEntity entity = _entityStore.GetOrCreate<PersonEntity>(entityId);
                entity.Name = DeserializeNonNullableString(
                    global::StrawberryShake.Transport.Http.JsonElementExtensions.GetPropertyOrNull(
                        obj,
                        "name"));
                entity.Email = DeserializeNonNullableString(
                    global::StrawberryShake.Transport.Http.JsonElementExtensions.GetPropertyOrNull(
                        obj,
                        "email"));
                entity.IsOnline = DeserializeNonNullableBoolean(
                    global::StrawberryShake.Transport.Http.JsonElementExtensions.GetPropertyOrNull(
                        obj,
                        "isOnline"));

                return entityId;
            }

            throw new global::System.NotSupportedException();
        }

        private global::System.Boolean DeserializeNonNullableBoolean(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            return _booleanParser.Parse(obj.Value.GetBoolean()!);
        }

        private global::StrawberryShake.EntityId UpdateNonNullableIGetMessages_PersonByEmail_Messages_Nodes_SenderEntity(
            global::System.Text.Json.JsonElement? obj,
            global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            global::StrawberryShake.EntityId entityId = _extractId(obj.Value);
            entityIds.Add(entityId);


            if (entityId.Name.Equals(
                    "Person",
                    global::System.StringComparison.Ordinal))
            {
                PersonEntity entity = _entityStore.GetOrCreate<PersonEntity>(entityId);
                entity.Name = DeserializeNonNullableString(
                    global::StrawberryShake.Transport.Http.JsonElementExtensions.GetPropertyOrNull(
                        obj,
                        "name"));
                entity.Email = DeserializeNonNullableString(
                    global::StrawberryShake.Transport.Http.JsonElementExtensions.GetPropertyOrNull(
                        obj,
                        "email"));
                entity.IsOnline = DeserializeNonNullableBoolean(
                    global::StrawberryShake.Transport.Http.JsonElementExtensions.GetPropertyOrNull(
                        obj,
                        "isOnline"));

                return entityId;
            }

            throw new global::System.NotSupportedException();
        }

        private global::System.DateTimeOffset DeserializeNonNullableDateTimeOffset(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            return _dateTimeParser.Parse(obj.Value.GetString()!);
        }
    }
}


// SendMessageMutBuilder

// StrawberryShake.CodeGeneration.CSharp.JsonResultBuilderGenerator

#nullable enable

namespace Foo.Bar
{
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class SendMessageMutBuilder
        : global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, ISendMessageMutResult>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        private readonly global::System.Func<global::System.Text.Json.JsonElement, global::StrawberryShake.EntityId> _extractId;
        private readonly global::StrawberryShake.IOperationResultDataFactory<ISendMessageMutResult> _resultDataFactory;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::Foo.Bar.Direction> _directionParser;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::System.String> _iDParser;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::System.String> _stringParser;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::System.DateTimeOffset> _dateTimeParser;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.Boolean, global::System.Boolean> _booleanParser;

        public SendMessageMutBuilder(
            global::StrawberryShake.IEntityStore entityStore,
            global::System.Func<global::System.Text.Json.JsonElement, global::StrawberryShake.EntityId> extractId,
            global::StrawberryShake.IOperationResultDataFactory<ISendMessageMutResult> resultDataFactory,
            global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)
        {
            _entityStore = entityStore
                 ?? throw new global::System.ArgumentNullException(nameof(entityStore));
            _extractId = extractId
                 ?? throw new global::System.ArgumentNullException(nameof(extractId));
            _resultDataFactory = resultDataFactory
                 ?? throw new global::System.ArgumentNullException(nameof(resultDataFactory));
            _directionParser = serializerResolver.GetLeafValueParser<global::System.String, global::Foo.Bar.Direction>("Direction")
                 ?? throw new global::System.ArgumentException("No serializer for type `Direction` found.");
            _iDParser = serializerResolver.GetLeafValueParser<global::System.String, global::System.String>("ID")
                 ?? throw new global::System.ArgumentException("No serializer for type `ID` found.");
            _stringParser = serializerResolver.GetLeafValueParser<global::System.String, global::System.String>("String")
                 ?? throw new global::System.ArgumentException("No serializer for type `String` found.");
            _dateTimeParser = serializerResolver.GetLeafValueParser<global::System.String, global::System.DateTimeOffset>("DateTime")
                 ?? throw new global::System.ArgumentException("No serializer for type `DateTime` found.");
            _booleanParser = serializerResolver.GetLeafValueParser<global::System.Boolean, global::System.Boolean>("Boolean")
                 ?? throw new global::System.ArgumentException("No serializer for type `Boolean` found.");
        }

        public global::StrawberryShake.IOperationResult<ISendMessageMutResult> Build(global::StrawberryShake.Response<global::System.Text.Json.JsonDocument> response)
        {
            (ISendMessageMutResult Result, SendMessageMutResultInfo Info)? data = null;

            if (response.Body is not null
                && response.Body.RootElement.TryGetProperty("data", out global::System.Text.Json.JsonElement obj))
            {
                data = BuildData(obj);
            }

            return new global::StrawberryShake.OperationResult<ISendMessageMutResult>(
                data?.Result,
                data?.Info,
                _resultDataFactory,
                null);
        }

        private (ISendMessageMutResult, SendMessageMutResultInfo) BuildData(global::System.Text.Json.JsonElement obj)
        {
            using global::StrawberryShake.IEntityUpdateSession session = _entityStore.BeginUpdate();
            var entityIds = new global::System.Collections.Generic.HashSet<global::StrawberryShake.EntityId>();


            var resultInfo = new SendMessageMutResultInfo(
                DeserializeNonNullableISendMessageMut_SendMessage(
                    global::StrawberryShake.Transport.Http.JsonElementExtensions.GetPropertyOrNull(
                        obj,
                        "sendMessage"),
                    entityIds),
                entityIds,
                session.Version);

            return (
                _resultDataFactory.Create(resultInfo),
                resultInfo
            );
        }

        private global::Foo.Bar.State.SendMessagePayloadData DeserializeNonNullableISendMessageMut_SendMessage(
            global::System.Text.Json.JsonElement? obj,
            global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            var typename = obj.Value
                .GetProperty("__typename")
                .GetString();

            if (typename?.Equals("SendMessagePayload", global::System.StringComparison.Ordinal) ?? false)
            {
                return new global::Foo.Bar.State.SendMessagePayloadData(
                    typename,
                    message: UpdateNonNullableISendMessageMut_SendMessage_MessageEntity(
                        global::StrawberryShake.Transport.Http.JsonElementExtensions.GetPropertyOrNull(
                            obj,
                            "message"),
                        entityIds));
            }

            throw new global::System.NotSupportedException();
        }

        private global::StrawberryShake.EntityId UpdateNonNullableISendMessageMut_SendMessage_MessageEntity(
            global::System.Text.Json.JsonElement? obj,
            global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            global::StrawberryShake.EntityId entityId = _extractId(obj.Value);
            entityIds.Add(entityId);


            if (entityId.Name.Equals(
                    "Message",
                    global::System.StringComparison.Ordinal))
            {
                MessageEntity entity = _entityStore.GetOrCreate<MessageEntity>(entityId);
                entity.Id = DeserializeNonNullableString(
                    global::StrawberryShake.Transport.Http.JsonElementExtensions.GetPropertyOrNull(
                        obj,
                        "id"));
                entity.Text = DeserializeNonNullableString(
                    global::StrawberryShake.Transport.Http.JsonElementExtensions.GetPropertyOrNull(
                        obj,
                        "text"));
                entity.Direction = DeserializeNonNullableDirection(
                    global::StrawberryShake.Transport.Http.JsonElementExtensions.GetPropertyOrNull(
                        obj,
                        "direction"));
                entity.Recipient = UpdateNonNullableIGetMessages_PersonByEmail_Messages_Nodes_RecipientEntity(
                    global::StrawberryShake.Transport.Http.JsonElementExtensions.GetPropertyOrNull(
                        obj,
                        "recipient"),
                    entityIds);
                entity.Sender = UpdateNonNullableIGetMessages_PersonByEmail_Messages_Nodes_SenderEntity(
                    global::StrawberryShake.Transport.Http.JsonElementExtensions.GetPropertyOrNull(
                        obj,
                        "sender"),
                    entityIds);
                entity.Sent = DeserializeNonNullableDateTimeOffset(
                    global::StrawberryShake.Transport.Http.JsonElementExtensions.GetPropertyOrNull(
                        obj,
                        "sent"));

                return entityId;
            }

            throw new global::System.NotSupportedException();
        }

        private global::System.String DeserializeNonNullableString(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            return _iDParser.Parse(obj.Value.GetString()!);
        }

        private Direction DeserializeNonNullableDirection(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            return _directionParser.Parse(obj.Value.GetString()!);
        }

        private global::StrawberryShake.EntityId UpdateNonNullableIGetMessages_PersonByEmail_Messages_Nodes_RecipientEntity(
            global::System.Text.Json.JsonElement? obj,
            global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            global::StrawberryShake.EntityId entityId = _extractId(obj.Value);
            entityIds.Add(entityId);


            if (entityId.Name.Equals(
                    "Person",
                    global::System.StringComparison.Ordinal))
            {
                PersonEntity entity = _entityStore.GetOrCreate<PersonEntity>(entityId);
                entity.Name = DeserializeNonNullableString(
                    global::StrawberryShake.Transport.Http.JsonElementExtensions.GetPropertyOrNull(
                        obj,
                        "name"));
                entity.Email = DeserializeNonNullableString(
                    global::StrawberryShake.Transport.Http.JsonElementExtensions.GetPropertyOrNull(
                        obj,
                        "email"));
                entity.IsOnline = DeserializeNonNullableBoolean(
                    global::StrawberryShake.Transport.Http.JsonElementExtensions.GetPropertyOrNull(
                        obj,
                        "isOnline"));

                return entityId;
            }

            throw new global::System.NotSupportedException();
        }

        private global::System.Boolean DeserializeNonNullableBoolean(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            return _booleanParser.Parse(obj.Value.GetBoolean()!);
        }

        private global::StrawberryShake.EntityId UpdateNonNullableIGetMessages_PersonByEmail_Messages_Nodes_SenderEntity(
            global::System.Text.Json.JsonElement? obj,
            global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            global::StrawberryShake.EntityId entityId = _extractId(obj.Value);
            entityIds.Add(entityId);


            if (entityId.Name.Equals(
                    "Person",
                    global::System.StringComparison.Ordinal))
            {
                PersonEntity entity = _entityStore.GetOrCreate<PersonEntity>(entityId);
                entity.Name = DeserializeNonNullableString(
                    global::StrawberryShake.Transport.Http.JsonElementExtensions.GetPropertyOrNull(
                        obj,
                        "name"));
                entity.Email = DeserializeNonNullableString(
                    global::StrawberryShake.Transport.Http.JsonElementExtensions.GetPropertyOrNull(
                        obj,
                        "email"));
                entity.IsOnline = DeserializeNonNullableBoolean(
                    global::StrawberryShake.Transport.Http.JsonElementExtensions.GetPropertyOrNull(
                        obj,
                        "isOnline"));

                return entityId;
            }

            throw new global::System.NotSupportedException();
        }

        private global::System.DateTimeOffset DeserializeNonNullableDateTimeOffset(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            return _dateTimeParser.Parse(obj.Value.GetString()!);
        }
    }
}


// ReadMessagesBuilder

// StrawberryShake.CodeGeneration.CSharp.JsonResultBuilderGenerator

#nullable enable

namespace Foo.Bar
{
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class ReadMessagesBuilder
        : global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, IReadMessagesResult>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        private readonly global::System.Func<global::System.Text.Json.JsonElement, global::StrawberryShake.EntityId> _extractId;
        private readonly global::StrawberryShake.IOperationResultDataFactory<IReadMessagesResult> _resultDataFactory;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::Foo.Bar.Direction> _directionParser;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::System.String> _iDParser;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::System.String> _stringParser;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::System.DateTimeOffset> _dateTimeParser;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.Boolean, global::System.Boolean> _booleanParser;

        public ReadMessagesBuilder(
            global::StrawberryShake.IEntityStore entityStore,
            global::System.Func<global::System.Text.Json.JsonElement, global::StrawberryShake.EntityId> extractId,
            global::StrawberryShake.IOperationResultDataFactory<IReadMessagesResult> resultDataFactory,
            global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)
        {
            _entityStore = entityStore
                 ?? throw new global::System.ArgumentNullException(nameof(entityStore));
            _extractId = extractId
                 ?? throw new global::System.ArgumentNullException(nameof(extractId));
            _resultDataFactory = resultDataFactory
                 ?? throw new global::System.ArgumentNullException(nameof(resultDataFactory));
            _directionParser = serializerResolver.GetLeafValueParser<global::System.String, global::Foo.Bar.Direction>("Direction")
                 ?? throw new global::System.ArgumentException("No serializer for type `Direction` found.");
            _iDParser = serializerResolver.GetLeafValueParser<global::System.String, global::System.String>("ID")
                 ?? throw new global::System.ArgumentException("No serializer for type `ID` found.");
            _stringParser = serializerResolver.GetLeafValueParser<global::System.String, global::System.String>("String")
                 ?? throw new global::System.ArgumentException("No serializer for type `String` found.");
            _dateTimeParser = serializerResolver.GetLeafValueParser<global::System.String, global::System.DateTimeOffset>("DateTime")
                 ?? throw new global::System.ArgumentException("No serializer for type `DateTime` found.");
            _booleanParser = serializerResolver.GetLeafValueParser<global::System.Boolean, global::System.Boolean>("Boolean")
                 ?? throw new global::System.ArgumentException("No serializer for type `Boolean` found.");
        }

        public global::StrawberryShake.IOperationResult<IReadMessagesResult> Build(global::StrawberryShake.Response<global::System.Text.Json.JsonDocument> response)
        {
            (IReadMessagesResult Result, ReadMessagesResultInfo Info)? data = null;

            if (response.Body is not null
                && response.Body.RootElement.TryGetProperty("data", out global::System.Text.Json.JsonElement obj))
            {
                data = BuildData(obj);
            }

            return new global::StrawberryShake.OperationResult<IReadMessagesResult>(
                data?.Result,
                data?.Info,
                _resultDataFactory,
                null);
        }

        private (IReadMessagesResult, ReadMessagesResultInfo) BuildData(global::System.Text.Json.JsonElement obj)
        {
            using global::StrawberryShake.IEntityUpdateSession session = _entityStore.BeginUpdate();
            var entityIds = new global::System.Collections.Generic.HashSet<global::StrawberryShake.EntityId>();

            global::StrawberryShake.EntityId messageId = UpdateNonNullableIReadMessages_MessageEntity(
                global::StrawberryShake.Transport.Http.JsonElementExtensions.GetPropertyOrNull(
                    obj,
                    "message"),
                entityIds);

            var resultInfo = new ReadMessagesResultInfo(
                messageId,
                entityIds,
                session.Version);

            return (
                _resultDataFactory.Create(resultInfo),
                resultInfo
            );
        }

        private global::StrawberryShake.EntityId UpdateNonNullableIReadMessages_MessageEntity(
            global::System.Text.Json.JsonElement? obj,
            global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            global::StrawberryShake.EntityId entityId = _extractId(obj.Value);
            entityIds.Add(entityId);


            if (entityId.Name.Equals(
                    "Message",
                    global::System.StringComparison.Ordinal))
            {
                MessageEntity entity = _entityStore.GetOrCreate<MessageEntity>(entityId);
                entity.Id = DeserializeNonNullableString(
                    global::StrawberryShake.Transport.Http.JsonElementExtensions.GetPropertyOrNull(
                        obj,
                        "id"));
                entity.Text = DeserializeNonNullableString(
                    global::StrawberryShake.Transport.Http.JsonElementExtensions.GetPropertyOrNull(
                        obj,
                        "text"));
                entity.Direction = DeserializeNonNullableDirection(
                    global::StrawberryShake.Transport.Http.JsonElementExtensions.GetPropertyOrNull(
                        obj,
                        "direction"));
                entity.Recipient = UpdateNonNullableIGetMessages_PersonByEmail_Messages_Nodes_RecipientEntity(
                    global::StrawberryShake.Transport.Http.JsonElementExtensions.GetPropertyOrNull(
                        obj,
                        "recipient"),
                    entityIds);
                entity.Sender = UpdateNonNullableIGetMessages_PersonByEmail_Messages_Nodes_SenderEntity(
                    global::StrawberryShake.Transport.Http.JsonElementExtensions.GetPropertyOrNull(
                        obj,
                        "sender"),
                    entityIds);
                entity.Sent = DeserializeNonNullableDateTimeOffset(
                    global::StrawberryShake.Transport.Http.JsonElementExtensions.GetPropertyOrNull(
                        obj,
                        "sent"));

                return entityId;
            }

            throw new global::System.NotSupportedException();
        }

        private global::System.String DeserializeNonNullableString(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            return _iDParser.Parse(obj.Value.GetString()!);
        }

        private Direction DeserializeNonNullableDirection(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            return _directionParser.Parse(obj.Value.GetString()!);
        }

        private global::StrawberryShake.EntityId UpdateNonNullableIGetMessages_PersonByEmail_Messages_Nodes_RecipientEntity(
            global::System.Text.Json.JsonElement? obj,
            global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            global::StrawberryShake.EntityId entityId = _extractId(obj.Value);
            entityIds.Add(entityId);


            if (entityId.Name.Equals(
                    "Person",
                    global::System.StringComparison.Ordinal))
            {
                PersonEntity entity = _entityStore.GetOrCreate<PersonEntity>(entityId);
                entity.Name = DeserializeNonNullableString(
                    global::StrawberryShake.Transport.Http.JsonElementExtensions.GetPropertyOrNull(
                        obj,
                        "name"));
                entity.Email = DeserializeNonNullableString(
                    global::StrawberryShake.Transport.Http.JsonElementExtensions.GetPropertyOrNull(
                        obj,
                        "email"));
                entity.IsOnline = DeserializeNonNullableBoolean(
                    global::StrawberryShake.Transport.Http.JsonElementExtensions.GetPropertyOrNull(
                        obj,
                        "isOnline"));

                return entityId;
            }

            throw new global::System.NotSupportedException();
        }

        private global::System.Boolean DeserializeNonNullableBoolean(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            return _booleanParser.Parse(obj.Value.GetBoolean()!);
        }

        private global::StrawberryShake.EntityId UpdateNonNullableIGetMessages_PersonByEmail_Messages_Nodes_SenderEntity(
            global::System.Text.Json.JsonElement? obj,
            global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            global::StrawberryShake.EntityId entityId = _extractId(obj.Value);
            entityIds.Add(entityId);


            if (entityId.Name.Equals(
                    "Person",
                    global::System.StringComparison.Ordinal))
            {
                PersonEntity entity = _entityStore.GetOrCreate<PersonEntity>(entityId);
                entity.Name = DeserializeNonNullableString(
                    global::StrawberryShake.Transport.Http.JsonElementExtensions.GetPropertyOrNull(
                        obj,
                        "name"));
                entity.Email = DeserializeNonNullableString(
                    global::StrawberryShake.Transport.Http.JsonElementExtensions.GetPropertyOrNull(
                        obj,
                        "email"));
                entity.IsOnline = DeserializeNonNullableBoolean(
                    global::StrawberryShake.Transport.Http.JsonElementExtensions.GetPropertyOrNull(
                        obj,
                        "isOnline"));

                return entityId;
            }

            throw new global::System.NotSupportedException();
        }

        private global::System.DateTimeOffset DeserializeNonNullableDateTimeOffset(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            return _dateTimeParser.Parse(obj.Value.GetString()!);
        }
    }
}


// PersonConnectionData

// StrawberryShake.CodeGeneration.CSharp.DataTypeGenerator

#nullable enable

namespace Foo.Bar.State
{
    /// <summary>
    /// A connection to a list of items.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class PersonConnectionData
    {
        public PersonConnectionData(
            global::System.String typename,
            global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.EntityId?>? nodes = null)
        {
            __typename = typename
                 ?? throw new global::System.ArgumentNullException(nameof(typename));
            Nodes = nodes;
        }

        public global::System.String __typename { get; }

        /// <summary>
        /// A flattened list of the nodes.
        /// </summary>
        public global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.EntityId?>? Nodes { get; }
    }
}


// MessageConnectionData

// StrawberryShake.CodeGeneration.CSharp.DataTypeGenerator

#nullable enable

namespace Foo.Bar.State
{
    /// <summary>
    /// A connection to a list of items.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class MessageConnectionData
    {
        public MessageConnectionData(
            global::System.String typename,
            global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.EntityId?>? nodes = null)
        {
            __typename = typename
                 ?? throw new global::System.ArgumentNullException(nameof(typename));
            Nodes = nodes;
        }

        public global::System.String __typename { get; }

        /// <summary>
        /// A flattened list of the nodes.
        /// </summary>
        public global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.EntityId?>? Nodes { get; }
    }
}


// SendMessagePayloadData

// StrawberryShake.CodeGeneration.CSharp.DataTypeGenerator

#nullable enable

namespace Foo.Bar.State
{
    /// <summary>
    /// Type SendMessagePayload
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class SendMessagePayloadData
    {
        public SendMessagePayloadData(
            global::System.String typename,
            global::StrawberryShake.EntityId? message = null)
        {
            __typename = typename
                 ?? throw new global::System.ArgumentNullException(nameof(typename));
            Message = message;
        }

        public global::System.String __typename { get; }

        /// <summary>
        /// Field message
        /// </summary>
        public global::StrawberryShake.EntityId? Message { get; }
    }
}


// FooClient

// StrawberryShake.CodeGeneration.CSharp.ClientGenerator

#nullable enable

namespace Foo.Bar
{
    /// <summary>
    /// Represents the FooClient GraphQL client
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class FooClient
    {
        private readonly global::Foo.Bar.GetPeopleQuery _getPeople;
        private readonly global::Foo.Bar.GetMessagesQuery _getMessages;
        private readonly global::Foo.Bar.SendMessageInputMutation _sendMessageInput;
        private readonly global::Foo.Bar.SendMessageMutMutation _sendMessageMut;
        private readonly global::Foo.Bar.ReadMessagesSubscription _readMessages;

        public FooClient(
            global::Foo.Bar.GetPeopleQuery getPeople,
            global::Foo.Bar.GetMessagesQuery getMessages,
            global::Foo.Bar.SendMessageInputMutation sendMessageInput,
            global::Foo.Bar.SendMessageMutMutation sendMessageMut,
            global::Foo.Bar.ReadMessagesSubscription readMessages)
        {
            _getPeople = getPeople
                 ?? throw new global::System.ArgumentNullException(nameof(getPeople));
            _getMessages = getMessages
                 ?? throw new global::System.ArgumentNullException(nameof(getMessages));
            _sendMessageInput = sendMessageInput
                 ?? throw new global::System.ArgumentNullException(nameof(sendMessageInput));
            _sendMessageMut = sendMessageMut
                 ?? throw new global::System.ArgumentNullException(nameof(sendMessageMut));
            _readMessages = readMessages
                 ?? throw new global::System.ArgumentNullException(nameof(readMessages));
        }

        public global::System.String ClientName => "FooClient";

        public global::Foo.Bar.GetPeopleQuery GetPeople => _getPeople;

        public global::Foo.Bar.GetMessagesQuery GetMessages => _getMessages;

        public global::Foo.Bar.SendMessageInputMutation SendMessageInput => _sendMessageInput;

        public global::Foo.Bar.SendMessageMutMutation SendMessageMut => _sendMessageMut;

        public global::Foo.Bar.ReadMessagesSubscription ReadMessages => _readMessages;
    }
}


// EntityIdFactory

// StrawberryShake.CodeGeneration.CSharp.EntityIdFactoryGenerator

#nullable enable

namespace Foo.Bar
{
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public static partial class EntityIdFactory
    {
        public static global::StrawberryShake.EntityId CreateEntityId(global::System.Text.Json.JsonElement obj)
        {
            global::System.String typeName = obj
                .GetProperty("__typename")
                .GetString()!;

            return typeName switch
            {
                "Person" => CreatePersonEntityId(
                    obj,
                    typeName),
                "Message" => CreateMessageEntityId(
                    obj,
                    typeName),
                _ => throw new global::System.NotSupportedException()
            };
        }

        private static global::StrawberryShake.EntityId CreatePersonEntityId(
            global::System.Text.Json.JsonElement obj,
            global::System.String type)
        {
            return new global::StrawberryShake.EntityId(
                type,
                obj
                    .GetProperty("id")
                    .GetString()!);
        }

        private static global::StrawberryShake.EntityId CreateMessageEntityId(
            global::System.Text.Json.JsonElement obj,
            global::System.String type)
        {
            return new global::StrawberryShake.EntityId(
                type,
                obj
                    .GetProperty("id")
                    .GetString()!);
        }
    }
}


// FooClientServiceCollectionExtensions

// StrawberryShake.CodeGeneration.CSharp.DependencyInjectionGenerator

#nullable enable

namespace Microsoft.Extensions.DependencyInjection
{
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public static partial class FooClientServiceCollectionExtensions
    {
        public static global::Microsoft.Extensions.DependencyInjection.IServiceCollection AddFooClient(
            this global::Microsoft.Extensions.DependencyInjection.IServiceCollection services,
            global::StrawberryShake.ExecutionStrategy strategy = global::StrawberryShake.ExecutionStrategy.NetworkOnly)
        {
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton(
                services,
                sp => 
                {
                    var serviceCollection = new global::Microsoft.Extensions.DependencyInjection.ServiceCollection();

                    ConfigureClient(
                        serviceCollection,
                        sp,
                        strategy);

                    return new ClientServiceProvider(
                        global::Microsoft.Extensions.DependencyInjection.ServiceCollectionContainerBuilderExtensions.BuildServiceProvider(serviceCollection));
                });

            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton(
                services,
                sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::Foo.Bar.GetPeopleQuery>(
                    global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<ClientServiceProvider>(sp)));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton(
                services,
                sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::Foo.Bar.GetMessagesQuery>(
                    global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<ClientServiceProvider>(sp)));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton(
                services,
                sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::Foo.Bar.SendMessageInputMutation>(
                    global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<ClientServiceProvider>(sp)));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton(
                services,
                sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::Foo.Bar.SendMessageMutMutation>(
                    global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<ClientServiceProvider>(sp)));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton(
                services,
                sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::Foo.Bar.ReadMessagesSubscription>(
                    global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<ClientServiceProvider>(sp)));

            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton(
                services,
                sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::Foo.Bar.FooClient>(
                    global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<ClientServiceProvider>(sp)));

            return services;
        }

        private static global::Microsoft.Extensions.DependencyInjection.IServiceCollection ConfigureClient(
            global::Microsoft.Extensions.DependencyInjection.IServiceCollection services,
            global::System.IServiceProvider parentServices,
            global::StrawberryShake.ExecutionStrategy strategy = global::StrawberryShake.ExecutionStrategy.NetworkOnly)
        {
            if (services is null)
            {
                throw new global::System.ArgumentNullException(nameof(services));
            }
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::System.Func<global::System.Text.Json.JsonElement, global::StrawberryShake.EntityId>>(
                services,
                global::Foo.Bar.EntityIdFactory.CreateEntityId);
            global::Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddSingleton<global::StrawberryShake.IEntityStore, global::StrawberryShake.EntityStore>(services);
            global::Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddSingleton<global::StrawberryShake.IOperationStore>(
                services,
                sp => new global::StrawberryShake.OperationStore(
                    global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IEntityStore>(sp)
                    .Watch()));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton(
                services,
                sp => 
                {
                    var sessionPool = global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.Transport.WebSockets.ISessionPool>(parentServices);
                    return new global::StrawberryShake.Transport.WebSockets.WebSocketConnection(() => sessionPool.CreateAsync(
                        "global::Foo.Bar.FooClient",
                        default));
                });
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton(
                services,
                sp => 
                {
                    var clientFactory = global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::System.Net.Http.IHttpClientFactory>(parentServices);
                    return new global::StrawberryShake.Transport.Http.HttpConnection(() => clientFactory.CreateClient("global::Foo.Bar.FooClient"));
                });

            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IEntityMapper<global::Foo.Bar.PersonEntity, global::Foo.Bar.GetPeople_People_Nodes_Person>, global::Foo.Bar.GetPeople_People_Nodes_PersonFromPersonEntityMapper>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IEntityMapper<global::Foo.Bar.PersonEntity, global::Foo.Bar.GetMessages_PersonByEmail_Person>, global::Foo.Bar.GetMessages_PersonByEmail_PersonFromPersonEntityMapper>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IEntityMapper<global::Foo.Bar.MessageEntity, global::Foo.Bar.GetMessages_PersonByEmail_Messages_Nodes_Message>, global::Foo.Bar.GetMessages_PersonByEmail_Messages_Nodes_MessageFromMessageEntityMapper>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IEntityMapper<global::Foo.Bar.PersonEntity, global::Foo.Bar.GetMessages_PersonByEmail_Messages_Nodes_Recipient_Person>, global::Foo.Bar.GetMessages_PersonByEmail_Messages_Nodes_Recipient_PersonFromPersonEntityMapper>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IEntityMapper<global::Foo.Bar.PersonEntity, global::Foo.Bar.GetMessages_PersonByEmail_Messages_Nodes_Sender_Person>, global::Foo.Bar.GetMessages_PersonByEmail_Messages_Nodes_Sender_PersonFromPersonEntityMapper>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IEntityMapper<global::Foo.Bar.MessageEntity, global::Foo.Bar.SendMessageInput_SendMessage_Message_Message>, global::Foo.Bar.SendMessageInput_SendMessage_Message_MessageFromMessageEntityMapper>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IEntityMapper<global::Foo.Bar.PersonEntity, global::Foo.Bar.SendMessageInput_SendMessage_Message_Recipient_Person>, global::Foo.Bar.SendMessageInput_SendMessage_Message_Recipient_PersonFromPersonEntityMapper>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IEntityMapper<global::Foo.Bar.PersonEntity, global::Foo.Bar.SendMessageInput_SendMessage_Message_Sender_Person>, global::Foo.Bar.SendMessageInput_SendMessage_Message_Sender_PersonFromPersonEntityMapper>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IEntityMapper<global::Foo.Bar.MessageEntity, global::Foo.Bar.SendMessageMut_SendMessage_Message_Message>, global::Foo.Bar.SendMessageMut_SendMessage_Message_MessageFromMessageEntityMapper>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IEntityMapper<global::Foo.Bar.PersonEntity, global::Foo.Bar.SendMessageMut_SendMessage_Message_Recipient_Person>, global::Foo.Bar.SendMessageMut_SendMessage_Message_Recipient_PersonFromPersonEntityMapper>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IEntityMapper<global::Foo.Bar.PersonEntity, global::Foo.Bar.SendMessageMut_SendMessage_Message_Sender_Person>, global::Foo.Bar.SendMessageMut_SendMessage_Message_Sender_PersonFromPersonEntityMapper>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IEntityMapper<global::Foo.Bar.MessageEntity, global::Foo.Bar.ReadMessages_Message_Message>, global::Foo.Bar.ReadMessages_Message_MessageFromMessageEntityMapper>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IEntityMapper<global::Foo.Bar.PersonEntity, global::Foo.Bar.ReadMessages_Message_Recipient_Person>, global::Foo.Bar.ReadMessages_Message_Recipient_PersonFromPersonEntityMapper>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IEntityMapper<global::Foo.Bar.PersonEntity, global::Foo.Bar.ReadMessages_Message_Sender_Person>, global::Foo.Bar.ReadMessages_Message_Sender_PersonFromPersonEntityMapper>(services);

            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::Foo.Bar.DirectionSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.StringSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.BooleanSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.ByteSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.ShortSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.IntSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.LongSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.FloatSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.DecimalSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.UrlSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.UuidSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.IdSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.DateTimeSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.DateSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.ByteArraySerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.TimeSpanSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::Foo.Bar.SendMessageInputInputValueFormatter>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializerResolver>(
                services,
                sp => new global::StrawberryShake.Serialization.SerializerResolver(
                    global::System.Linq.Enumerable.Concat(
                        global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::System.Collections.Generic.IEnumerable<global::StrawberryShake.Serialization.ISerializer>>(
                            parentServices),
                        global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::System.Collections.Generic.IEnumerable<global::StrawberryShake.Serialization.ISerializer>>(
                            sp))));

            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultDataFactory<global::Foo.Bar.IGetPeopleResult>, global::Foo.Bar.GetPeopleResultFactory>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::Foo.Bar.IGetPeopleResult>, global::Foo.Bar.GetPeopleBuilder>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationExecutor<global::Foo.Bar.IGetPeopleResult>>(
                services,
                sp => new global::StrawberryShake.OperationExecutor<global::System.Text.Json.JsonDocument, global::Foo.Bar.IGetPeopleResult>(
                    global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.Transport.Http.HttpConnection>(sp),
                    () => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::Foo.Bar.IGetPeopleResult>>(sp),
                    global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationStore>(sp),
                    strategy));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::Foo.Bar.GetPeopleQuery>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultDataFactory<global::Foo.Bar.IGetMessagesResult>, global::Foo.Bar.GetMessagesResultFactory>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::Foo.Bar.IGetMessagesResult>, global::Foo.Bar.GetMessagesBuilder>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationExecutor<global::Foo.Bar.IGetMessagesResult>>(
                services,
                sp => new global::StrawberryShake.OperationExecutor<global::System.Text.Json.JsonDocument, global::Foo.Bar.IGetMessagesResult>(
                    global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.Transport.Http.HttpConnection>(sp),
                    () => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::Foo.Bar.IGetMessagesResult>>(sp),
                    global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationStore>(sp),
                    strategy));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::Foo.Bar.GetMessagesQuery>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultDataFactory<global::Foo.Bar.ISendMessageInputResult>, global::Foo.Bar.SendMessageInput_1ResultFactory>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::Foo.Bar.ISendMessageInputResult>, global::Foo.Bar.SendMessageInputBuilder>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationExecutor<global::Foo.Bar.ISendMessageInputResult>>(
                services,
                sp => new global::StrawberryShake.OperationExecutor<global::System.Text.Json.JsonDocument, global::Foo.Bar.ISendMessageInputResult>(
                    global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.Transport.Http.HttpConnection>(sp),
                    () => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::Foo.Bar.ISendMessageInputResult>>(sp),
                    global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationStore>(sp),
                    strategy));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::Foo.Bar.SendMessageInputMutation>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultDataFactory<global::Foo.Bar.ISendMessageMutResult>, global::Foo.Bar.SendMessageMutResultFactory>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::Foo.Bar.ISendMessageMutResult>, global::Foo.Bar.SendMessageMutBuilder>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationExecutor<global::Foo.Bar.ISendMessageMutResult>>(
                services,
                sp => new global::StrawberryShake.OperationExecutor<global::System.Text.Json.JsonDocument, global::Foo.Bar.ISendMessageMutResult>(
                    global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.Transport.Http.HttpConnection>(sp),
                    () => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::Foo.Bar.ISendMessageMutResult>>(sp),
                    global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationStore>(sp),
                    strategy));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::Foo.Bar.SendMessageMutMutation>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultDataFactory<global::Foo.Bar.IReadMessagesResult>, global::Foo.Bar.ReadMessagesResultFactory>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::Foo.Bar.IReadMessagesResult>, global::Foo.Bar.ReadMessagesBuilder>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationExecutor<global::Foo.Bar.IReadMessagesResult>>(
                services,
                sp => new global::StrawberryShake.OperationExecutor<global::System.Text.Json.JsonDocument, global::Foo.Bar.IReadMessagesResult>(
                    global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.Transport.WebSockets.WebSocketConnection>(sp),
                    () => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::Foo.Bar.IReadMessagesResult>>(sp),
                    global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationStore>(sp),
                    strategy));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::Foo.Bar.ReadMessagesSubscription>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::Foo.Bar.FooClient>(services);
            return services;
        }

        private class ClientServiceProvider
            : System.IServiceProvider
            , System.IDisposable
        {
            private readonly System.IServiceProvider _provider;

            public ClientServiceProvider(System.IServiceProvider provider)
            {
                _provider = provider;
            }

            public object? GetService(System.Type serviceType)
            {
                return _provider.GetService(serviceType);
            }

            public void Dispose()
            {
                if (_provider is System.IDisposable d)
                {
                    d.Dispose();
                }
            }
        }
    }
}


