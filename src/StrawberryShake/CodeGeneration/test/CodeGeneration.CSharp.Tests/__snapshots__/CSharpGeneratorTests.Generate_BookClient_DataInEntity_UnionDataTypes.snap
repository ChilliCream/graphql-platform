// ReSharper disable BuiltInTypeReferenceStyle
// ReSharper disable RedundantNameQualifier
// ReSharper disable ArrangeObjectCreationWhenTypeEvident
// ReSharper disable UnusedType.Global
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable UnusedMethodReturnValue.Local
// ReSharper disable ConvertToAutoProperty
// ReSharper disable UnusedMember.Global
// ReSharper disable SuggestVarOrType_SimpleTypes
// ReSharper disable InconsistentNaming

// SearchableStoreEntity

// StrawberryShake.CodeGeneration.CSharp.EntityTypeGenerator

#nullable enable

namespace Foo.Bar
{
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class SearchableStoreEntity
    {
        public global::System.String Id { get; set; } = default!;

        public global::System.Collections.Generic.IReadOnlyList<global::Foo.Bar.State.BookData?>? Books { get; set; }

        public global::Foo.Bar.State.ISearchResultData? Search { get; set; }
    }
}


// GetStore2ResultFactory

// StrawberryShake.CodeGeneration.CSharp.ResultDataFactoryGenerator

#nullable enable

namespace Foo.Bar
{
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class GetStore2ResultFactory
        : global::StrawberryShake.IOperationResultDataFactory<GetStore2Result>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        private readonly global::StrawberryShake.IEntityMapper<SearchableStoreEntity, GetStore2_SearchableStore_SearchableStore> _getStore2_SearchableStore_SearchableStoreFromSearchableStoreEntityMapper;

        public GetStore2ResultFactory(
            global::StrawberryShake.IEntityStore entityStore,
            global::StrawberryShake.IEntityMapper<SearchableStoreEntity, GetStore2_SearchableStore_SearchableStore> getStore2_SearchableStore_SearchableStoreFromSearchableStoreEntityMapper)
        {
            _entityStore = entityStore
                 ?? throw new global::System.ArgumentNullException(nameof(entityStore));
            _getStore2_SearchableStore_SearchableStoreFromSearchableStoreEntityMapper = getStore2_SearchableStore_SearchableStoreFromSearchableStoreEntityMapper
                 ?? throw new global::System.ArgumentNullException(nameof(getStore2_SearchableStore_SearchableStoreFromSearchableStoreEntityMapper));
        }

        public GetStore2Result Create(global::StrawberryShake.IOperationResultDataInfo dataInfo)
        {
            if (dataInfo is GetStore2ResultInfo info)
            {
                return new GetStore2Result(MapNonNullableIGetStore2_SearchableStore(info.SearchableStore));
            }

            throw new global::System.ArgumentException("GetStore2ResultInfo expected.");
        }

        private IGetStore2_SearchableStore MapNonNullableIGetStore2_SearchableStore(global::StrawberryShake.EntityId entityId)
        {

            if (entityId.Name.Equals(
                    "SearchableStore",
                    global::System.StringComparison.Ordinal))
            {
                return _getStore2_SearchableStore_SearchableStoreFromSearchableStoreEntityMapper.Map(
                    _entityStore.GetEntity<SearchableStoreEntity>(entityId)
                        ?? throw new global::StrawberryShake.GraphQLClientException());
            }
            throw new global::System.NotSupportedException();
        }
    }
}


// GetStore2ResultInfo

// StrawberryShake.CodeGeneration.CSharp.ResultInfoGenerator

#nullable enable

namespace Foo.Bar
{
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class GetStore2ResultInfo
        : global::StrawberryShake.IOperationResultDataInfo
    {
        private readonly global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> _entityIds;
        private readonly global::System.UInt64 _version;

        public GetStore2ResultInfo(
            global::StrawberryShake.EntityId searchableStore,
            global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> entityIds,
            global::System.UInt64 version)
        {
            SearchableStore = searchableStore;
            _entityIds = entityIds
                 ?? throw new global::System.ArgumentNullException(nameof(entityIds));
            _version = version;
        }

        public global::StrawberryShake.EntityId SearchableStore { get; }

        public global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> EntityIds => _entityIds;

        public global::System.UInt64 Version => _version;

        public global::StrawberryShake.IOperationResultDataInfo WithVersion(global::System.UInt64 version)
        {
            return new GetStore2ResultInfo(
                SearchableStore,
                _entityIds,
                version);
        }
    }
}


// GetStore2Result

// StrawberryShake.CodeGeneration.CSharp.ResultTypeGenerator

#nullable enable

namespace Foo.Bar
{
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class GetStore2Result
        : IGetStore2Result
    {
        public GetStore2Result(IGetStore2_SearchableStore searchableStore)
        {
            SearchableStore = searchableStore;
        }

        public IGetStore2_SearchableStore SearchableStore { get; }
    }
}


// GetStore2_SearchableStore_SearchableStoreFromSearchableStoreEntityMapper

// StrawberryShake.CodeGeneration.CSharp.ResultFromEntityTypeMapperGenerator

#nullable enable

namespace Foo.Bar
{
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class GetStore2_SearchableStore_SearchableStoreFromSearchableStoreEntityMapper
        : global::StrawberryShake.IEntityMapper<SearchableStoreEntity, GetStore2_SearchableStore_SearchableStore>
    {
        public GetStore2_SearchableStore_SearchableStore Map(SearchableStoreEntity entity)
        {
            return new GetStore2_SearchableStore_SearchableStore(
                entity.Id,
                MapIGetStore2_SearchableStore_BooksArray(entity.Books),
                MapISearchResultData(entity.Search));
        }

        private global::System.Collections.Generic.IReadOnlyList<IGetStore2_SearchableStore_Books?>? MapIGetStore2_SearchableStore_BooksArray(global::System.Collections.Generic.IReadOnlyList<global::Foo.Bar.State.BookData?>? list)
        {
            if (list == default)
            {
                return null;
            }

            var books = new global::System.Collections.Generic.List<IGetStore2_SearchableStore_Books?>();

            foreach (global::Foo.Bar.State.BookData? child in list)
            {
                books.Add(MapIGetStore2_SearchableStore_Books(child));
            }

            return books;
        }

        private IGetStore2_SearchableStore_Books? MapIGetStore2_SearchableStore_Books(global::Foo.Bar.State.BookData data)
        {
            if (data == default)
            {
                return null;
            }

            IGetStore2_SearchableStore_Books returnValue = default!;

            if (data?.__typename.Equals(
                    "Book",
                    global::System.StringComparison.Ordinal) ?? false)
            {
                returnValue = new GetStore2_SearchableStore_Books_Book(
                    data.Isbn ?? throw new global::System.ArgumentNullException(),
                    data.Title ?? throw new global::System.ArgumentNullException());
            }
            else {
                throw new global::System.NotSupportedException();
            }
            return returnValue;
        }

        private IGetStore2_SearchableStore_Search? MapISearchResultData(global::Foo.Bar.State.ISearchResultData data)
        {
            if (data == default)
            {
                return null;
            }

            IGetStore2_SearchableStore_Search returnValue = default!;

            if (data is global::Foo.Bar.State.AuthorData author)
            {
                returnValue = new global::Foo.Bar.GetStore2_SearchableStore_Search_Author();
            }
            else if (data is global::Foo.Bar.State.BookData book)
            {
                returnValue = new global::Foo.Bar.GetStore2_SearchableStore_Search_Book(
                    book.Title,
                    book.Isbn);
            }
            else {
                throw new global::System.NotSupportedException();
            }
            return returnValue;
        }
    }
}


// GetStore2_SearchableStore_SearchableStore

// StrawberryShake.CodeGeneration.CSharp.ResultTypeGenerator

#nullable enable

namespace Foo.Bar
{
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class GetStore2_SearchableStore_SearchableStore
        : IGetStore2_SearchableStore_SearchableStore
    {
        public GetStore2_SearchableStore_SearchableStore(
            global::System.String id,
            global::System.Collections.Generic.IReadOnlyList<IGetStore2_SearchableStore_Books?>? books,
            IGetStore2_SearchableStore_Search? search)
        {
            Id = id;
            Books = books;
            Search = search;
        }

        public global::System.String Id { get; }

        public global::System.Collections.Generic.IReadOnlyList<IGetStore2_SearchableStore_Books?>? Books { get; } = default!;

        public IGetStore2_SearchableStore_Search? Search { get; } = default!;
    }
}


// GetStore2_SearchableStore_Books_Book

// StrawberryShake.CodeGeneration.CSharp.ResultTypeGenerator

#nullable enable

namespace Foo.Bar
{
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class GetStore2_SearchableStore_Books_Book
        : IGetStore2_SearchableStore_Books_Book
    {
        public GetStore2_SearchableStore_Books_Book(
            global::System.String isbn,
            global::System.String title)
        {
            Isbn = isbn;
            Title = title;
        }

        public global::System.String Isbn { get; }

        public global::System.String Title { get; }
    }
}


// GetStore2_SearchableStore_Search_Author

// StrawberryShake.CodeGeneration.CSharp.ResultTypeGenerator

#nullable enable

namespace Foo.Bar
{
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class GetStore2_SearchableStore_Search_Author
        : IGetStore2_SearchableStore_Search_Author
    {
        public GetStore2_SearchableStore_Search_Author()
        {
        }
    }
}


// GetStore2_SearchableStore_Search_Book

// StrawberryShake.CodeGeneration.CSharp.ResultTypeGenerator

#nullable enable

namespace Foo.Bar
{
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class GetStore2_SearchableStore_Search_Book
        : IGetStore2_SearchableStore_Search_Book
    {
        public GetStore2_SearchableStore_Search_Book(
            global::System.String title,
            global::System.String isbn)
        {
            Title = title;
            Isbn = isbn;
        }

        public global::System.String Title { get; }

        public global::System.String Isbn { get; }
    }
}


// IGetStore2Result

// StrawberryShake.CodeGeneration.CSharp.ResultInterfaceGenerator

#nullable enable

namespace Foo.Bar
{
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public interface IGetStore2Result
    {
        public IGetStore2_SearchableStore SearchableStore { get; }
    }
}


// IGetStore2_SearchableStore

// StrawberryShake.CodeGeneration.CSharp.ResultInterfaceGenerator

#nullable enable

namespace Foo.Bar
{
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public interface IGetStore2_SearchableStore
    {
        public global::System.String Id { get; }

        public global::System.Collections.Generic.IReadOnlyList<IGetStore2_SearchableStore_Books?>? Books { get; }

        public IGetStore2_SearchableStore_Search? Search { get; }
    }
}


// IGetStore2_SearchableStore_SearchableStore

// StrawberryShake.CodeGeneration.CSharp.ResultInterfaceGenerator

#nullable enable

namespace Foo.Bar
{
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public interface IGetStore2_SearchableStore_SearchableStore
        : IGetStore2_SearchableStore
    {
    }
}


// IGetStore2_SearchableStore_Books

// StrawberryShake.CodeGeneration.CSharp.ResultInterfaceGenerator

#nullable enable

namespace Foo.Bar
{
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public interface IGetStore2_SearchableStore_Books
    {
        public global::System.String Isbn { get; }

        public global::System.String Title { get; }
    }
}


// IGetStore2_SearchableStore_Books_Book

// StrawberryShake.CodeGeneration.CSharp.ResultInterfaceGenerator

#nullable enable

namespace Foo.Bar
{
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public interface IGetStore2_SearchableStore_Books_Book
        : IGetStore2_SearchableStore_Books
    {
    }
}


// IGetStore2_SearchableStore_Search

// StrawberryShake.CodeGeneration.CSharp.ResultInterfaceGenerator

#nullable enable

namespace Foo.Bar
{
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public interface IGetStore2_SearchableStore_Search
    {
    }
}


// IGetStore2_SearchableStore_Search_Author

// StrawberryShake.CodeGeneration.CSharp.ResultInterfaceGenerator

#nullable enable

namespace Foo.Bar
{
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public interface IGetStore2_SearchableStore_Search_Author
        : IGetStore2_SearchableStore_Search
    {
    }
}


// IGetStore2_SearchableStore_Search_Book

// StrawberryShake.CodeGeneration.CSharp.ResultInterfaceGenerator

#nullable enable

namespace Foo.Bar
{
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public interface IGetStore2_SearchableStore_Search_Book
        : IGetStore2_SearchableStore_Search
    {
        public global::System.String Title { get; }

        public global::System.String Isbn { get; }
    }
}


// GetStore2QueryDocument

// StrawberryShake.CodeGeneration.CSharp.OperationDocumentGenerator

#nullable enable

namespace Foo.Bar
{
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class GetStore2QueryDocument
        : global::StrawberryShake.IDocument
    {
        private GetStore2QueryDocument()
        {
        }

        public static GetStore2QueryDocument Instance { get; } = new GetStore2QueryDocument();

        public global::StrawberryShake.OperationKind Kind => global::StrawberryShake.OperationKind.Query;

        public global::System.ReadOnlySpan<global::System.Byte> Body => new global::System.Byte[]{ 0x71, 0x75, 0x65, 0x72, 0x79, 0x20, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x32, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x64, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x73, 0x62, 0x6e, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x2e, 0x2e, 0x2e, 0x20, 0x6f, 0x6e, 0x20, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x73, 0x62, 0x6e, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x2e, 0x2e, 0x2e, 0x20, 0x6f, 0x6e, 0x20, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x64, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x7d, 0x0a, 0x7d };

        public override global::System.String ToString()
        {
            return global::System.Text.Encoding.UTF8.GetString(Body);
        }
    }
}


// GetStore2Query

// StrawberryShake.CodeGeneration.CSharp.OperationServiceGenerator

#nullable enable

namespace Foo.Bar
{
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class GetStore2Query
    {
        private readonly global::StrawberryShake.IOperationExecutor<IGetStore2Result> _operationExecutor;

        public GetStore2Query(global::StrawberryShake.IOperationExecutor<IGetStore2Result> operationExecutor)
        {
            _operationExecutor = operationExecutor
                 ?? throw new global::System.ArgumentNullException(nameof(operationExecutor));
        }

        public async global::System.Threading.Tasks.Task<global::StrawberryShake.IOperationResult<IGetStore2Result>> ExecuteAsync(global::System.Threading.CancellationToken cancellationToken = default)
        {
            var request = CreateRequest();

            return await _operationExecutor
                .ExecuteAsync(
                    request,
                    cancellationToken)
                .ConfigureAwait(false);
        }

        public global::System.IObservable<global::StrawberryShake.IOperationResult<IGetStore2Result>> Watch(global::StrawberryShake.ExecutionStrategy? strategy = null)
        {
            var request = CreateRequest();
            return _operationExecutor.Watch(
                request,
                strategy);
        }

        private global::StrawberryShake.OperationRequest CreateRequest()
        {

            return new global::StrawberryShake.OperationRequest(
                "GetStore2",
                GetStore2QueryDocument.Instance);
        }
    }
}


// GetStore2Builder

// StrawberryShake.CodeGeneration.CSharp.JsonResultBuilderGenerator

#nullable enable

namespace Foo.Bar
{
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class GetStore2Builder
        : global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, IGetStore2Result>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        private readonly global::System.Func<global::System.Text.Json.JsonElement, global::StrawberryShake.EntityId> _extractId;
        private readonly global::StrawberryShake.IOperationResultDataFactory<IGetStore2Result> _resultDataFactory;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::System.String> _stringParser;

        public GetStore2Builder(
            global::StrawberryShake.IEntityStore entityStore,
            global::System.Func<global::System.Text.Json.JsonElement, global::StrawberryShake.EntityId> extractId,
            global::StrawberryShake.IOperationResultDataFactory<IGetStore2Result> resultDataFactory,
            global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)
        {
            _entityStore = entityStore
                 ?? throw new global::System.ArgumentNullException(nameof(entityStore));
            _extractId = extractId
                 ?? throw new global::System.ArgumentNullException(nameof(extractId));
            _resultDataFactory = resultDataFactory
                 ?? throw new global::System.ArgumentNullException(nameof(resultDataFactory));
            _stringParser = serializerResolver.GetLeafValueParser<global::System.String, global::System.String>("String")
                 ?? throw new global::System.ArgumentException("No serializer for type `String` found.");
        }

        public global::StrawberryShake.IOperationResult<IGetStore2Result> Build(global::StrawberryShake.Response<global::System.Text.Json.JsonDocument> response)
        {
            (IGetStore2Result Result, GetStore2ResultInfo Info)? data = null;

            if (response.Body is not null
                && response.Body.RootElement.TryGetProperty("data", out global::System.Text.Json.JsonElement obj))
            {
                data = BuildData(obj);
            }

            return new global::StrawberryShake.OperationResult<IGetStore2Result>(
                data?.Result,
                data?.Info,
                _resultDataFactory,
                null);
        }

        private (IGetStore2Result, GetStore2ResultInfo) BuildData(global::System.Text.Json.JsonElement obj)
        {
            using global::StrawberryShake.IEntityUpdateSession session = _entityStore.BeginUpdate();
            var entityIds = new global::System.Collections.Generic.HashSet<global::StrawberryShake.EntityId>();

            global::StrawberryShake.EntityId searchableStoreId = UpdateNonNullableIGetStore2_SearchableStoreEntity(
                global::StrawberryShake.Transport.Http.JsonElementExtensions.GetPropertyOrNull(
                    obj,
                    "searchableStore"),
                entityIds);

            var resultInfo = new GetStore2ResultInfo(
                searchableStoreId,
                entityIds,
                session.Version);

            return (
                _resultDataFactory.Create(resultInfo),
                resultInfo
            );
        }

        private global::StrawberryShake.EntityId UpdateNonNullableIGetStore2_SearchableStoreEntity(
            global::System.Text.Json.JsonElement? obj,
            global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            global::StrawberryShake.EntityId entityId = _extractId(obj.Value);
            entityIds.Add(entityId);


            if (entityId.Name.Equals(
                    "SearchableStore",
                    global::System.StringComparison.Ordinal))
            {
                SearchableStoreEntity entity = _entityStore.GetOrCreate<SearchableStoreEntity>(entityId);
                entity.Id = DeserializeNonNullableString(
                    global::StrawberryShake.Transport.Http.JsonElementExtensions.GetPropertyOrNull(
                        obj,
                        "id"));
                entity.Books = DeserializeIGetStore2_SearchableStore_BooksArray(
                    global::StrawberryShake.Transport.Http.JsonElementExtensions.GetPropertyOrNull(
                        obj,
                        "books"));
                entity.Search = DeserializeISearchResultData(
                    global::StrawberryShake.Transport.Http.JsonElementExtensions.GetPropertyOrNull(
                        obj,
                        "search"));

                return entityId;
            }

            throw new global::System.NotSupportedException();
        }

        private global::System.String DeserializeNonNullableString(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            return _stringParser.Parse(obj.Value.GetString()!);
        }

        private global::System.Collections.Generic.IReadOnlyList<global::Foo.Bar.State.BookData?>? DeserializeIGetStore2_SearchableStore_BooksArray(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                return null;
            }

            var books = new global::System.Collections.Generic.List<global::Foo.Bar.State.BookData?>();

            foreach (global::System.Text.Json.JsonElement child in obj.Value.EnumerateArray())
            {
                books.Add(DeserializeIGetStore2_SearchableStore_Books(child));
            }

            return books;
        }

        private global::Foo.Bar.State.BookData? DeserializeIGetStore2_SearchableStore_Books(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                return null;
            }

            var typename = obj.Value
                .GetProperty("__typename")
                .GetString();

            if (typename?.Equals("Book", global::System.StringComparison.Ordinal) ?? false)
            {
                return new global::Foo.Bar.State.BookData(
                    typename,
                    isbn: DeserializeNonNullableString(
                        global::StrawberryShake.Transport.Http.JsonElementExtensions.GetPropertyOrNull(
                            obj,
                            "isbn")),
                    title: DeserializeNonNullableString(
                        global::StrawberryShake.Transport.Http.JsonElementExtensions.GetPropertyOrNull(
                            obj,
                            "title")));
            }

            throw new global::System.NotSupportedException();
        }

        private global::Foo.Bar.State.ISearchResultData? DeserializeISearchResultData(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                return null;
            }

            var typename = obj.Value
                .GetProperty("__typename")
                .GetString();

            if (typename?.Equals("Author", global::System.StringComparison.Ordinal) ?? false)
            {
                return new global::Foo.Bar.State.AuthorData(typename);
            }

            if (typename?.Equals("Book", global::System.StringComparison.Ordinal) ?? false)
            {
                return new global::Foo.Bar.State.BookData(
                    typename,
                    title: DeserializeNonNullableString(
                        global::StrawberryShake.Transport.Http.JsonElementExtensions.GetPropertyOrNull(
                            obj,
                            "title")),
                    isbn: DeserializeNonNullableString(
                        global::StrawberryShake.Transport.Http.JsonElementExtensions.GetPropertyOrNull(
                            obj,
                            "isbn")));
            }

            throw new global::System.NotSupportedException();
        }
    }
}


// ISearchResultData

// StrawberryShake.CodeGeneration.CSharp.DataTypeGenerator

#nullable enable

namespace Foo.Bar.State
{
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public interface ISearchResultData
    {
        public global::System.String __typename { get; }
    }
}


// IPrintData

// StrawberryShake.CodeGeneration.CSharp.DataTypeGenerator

#nullable enable

namespace Foo.Bar.State
{
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public interface IPrintData
    {
        public global::System.String __typename { get; }
    }
}


// BookData

// StrawberryShake.CodeGeneration.CSharp.DataTypeGenerator

#nullable enable

namespace Foo.Bar.State
{
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class BookData
        : ISearchResultData
        , IPrintData
    {
        public BookData(
            global::System.String typename,
            global::System.String? isbn = null,
            global::System.String? title = null)
        {
            __typename = typename
                 ?? throw new global::System.ArgumentNullException(nameof(typename));
            Isbn = isbn;
            Title = title;
        }

        public global::System.String __typename { get; }

        public global::System.String? Isbn { get; }

        public global::System.String? Title { get; }
    }
}


// AuthorData

// StrawberryShake.CodeGeneration.CSharp.DataTypeGenerator

#nullable enable

namespace Foo.Bar.State
{
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class AuthorData
        : ISearchResultData
    {
        public AuthorData(global::System.String typename)
        {
            __typename = typename
                 ?? throw new global::System.ArgumentNullException(nameof(typename));
        }

        public global::System.String __typename { get; }
    }
}


// FooClient

// StrawberryShake.CodeGeneration.CSharp.ClientGenerator

#nullable enable

namespace Foo.Bar
{
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class FooClient
    {
        private readonly GetStore2Query _getStore2Query;

        public FooClient(GetStore2Query getStore2Query)
        {
            _getStore2Query = getStore2Query
                 ?? throw new global::System.ArgumentNullException(nameof(getStore2Query));
        }

        public global::System.String ClientName => "FooClient";

        public GetStore2Query GetStore2Query => _getStore2Query;
    }
}


// EntityIdFactory

// StrawberryShake.CodeGeneration.CSharp.EntityIdFactoryGenerator

#nullable enable

namespace Foo.Bar
{
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public static partial class EntityIdFactory
    {
        public static global::StrawberryShake.EntityId CreateEntityId(global::System.Text.Json.JsonElement obj)
        {
            global::System.String typeName = obj
                .GetProperty("__typename")
                .GetString()!;

            return typeName switch
            {
                "SearchableStore" => CreateSearchableStoreEntityId(
                    obj,
                    typeName),
                _ => throw new global::System.NotSupportedException()
            };
        }

        private static global::StrawberryShake.EntityId CreateSearchableStoreEntityId(
            global::System.Text.Json.JsonElement obj,
            global::System.String type)
        {
            return new global::StrawberryShake.EntityId(
                type,
                obj
                    .GetProperty("id")
                    .GetString()!);
        }
    }
}


// FooClientServiceCollectionExtensions

// StrawberryShake.CodeGeneration.CSharp.DependencyInjectionGenerator

#nullable enable

namespace Microsoft.Extensions.DependencyInjection
{
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public static partial class FooClientServiceCollectionExtensions
    {
        public static global::Microsoft.Extensions.DependencyInjection.IServiceCollection AddFooClient(
            this global::Microsoft.Extensions.DependencyInjection.IServiceCollection services,
            global::StrawberryShake.ExecutionStrategy strategy = global::StrawberryShake.ExecutionStrategy.NetworkOnly)
        {
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton(
                services,
                sp => 
                {
                    var serviceCollection = new global::Microsoft.Extensions.DependencyInjection.ServiceCollection();

                    ConfigureClient(
                        serviceCollection,
                        sp,
                        strategy);

                    return new ClientServiceProvider(
                        global::Microsoft.Extensions.DependencyInjection.ServiceCollectionContainerBuilderExtensions.BuildServiceProvider(serviceCollection));
                });

            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton(
                services,
                sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<Foo.Bar.GetStore2Query>(
                    global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<ClientServiceProvider>(sp)));

            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton(
                services,
                sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::Foo.Bar.FooClient>(
                    global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<ClientServiceProvider>(sp)));

            return services;
        }

        private static global::Microsoft.Extensions.DependencyInjection.IServiceCollection ConfigureClient(
            global::Microsoft.Extensions.DependencyInjection.IServiceCollection services,
            global::System.IServiceProvider parentServices,
            global::StrawberryShake.ExecutionStrategy strategy = global::StrawberryShake.ExecutionStrategy.NetworkOnly)
        {
            if (services is null)
            {
                throw new global::System.ArgumentNullException(nameof(services));
            }
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::System.Func<global::System.Text.Json.JsonElement, global::StrawberryShake.EntityId>>(
                services,
                global::Foo.Bar.EntityIdFactory.CreateEntityId);
            global::Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddSingleton<global::StrawberryShake.IEntityStore, global::StrawberryShake.EntityStore>(services);
            global::Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddSingleton<global::StrawberryShake.IOperationStore>(
                services,
                sp => new global::StrawberryShake.OperationStore(
                    global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IEntityStore>(sp)
                    .Watch()));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton(
                services,
                sp => 
                {
                    var clientFactory = global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::System.Net.Http.IHttpClientFactory>(parentServices);
                    return new global::StrawberryShake.Transport.Http.HttpConnection(() => clientFactory.CreateClient("global::Foo.Bar.FooClient"));
                });

            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IEntityMapper<global::Foo.Bar.SearchableStoreEntity, global::Foo.Bar.GetStore2_SearchableStore_SearchableStore>, global::Foo.Bar.GetStore2_SearchableStore_SearchableStoreFromSearchableStoreEntityMapper>(services);

            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.StringSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.BooleanSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.ByteSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.ShortSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.IntSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.LongSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.FloatSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.DecimalSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.UrlSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.UuidSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.IdSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.DateTimeSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.DateSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.ByteArraySerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.TimeSpanSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializerResolver>(
                services,
                sp => new global::StrawberryShake.Serialization.SerializerResolver(
                    global::System.Linq.Enumerable.Concat(
                        global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::System.Collections.Generic.IEnumerable<global::StrawberryShake.Serialization.ISerializer>>(
                            parentServices),
                        global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::System.Collections.Generic.IEnumerable<global::StrawberryShake.Serialization.ISerializer>>(
                            sp))));

            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultDataFactory<Foo.Bar.IGetStore2Result>, Foo.Bar.GetStore2ResultFactory>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, Foo.Bar.IGetStore2Result>, Foo.Bar.GetStore2Builder>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationExecutor<Foo.Bar.IGetStore2Result>>(
                services,
                sp => new global::StrawberryShake.OperationExecutor<global::System.Text.Json.JsonDocument, Foo.Bar.IGetStore2Result>(
                    global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.Transport.Http.HttpConnection>(sp),
                    () => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, Foo.Bar.IGetStore2Result>>(sp),
                    global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationStore>(sp),
                    strategy));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<Foo.Bar.GetStore2Query>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::Foo.Bar.FooClient>(services);
            return services;
        }

        private class ClientServiceProvider
            : System.IServiceProvider
            , System.IDisposable
        {
            private readonly System.IServiceProvider _provider;

            public ClientServiceProvider(System.IServiceProvider provider)
            {
                _provider = provider;
            }

            public object? GetService(System.Type serviceType)
            {
                return _provider.GetService(serviceType);
            }

            public void Dispose()
            {
                if (_provider is System.IDisposable d)
                {
                    d.Dispose();
                }
            }
        }
    }
}


