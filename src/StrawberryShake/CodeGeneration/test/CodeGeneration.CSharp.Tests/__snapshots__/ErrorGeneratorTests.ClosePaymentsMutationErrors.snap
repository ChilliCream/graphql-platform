// ReSharper disable BuiltInTypeReferenceStyle
// ReSharper disable RedundantNameQualifier
// ReSharper disable ArrangeObjectCreationWhenTypeEvident
// ReSharper disable UnusedType.Global
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable UnusedMethodReturnValue.Local
// ReSharper disable ConvertToAutoProperty
// ReSharper disable UnusedMember.Global
// ReSharper disable SuggestVarOrType_SimpleTypes
// ReSharper disable InconsistentNaming

// FooClient

// <auto-generated/>
#nullable enable

namespace Foo.Bar
{
    // StrawberryShake.CodeGeneration.CSharp.Generators.ResultTypeGenerator
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class ClosePaymentResult : global::System.IEquatable<ClosePaymentResult>, IClosePaymentResult
    {
        public ClosePaymentResult(global::Foo.Bar.IClosePayment_CommitPayments commitPayments)
        {
            CommitPayments = commitPayments;
        }

        public global::Foo.Bar.IClosePayment_CommitPayments CommitPayments { get; }

        public virtual global::System.Boolean Equals(ClosePaymentResult? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (CommitPayments.Equals(other.CommitPayments));
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((ClosePaymentResult)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                hash ^= 397 * CommitPayments.GetHashCode();
                return hash;
            }
        }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.ResultTypeGenerator
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class ClosePayment_CommitPayments_PasswordIncorrectError : global::System.IEquatable<ClosePayment_CommitPayments_PasswordIncorrectError>, IClosePayment_CommitPayments_PasswordIncorrectError
    {
        public ClosePayment_CommitPayments_PasswordIncorrectError()
        {
        }

        public virtual global::System.Boolean Equals(ClosePayment_CommitPayments_PasswordIncorrectError? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return true;
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((ClosePayment_CommitPayments_PasswordIncorrectError)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                return hash;
            }
        }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.ResultTypeGenerator
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class ClosePayment_CommitPayments_PaymentActionsResultList : global::System.IEquatable<ClosePayment_CommitPayments_PaymentActionsResultList>, IClosePayment_CommitPayments_PaymentActionsResultList
    {
        public ClosePayment_CommitPayments_PaymentActionsResultList(global::System.Collections.Generic.IReadOnlyList<global::Foo.Bar.IClosePayment_CommitPayments_Results> results)
        {
            Results = results;
        }

        public global::System.Collections.Generic.IReadOnlyList<global::Foo.Bar.IClosePayment_CommitPayments_Results> Results { get; }

        public virtual global::System.Boolean Equals(ClosePayment_CommitPayments_PaymentActionsResultList? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (global::StrawberryShake.Helper.ComparisonHelper.SequenceEqual(Results, other.Results));
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((ClosePayment_CommitPayments_PaymentActionsResultList)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                foreach (var Results_elm in Results)
                {
                    hash ^= 397 * Results_elm.GetHashCode();
                }

                return hash;
            }
        }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.ResultTypeGenerator
    /// <summary>
    /// An error that occurs when the current user does not have the required permission to perform an action.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class ClosePayment_CommitPayments_PermissionDeniedError : global::System.IEquatable<ClosePayment_CommitPayments_PermissionDeniedError>, IClosePayment_CommitPayments_PermissionDeniedError
    {
        public ClosePayment_CommitPayments_PermissionDeniedError()
        {
        }

        public virtual global::System.Boolean Equals(ClosePayment_CommitPayments_PermissionDeniedError? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return true;
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((ClosePayment_CommitPayments_PermissionDeniedError)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                return hash;
            }
        }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.ResultTypeGenerator
    /// <summary>
    /// An error that occurs when the given input is invalid.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class ClosePayment_CommitPayments_ValidationError : global::System.IEquatable<ClosePayment_CommitPayments_ValidationError>, IClosePayment_CommitPayments_ValidationError
    {
        public ClosePayment_CommitPayments_ValidationError()
        {
        }

        public virtual global::System.Boolean Equals(ClosePayment_CommitPayments_ValidationError? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return true;
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((ClosePayment_CommitPayments_ValidationError)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                return hash;
            }
        }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.ResultTypeGenerator
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class ClosePayment_CommitPayments_Results_ClaimPayment : global::System.IEquatable<ClosePayment_CommitPayments_Results_ClaimPayment>, IClosePayment_CommitPayments_Results_ClaimPayment
    {
        public ClosePayment_CommitPayments_Results_ClaimPayment(global::System.Int32 id)
        {
            Id = id;
        }

        public global::System.Int32 Id { get; }

        public virtual global::System.Boolean Equals(ClosePayment_CommitPayments_Results_ClaimPayment? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (Id == other.Id);
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((ClosePayment_CommitPayments_Results_ClaimPayment)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                hash ^= 397 * Id.GetHashCode();
                return hash;
            }
        }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.ResultTypeGenerator
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class ClosePayment_CommitPayments_Results_PolicyPayment : global::System.IEquatable<ClosePayment_CommitPayments_Results_PolicyPayment>, IClosePayment_CommitPayments_Results_PolicyPayment
    {
        public ClosePayment_CommitPayments_Results_PolicyPayment(global::System.Int32 id)
        {
            Id = id;
        }

        public global::System.Int32 Id { get; }

        public virtual global::System.Boolean Equals(ClosePayment_CommitPayments_Results_PolicyPayment? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (Id == other.Id);
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((ClosePayment_CommitPayments_Results_PolicyPayment)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                hash ^= 397 * Id.GetHashCode();
                return hash;
            }
        }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.ResultTypeGenerator
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class ClosePayment_CommitPayments_Results_PaymentCommitFailure : global::System.IEquatable<ClosePayment_CommitPayments_Results_PaymentCommitFailure>, IClosePayment_CommitPayments_Results_PaymentCommitFailure
    {
        public ClosePayment_CommitPayments_Results_PaymentCommitFailure()
        {
        }

        public virtual global::System.Boolean Equals(ClosePayment_CommitPayments_Results_PaymentCommitFailure? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return true;
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((ClosePayment_CommitPayments_Results_PaymentCommitFailure)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                return hash;
            }
        }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.ResultTypeGenerator
    /// <summary>
    /// An error that occurs when the current user is not allowed to access an object.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class ClosePayment_CommitPayments_Results_AccessDeniedError : global::System.IEquatable<ClosePayment_CommitPayments_Results_AccessDeniedError>, IClosePayment_CommitPayments_Results_AccessDeniedError
    {
        public ClosePayment_CommitPayments_Results_AccessDeniedError()
        {
        }

        public virtual global::System.Boolean Equals(ClosePayment_CommitPayments_Results_AccessDeniedError? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return true;
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((ClosePayment_CommitPayments_Results_AccessDeniedError)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                return hash;
            }
        }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.ResultInterfaceGenerator
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial interface IClosePaymentResult
    {
        public global::Foo.Bar.IClosePayment_CommitPayments CommitPayments { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.ResultInterfaceGenerator
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial interface IClosePayment_CommitPayments
    {
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.ResultInterfaceGenerator
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial interface IClosePayment_CommitPayments_PasswordIncorrectError : IClosePayment_CommitPayments
    {
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.ResultInterfaceGenerator
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial interface IClosePaymentResultList
    {
        public global::System.Collections.Generic.IReadOnlyList<global::Foo.Bar.IClosePayment_CommitPayments_Results> Results { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.ResultInterfaceGenerator
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial interface IClosePayment_CommitPayments_PaymentActionsResultList : IClosePayment_CommitPayments, IClosePaymentResultList
    {
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.ResultInterfaceGenerator
    /// <summary>
    /// An error that occurs when the current user does not have the required permission to perform an action.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial interface IClosePayment_CommitPayments_PermissionDeniedError : IClosePayment_CommitPayments
    {
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.ResultInterfaceGenerator
    /// <summary>
    /// An error that occurs when the given input is invalid.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial interface IClosePayment_CommitPayments_ValidationError : IClosePayment_CommitPayments
    {
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.ResultInterfaceGenerator
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial interface IClosePayment_CommitPayments_Results
    {
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.ResultInterfaceGenerator
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial interface IClosePaymentStatus
    {
        public global::System.Int32 Id { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.ResultInterfaceGenerator
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial interface IClosePayment_CommitPayments_Results_ClaimPayment : IClosePayment_CommitPayments_Results, IClosePaymentStatus
    {
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.ResultInterfaceGenerator
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial interface IClosePayment_CommitPayments_Results_PolicyPayment : IClosePayment_CommitPayments_Results, IClosePaymentStatus
    {
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.ResultInterfaceGenerator
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial interface IClosePayment_CommitPayments_Results_PaymentCommitFailure : IClosePayment_CommitPayments_Results
    {
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.ResultInterfaceGenerator
    /// <summary>
    /// An error that occurs when the current user is not allowed to access an object.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial interface IClosePayment_CommitPayments_Results_AccessDeniedError : IClosePayment_CommitPayments_Results
    {
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.InputValueFormatterGenerator
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class CommitPaymentInputInputValueFormatter : global::StrawberryShake.Serialization.IInputObjectFormatter
    {
        private global::StrawberryShake.Serialization.IInputValueFormatter _dateFormatter = default !;
        private global::StrawberryShake.Serialization.IInputValueFormatter _intFormatter = default !;
        private global::StrawberryShake.Serialization.IInputValueFormatter _decimalFormatter = default !;
        private global::StrawberryShake.Serialization.IInputValueFormatter _stringFormatter = default !;
        public global::System.String TypeName => "CommitPaymentInput";
        public void Initialize(global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)
        {
            _dateFormatter = serializerResolver.GetInputValueFormatter("Date");
            _intFormatter = serializerResolver.GetInputValueFormatter("Int");
            _decimalFormatter = serializerResolver.GetInputValueFormatter("Decimal");
            _stringFormatter = serializerResolver.GetInputValueFormatter("String");
        }

        public global::System.Object? Format(global::System.Object? runtimeValue)
        {
            if (runtimeValue is null)
            {
                return null;
            }

            var input = runtimeValue as global::Foo.Bar.CommitPaymentInput;
            var inputInfo = runtimeValue as global::Foo.Bar.State.ICommitPaymentInputInfo;
            if (input is null || inputInfo is null)
            {
                throw new global::System.ArgumentException(nameof(runtimeValue));
            }

            var fields = new global::System.Collections.Generic.List<global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>>();
            if (inputInfo.IsPaidOnSet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("paidOn", FormatPaidOn(input.PaidOn)));
            }

            if (inputInfo.IsPaymentIdSet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("paymentId", FormatPaymentId(input.PaymentId)));
            }

            if (inputInfo.IsReceivedAmountSet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("receivedAmount", FormatReceivedAmount(input.ReceivedAmount)));
            }

            if (inputInfo.IsReceivedByBankOnSet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("receivedByBankOn", FormatReceivedByBankOn(input.ReceivedByBankOn)));
            }

            if (inputInfo.IsReceivedCurrencyCodeSet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("receivedCurrencyCode", FormatReceivedCurrencyCode(input.ReceivedCurrencyCode)));
            }

            if (inputInfo.IsRemarkSet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("remark", FormatRemark(input.Remark)));
            }

            if (inputInfo.IsSequenceNoSet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("sequenceNo", FormatSequenceNo(input.SequenceNo)));
            }

            return fields;
        }

        private global::System.Object? FormatPaidOn(global::System.DateTime? input)
        {
            if (input is null)
            {
                return input;
            }
            else
            {
                return _dateFormatter.Format(input);
            }
        }

        private global::System.Object? FormatPaymentId(global::System.Int32 input)
        {
            return _intFormatter.Format(input);
        }

        private global::System.Object? FormatReceivedAmount(global::System.Decimal? input)
        {
            if (input is null)
            {
                return input;
            }
            else
            {
                return _decimalFormatter.Format(input);
            }
        }

        private global::System.Object? FormatReceivedByBankOn(global::System.DateTime? input)
        {
            if (input is null)
            {
                return input;
            }
            else
            {
                return _dateFormatter.Format(input);
            }
        }

        private global::System.Object? FormatReceivedCurrencyCode(global::System.String? input)
        {
            if (input is null)
            {
                return input;
            }
            else
            {
                return _stringFormatter.Format(input);
            }
        }

        private global::System.Object? FormatRemark(global::System.String? input)
        {
            if (input is null)
            {
                return input;
            }
            else
            {
                return _stringFormatter.Format(input);
            }
        }

        private global::System.Object? FormatSequenceNo(global::System.String? input)
        {
            if (input is null)
            {
                return input;
            }
            else
            {
                return _stringFormatter.Format(input);
            }
        }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.InputTypeGenerator
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial class CommitPaymentInput : global::Foo.Bar.State.ICommitPaymentInputInfo, global::System.IEquatable<CommitPaymentInput>
    {
        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((CommitPaymentInput)obj);
        }

        public virtual global::System.Boolean Equals(CommitPaymentInput? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (((PaidOn is null && other.PaidOn is null) || PaidOn != null && PaidOn.Equals(other.PaidOn))) && PaymentId == other.PaymentId && ReceivedAmount == other.ReceivedAmount && ((ReceivedByBankOn is null && other.ReceivedByBankOn is null) || ReceivedByBankOn != null && ReceivedByBankOn.Equals(other.ReceivedByBankOn)) && ((ReceivedCurrencyCode is null && other.ReceivedCurrencyCode is null) || ReceivedCurrencyCode != null && ReceivedCurrencyCode.Equals(other.ReceivedCurrencyCode)) && ((Remark is null && other.Remark is null) || Remark != null && Remark.Equals(other.Remark)) && ((SequenceNo is null && other.SequenceNo is null) || SequenceNo != null && SequenceNo.Equals(other.SequenceNo));
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                if (PaidOn != null)
                {
                    hash ^= 397 * PaidOn.GetHashCode();
                }

                hash ^= 397 * PaymentId.GetHashCode();
                if (ReceivedAmount != null)
                {
                    hash ^= 397 * ReceivedAmount.GetHashCode();
                }

                if (ReceivedByBankOn != null)
                {
                    hash ^= 397 * ReceivedByBankOn.GetHashCode();
                }

                if (ReceivedCurrencyCode != null)
                {
                    hash ^= 397 * ReceivedCurrencyCode.GetHashCode();
                }

                if (Remark != null)
                {
                    hash ^= 397 * Remark.GetHashCode();
                }

                if (SequenceNo != null)
                {
                    hash ^= 397 * SequenceNo.GetHashCode();
                }

                return hash;
            }
        }

        private global::System.DateTime? _value_paidOn;
        private global::System.Boolean _set_paidOn;
        private global::System.Int32 _value_paymentId;
        private global::System.Boolean _set_paymentId;
        private global::System.Decimal? _value_receivedAmount;
        private global::System.Boolean _set_receivedAmount;
        private global::System.DateTime? _value_receivedByBankOn;
        private global::System.Boolean _set_receivedByBankOn;
        private global::System.String? _value_receivedCurrencyCode;
        private global::System.Boolean _set_receivedCurrencyCode;
        private global::System.String? _value_remark;
        private global::System.Boolean _set_remark;
        private global::System.String? _value_sequenceNo;
        private global::System.Boolean _set_sequenceNo;
        public global::System.DateTime? PaidOn
        {
            get => _value_paidOn;
            set
            {
                _set_paidOn = true;
                _value_paidOn = value;
            }
        }

        global::System.Boolean global::Foo.Bar.State.ICommitPaymentInputInfo.IsPaidOnSet => _set_paidOn;
        public global::System.Int32 PaymentId
        {
            get => _value_paymentId;
            set
            {
                _set_paymentId = true;
                _value_paymentId = value;
            }
        }

        global::System.Boolean global::Foo.Bar.State.ICommitPaymentInputInfo.IsPaymentIdSet => _set_paymentId;
        public global::System.Decimal? ReceivedAmount
        {
            get => _value_receivedAmount;
            set
            {
                _set_receivedAmount = true;
                _value_receivedAmount = value;
            }
        }

        global::System.Boolean global::Foo.Bar.State.ICommitPaymentInputInfo.IsReceivedAmountSet => _set_receivedAmount;
        public global::System.DateTime? ReceivedByBankOn
        {
            get => _value_receivedByBankOn;
            set
            {
                _set_receivedByBankOn = true;
                _value_receivedByBankOn = value;
            }
        }

        global::System.Boolean global::Foo.Bar.State.ICommitPaymentInputInfo.IsReceivedByBankOnSet => _set_receivedByBankOn;
        public global::System.String? ReceivedCurrencyCode
        {
            get => _value_receivedCurrencyCode;
            set
            {
                _set_receivedCurrencyCode = true;
                _value_receivedCurrencyCode = value;
            }
        }

        global::System.Boolean global::Foo.Bar.State.ICommitPaymentInputInfo.IsReceivedCurrencyCodeSet => _set_receivedCurrencyCode;
        public global::System.String? Remark
        {
            get => _value_remark;
            set
            {
                _set_remark = true;
                _value_remark = value;
            }
        }

        global::System.Boolean global::Foo.Bar.State.ICommitPaymentInputInfo.IsRemarkSet => _set_remark;
        public global::System.String? SequenceNo
        {
            get => _value_sequenceNo;
            set
            {
                _set_sequenceNo = true;
                _value_sequenceNo = value;
            }
        }

        global::System.Boolean global::Foo.Bar.State.ICommitPaymentInputInfo.IsSequenceNoSet => _set_sequenceNo;
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.OperationDocumentGenerator
    /// <summary>
    /// Represents the operation service of the ClosePayment GraphQL operation
    /// <code>
    /// mutation ClosePayment($commitPaymentInput: [CommitPaymentInput!]!) {
    ///   commitPayments(payments: $commitPaymentInput) {
    ///     __typename
    ///     ... ClosePaymentResultList
    ///   }
    /// }
    /// 
    /// fragment ClosePaymentResultList on PaymentActionsResultList {
    ///   results {
    ///     __typename
    ///     ... ClosePaymentStatus
    ///     ... on ClaimPayment {
    ///       id
    ///     }
    ///     ... on PolicyPayment {
    ///       id
    ///     }
    ///   }
    /// }
    /// 
    /// fragment ClosePaymentStatus on Payment {
    ///   id
    /// }
    /// </code>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class ClosePaymentMutationDocument : global::StrawberryShake.IDocument
    {
        private ClosePaymentMutationDocument()
        {
        }

        public static ClosePaymentMutationDocument Instance { get; } = new ClosePaymentMutationDocument();
        public global::StrawberryShake.OperationKind Kind => global::StrawberryShake.OperationKind.Mutation;
        public global::System.ReadOnlySpan<global::System.Byte> Body => new global::System.Byte[]{0x6d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x28, 0x24, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x3a, 0x20, 0x5b, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x21, 0x5d, 0x21, 0x29, 0x20, 0x7b, 0x20, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x28, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x3a, 0x20, 0x24, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x29, 0x20, 0x7b, 0x20, 0x5f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x20, 0x2e, 0x2e, 0x2e, 0x20, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x20, 0x7d, 0x20, 0x7d, 0x20, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x20, 0x6f, 0x6e, 0x20, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x20, 0x7b, 0x20, 0x5f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x20, 0x2e, 0x2e, 0x2e, 0x20, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x20, 0x2e, 0x2e, 0x2e, 0x20, 0x6f, 0x6e, 0x20, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x7b, 0x20, 0x69, 0x64, 0x20, 0x7d, 0x20, 0x2e, 0x2e, 0x2e, 0x20, 0x6f, 0x6e, 0x20, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x7b, 0x20, 0x69, 0x64, 0x20, 0x7d, 0x20, 0x7d, 0x20, 0x7d, 0x20, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x20, 0x6f, 0x6e, 0x20, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x7b, 0x20, 0x69, 0x64, 0x20, 0x7d};
        public global::StrawberryShake.DocumentHash Hash { get; } = new global::StrawberryShake.DocumentHash("sha1Hash", "57374f6b52f1a6f9b1d8ec52184b9710d3ab003c");
        public override global::System.String ToString()
        {
#if NETCOREAPP3_1_OR_GREATER
        return global::System.Text.Encoding.UTF8.GetString(Body);
#else
            return global::System.Text.Encoding.UTF8.GetString(Body.ToArray());
#endif
        }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.OperationServiceGenerator
    /// <summary>
    /// Represents the operation service of the ClosePayment GraphQL operation
    /// <code>
    /// mutation ClosePayment($commitPaymentInput: [CommitPaymentInput!]!) {
    ///   commitPayments(payments: $commitPaymentInput) {
    ///     __typename
    ///     ... ClosePaymentResultList
    ///   }
    /// }
    /// 
    /// fragment ClosePaymentResultList on PaymentActionsResultList {
    ///   results {
    ///     __typename
    ///     ... ClosePaymentStatus
    ///     ... on ClaimPayment {
    ///       id
    ///     }
    ///     ... on PolicyPayment {
    ///       id
    ///     }
    ///   }
    /// }
    /// 
    /// fragment ClosePaymentStatus on Payment {
    ///   id
    /// }
    /// </code>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class ClosePaymentMutation : global::Foo.Bar.IClosePaymentMutation
    {
        private readonly global::StrawberryShake.IOperationExecutor<IClosePaymentResult> _operationExecutor;
        private readonly global::StrawberryShake.Serialization.IInputValueFormatter _commitPaymentInputFormatter;
        public ClosePaymentMutation(global::StrawberryShake.IOperationExecutor<IClosePaymentResult> operationExecutor, global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)
        {
            _operationExecutor = operationExecutor ?? throw new global::System.ArgumentNullException(nameof(operationExecutor));
            _commitPaymentInputFormatter = serializerResolver.GetInputValueFormatter("CommitPaymentInput");
        }

        global::System.Type global::StrawberryShake.IOperationRequestFactory.ResultType => typeof(IClosePaymentResult);
        public async global::System.Threading.Tasks.Task<global::StrawberryShake.IOperationResult<IClosePaymentResult>> ExecuteAsync(global::System.Collections.Generic.IReadOnlyList<global::Foo.Bar.CommitPaymentInput> commitPaymentInput, global::System.Threading.CancellationToken cancellationToken = default)
        {
            var request = CreateRequest(commitPaymentInput);
            return await _operationExecutor.ExecuteAsync(request, cancellationToken).ConfigureAwait(false);
        }

        public global::System.IObservable<global::StrawberryShake.IOperationResult<IClosePaymentResult>> Watch(global::System.Collections.Generic.IReadOnlyList<global::Foo.Bar.CommitPaymentInput> commitPaymentInput, global::StrawberryShake.ExecutionStrategy? strategy = null)
        {
            var request = CreateRequest(commitPaymentInput);
            return _operationExecutor.Watch(request, strategy);
        }

        private global::StrawberryShake.OperationRequest CreateRequest(global::System.Collections.Generic.IReadOnlyList<global::Foo.Bar.CommitPaymentInput> commitPaymentInput)
        {
            var variables = new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object?>();
            variables.Add("commitPaymentInput", FormatCommitPaymentInput(commitPaymentInput));
            return CreateRequest(variables);
        }

        private global::StrawberryShake.OperationRequest CreateRequest(global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object?>? variables)
        {
            return new global::StrawberryShake.OperationRequest(id: ClosePaymentMutationDocument.Instance.Hash.Value, name: "ClosePayment", document: ClosePaymentMutationDocument.Instance, strategy: global::StrawberryShake.RequestStrategy.Default, variables: variables);
        }

        private global::System.Object? FormatCommitPaymentInput(global::System.Collections.Generic.IReadOnlyList<global::Foo.Bar.CommitPaymentInput> value)
        {
            if (value is null)
            {
                throw new global::System.ArgumentNullException(nameof(value));
            }

            var value_list = new global::System.Collections.Generic.List<global::System.Object?>();
            foreach (var value_elm in value)
            {
                if (value_elm is null)
                {
                    throw new global::System.ArgumentNullException(nameof(value_elm));
                }

                value_list.Add(_commitPaymentInputFormatter.Format(value_elm));
            }

            return value_list;
        }

        global::StrawberryShake.OperationRequest global::StrawberryShake.IOperationRequestFactory.Create(global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object?>? variables)
        {
            return CreateRequest(variables!);
        }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.OperationServiceInterfaceGenerator
    /// <summary>
    /// Represents the operation service of the ClosePayment GraphQL operation
    /// <code>
    /// mutation ClosePayment($commitPaymentInput: [CommitPaymentInput!]!) {
    ///   commitPayments(payments: $commitPaymentInput) {
    ///     __typename
    ///     ... ClosePaymentResultList
    ///   }
    /// }
    /// 
    /// fragment ClosePaymentResultList on PaymentActionsResultList {
    ///   results {
    ///     __typename
    ///     ... ClosePaymentStatus
    ///     ... on ClaimPayment {
    ///       id
    ///     }
    ///     ... on PolicyPayment {
    ///       id
    ///     }
    ///   }
    /// }
    /// 
    /// fragment ClosePaymentStatus on Payment {
    ///   id
    /// }
    /// </code>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial interface IClosePaymentMutation : global::StrawberryShake.IOperationRequestFactory
    {
        global::System.Threading.Tasks.Task<global::StrawberryShake.IOperationResult<IClosePaymentResult>> ExecuteAsync(global::System.Collections.Generic.IReadOnlyList<global::Foo.Bar.CommitPaymentInput> commitPaymentInput, global::System.Threading.CancellationToken cancellationToken = default);
        global::System.IObservable<global::StrawberryShake.IOperationResult<IClosePaymentResult>> Watch(global::System.Collections.Generic.IReadOnlyList<global::Foo.Bar.CommitPaymentInput> commitPaymentInput, global::StrawberryShake.ExecutionStrategy? strategy = null);
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.ClientGenerator
    /// <summary>
    /// Represents the FooClient GraphQL client
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class FooClient : global::Foo.Bar.IFooClient
    {
        private readonly global::Foo.Bar.IClosePaymentMutation _closePayment;
        public FooClient(global::Foo.Bar.IClosePaymentMutation closePayment)
        {
            _closePayment = closePayment ?? throw new global::System.ArgumentNullException(nameof(closePayment));
        }

        public static global::System.String ClientName => "FooClient";
        public global::Foo.Bar.IClosePaymentMutation ClosePayment => _closePayment;
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.ClientInterfaceGenerator
    /// <summary>
    /// Represents the FooClient GraphQL client
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial interface IFooClient
    {
        global::Foo.Bar.IClosePaymentMutation ClosePayment { get; }
    }
}

namespace Foo.Bar.State
{
    // StrawberryShake.CodeGeneration.CSharp.Generators.EntityTypeGenerator
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial class ClaimPaymentEntity
    {
        public ClaimPaymentEntity(global::System.Int32 id = default !)
        {
            Id = id;
        }

        public global::System.Int32 Id { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.EntityTypeGenerator
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial class PolicyPaymentEntity
    {
        public PolicyPaymentEntity(global::System.Int32 id = default !)
        {
            Id = id;
        }

        public global::System.Int32 Id { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.ResultDataFactoryGenerator
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class ClosePaymentResultFactory : global::StrawberryShake.IOperationResultDataFactory<global::Foo.Bar.ClosePaymentResult>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        private readonly global::StrawberryShake.IEntityMapper<global::Foo.Bar.State.ClaimPaymentEntity, ClosePayment_CommitPayments_Results_ClaimPayment> _closePayment_CommitPayments_Results_ClaimPaymentFromClaimPaymentEntityMapper;
        private readonly global::StrawberryShake.IEntityMapper<global::Foo.Bar.State.PolicyPaymentEntity, ClosePayment_CommitPayments_Results_PolicyPayment> _closePayment_CommitPayments_Results_PolicyPaymentFromPolicyPaymentEntityMapper;
        public ClosePaymentResultFactory(global::StrawberryShake.IEntityStore entityStore, global::StrawberryShake.IEntityMapper<global::Foo.Bar.State.ClaimPaymentEntity, ClosePayment_CommitPayments_Results_ClaimPayment> closePayment_CommitPayments_Results_ClaimPaymentFromClaimPaymentEntityMapper, global::StrawberryShake.IEntityMapper<global::Foo.Bar.State.PolicyPaymentEntity, ClosePayment_CommitPayments_Results_PolicyPayment> closePayment_CommitPayments_Results_PolicyPaymentFromPolicyPaymentEntityMapper)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
            _closePayment_CommitPayments_Results_ClaimPaymentFromClaimPaymentEntityMapper = closePayment_CommitPayments_Results_ClaimPaymentFromClaimPaymentEntityMapper ?? throw new global::System.ArgumentNullException(nameof(closePayment_CommitPayments_Results_ClaimPaymentFromClaimPaymentEntityMapper));
            _closePayment_CommitPayments_Results_PolicyPaymentFromPolicyPaymentEntityMapper = closePayment_CommitPayments_Results_PolicyPaymentFromPolicyPaymentEntityMapper ?? throw new global::System.ArgumentNullException(nameof(closePayment_CommitPayments_Results_PolicyPaymentFromPolicyPaymentEntityMapper));
        }

        global::System.Type global::StrawberryShake.IOperationResultDataFactory.ResultType => typeof(global::Foo.Bar.IClosePaymentResult);
        public ClosePaymentResult Create(global::StrawberryShake.IOperationResultDataInfo dataInfo, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)
        {
            if (snapshot is null)
            {
                snapshot = _entityStore.CurrentSnapshot;
            }

            if (dataInfo is ClosePaymentResultInfo info)
            {
                return new ClosePaymentResult(MapNonNullableIClosePayment_CommitPayments(info.CommitPayments, snapshot));
            }

            throw new global::System.ArgumentException("ClosePaymentResultInfo expected.");
        }

        private global::Foo.Bar.IClosePayment_CommitPayments MapNonNullableIClosePayment_CommitPayments(global::Foo.Bar.State.IPaymentActionsResultData data, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            IClosePayment_CommitPayments? returnValue;
            if (data is global::Foo.Bar.State.PasswordIncorrectErrorData passwordIncorrectError)
            {
                returnValue = new global::Foo.Bar.ClosePayment_CommitPayments_PasswordIncorrectError();
            }
            else if (data is global::Foo.Bar.State.PaymentActionsResultListData paymentActionsResultList)
            {
                returnValue = new global::Foo.Bar.ClosePayment_CommitPayments_PaymentActionsResultList(paymentActionsResultList.Results ?? throw new global::System.ArgumentNullException());
            }
            else if (data is global::Foo.Bar.State.PermissionDeniedErrorData permissionDeniedError)
            {
                returnValue = new global::Foo.Bar.ClosePayment_CommitPayments_PermissionDeniedError();
            }
            else if (data is global::Foo.Bar.State.ValidationErrorData validationError)
            {
                returnValue = new global::Foo.Bar.ClosePayment_CommitPayments_ValidationError();
            }
            else
            {
                throw new global::System.NotSupportedException();
            }

            return returnValue;
        }

        private global::System.Collections.Generic.IReadOnlyList<global::Foo.Bar.IClosePayment_CommitPayments_Results> MapNonNullableIClosePayment_CommitPayments_ResultsNonNullableArray(global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.EntityIdOrData>? list, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            if (list is null)
            {
                throw new global::System.ArgumentNullException();
            }

            var paymentActionResults = new global::System.Collections.Generic.List<global::Foo.Bar.IClosePayment_CommitPayments_Results>();
            foreach (global::StrawberryShake.EntityIdOrData child in list)
            {
                paymentActionResults.Add(MapNonNullableIClosePayment_CommitPayments_Results(child, snapshot));
            }

            return paymentActionResults;
        }

        private global::Foo.Bar.IClosePayment_CommitPayments_Results MapNonNullableIClosePayment_CommitPayments_Results(global::StrawberryShake.EntityIdOrData data, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            if (data.EntityId is { } id)
            {
                return MapIClosePayment_CommitPayments_ResultsData(id, snapshot);
            }
            else if (data.Data is global::Foo.Bar.State.IPaymentActionResultData d)
            {
                return MapIClosePayment_CommitPayments_ResultsEntity(d, snapshot);
            }
            else
            {
                throw new global::System.ArgumentOutOfRangeException();
            }
        }

        private global::Foo.Bar.IClosePayment_CommitPayments_Results MapIClosePayment_CommitPayments_ResultsEntity(global::Foo.Bar.State.IPaymentActionResultData data, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            IClosePayment_CommitPayments_Results? returnValue;
            if (data is global::Foo.Bar.State.PaymentCommitFailureData paymentCommitFailure)
            {
                returnValue = new global::Foo.Bar.ClosePayment_CommitPayments_Results_PaymentCommitFailure();
            }
            else if (data is global::Foo.Bar.State.AccessDeniedErrorData accessDeniedError)
            {
                returnValue = new global::Foo.Bar.ClosePayment_CommitPayments_Results_AccessDeniedError();
            }
            else
            {
                throw new global::System.NotSupportedException();
            }

            return returnValue;
        }

        private global::Foo.Bar.IClosePayment_CommitPayments_Results MapIClosePayment_CommitPayments_ResultsData(global::StrawberryShake.EntityId entityId, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            if (entityId.Name.Equals("ClaimPayment", global::System.StringComparison.Ordinal))
            {
                return _closePayment_CommitPayments_Results_ClaimPaymentFromClaimPaymentEntityMapper.Map(snapshot.GetEntity<global::Foo.Bar.State.ClaimPaymentEntity>(entityId) ?? throw new global::StrawberryShake.GraphQLClientException());
            }

            if (entityId.Name.Equals("PolicyPayment", global::System.StringComparison.Ordinal))
            {
                return _closePayment_CommitPayments_Results_PolicyPaymentFromPolicyPaymentEntityMapper.Map(snapshot.GetEntity<global::Foo.Bar.State.PolicyPaymentEntity>(entityId) ?? throw new global::StrawberryShake.GraphQLClientException());
            }

            throw new global::System.NotSupportedException();
        }

        global::System.Object global::StrawberryShake.IOperationResultDataFactory.Create(global::StrawberryShake.IOperationResultDataInfo dataInfo, global::StrawberryShake.IEntityStoreSnapshot? snapshot)
        {
            return Create(dataInfo, snapshot);
        }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.ResultInfoGenerator
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class ClosePaymentResultInfo : global::StrawberryShake.IOperationResultDataInfo
    {
        private readonly global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> _entityIds;
        private readonly global::System.UInt64 _version;
        public ClosePaymentResultInfo(global::Foo.Bar.State.IPaymentActionsResultData commitPayments, global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> entityIds, global::System.UInt64 version)
        {
            CommitPayments = commitPayments;
            _entityIds = entityIds ?? throw new global::System.ArgumentNullException(nameof(entityIds));
            _version = version;
        }

        public global::Foo.Bar.State.IPaymentActionsResultData CommitPayments { get; }

        public global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> EntityIds => _entityIds;
        public global::System.UInt64 Version => _version;
        public global::StrawberryShake.IOperationResultDataInfo WithVersion(global::System.UInt64 version)
        {
            return new ClosePaymentResultInfo(CommitPayments, _entityIds, version);
        }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.InputTypeStateInterfaceGenerator
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    internal interface ICommitPaymentInputInfo
    {
        global::System.Boolean IsPaidOnSet { get; }

        global::System.Boolean IsPaymentIdSet { get; }

        global::System.Boolean IsReceivedAmountSet { get; }

        global::System.Boolean IsReceivedByBankOnSet { get; }

        global::System.Boolean IsReceivedCurrencyCodeSet { get; }

        global::System.Boolean IsRemarkSet { get; }

        global::System.Boolean IsSequenceNoSet { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.JsonResultBuilderGenerator
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class ClosePaymentBuilder : global::StrawberryShake.OperationResultBuilder<global::Foo.Bar.IClosePaymentResult>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        private readonly global::StrawberryShake.IEntityIdSerializer _idSerializer;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::System.DateTime> _dateParser;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.Int32, global::System.Int32> _intParser;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.Decimal, global::System.Decimal> _decimalParser;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::System.String> _stringParser;
        public ClosePaymentBuilder(global::StrawberryShake.IEntityStore entityStore, global::StrawberryShake.IEntityIdSerializer idSerializer, global::StrawberryShake.IOperationResultDataFactory<global::Foo.Bar.IClosePaymentResult> resultDataFactory, global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
            _idSerializer = idSerializer ?? throw new global::System.ArgumentNullException(nameof(idSerializer));
            ResultDataFactory = resultDataFactory ?? throw new global::System.ArgumentNullException(nameof(resultDataFactory));
            _dateParser = serializerResolver.GetLeafValueParser<global::System.String, global::System.DateTime>("Date") ?? throw new global::System.ArgumentException("No serializer for type `Date` found.");
            _intParser = serializerResolver.GetLeafValueParser<global::System.Int32, global::System.Int32>("Int") ?? throw new global::System.ArgumentException("No serializer for type `Int` found.");
            _decimalParser = serializerResolver.GetLeafValueParser<global::System.Decimal, global::System.Decimal>("Decimal") ?? throw new global::System.ArgumentException("No serializer for type `Decimal` found.");
            _stringParser = serializerResolver.GetLeafValueParser<global::System.String, global::System.String>("String") ?? throw new global::System.ArgumentException("No serializer for type `String` found.");
        }

        protected override global::StrawberryShake.IOperationResultDataFactory<global::Foo.Bar.IClosePaymentResult> ResultDataFactory { get; }

        protected override global::StrawberryShake.IOperationResultDataInfo BuildData(global::System.Text.Json.JsonElement obj)
        {
            var entityIds = new global::System.Collections.Generic.HashSet<global::StrawberryShake.EntityId>();
            global::StrawberryShake.IEntityStoreSnapshot snapshot = default !;
            global::Foo.Bar.State.IPaymentActionsResultData commitPaymentsId = default !;
            _entityStore.Update(session =>
            {
                commitPaymentsId = Deserialize_NonNullableIPaymentActionsResultData(session, global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "commitPayments"), entityIds);
                snapshot = session.CurrentSnapshot;
            });
            return new ClosePaymentResultInfo(commitPaymentsId, entityIds, snapshot.Version);
        }

        private global::Foo.Bar.State.IPaymentActionsResultData Deserialize_NonNullableIPaymentActionsResultData(global::StrawberryShake.IEntityStoreUpdateSession session, global::System.Text.Json.JsonElement? obj, global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            var typename = obj.Value.GetProperty("__typename").GetString();
            if (typename?.Equals("PasswordIncorrectError", global::System.StringComparison.Ordinal) ?? false)
            {
                return new global::Foo.Bar.State.PasswordIncorrectErrorData(typename);
            }

            if (typename?.Equals("PaymentActionsResultList", global::System.StringComparison.Ordinal) ?? false)
            {
                return new global::Foo.Bar.State.PaymentActionsResultListData(typename, results: Deserialize_NonNullableIPaymentActionResultDataNonNullableArray(session, global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "results"), entityIds));
            }

            if (typename?.Equals("PermissionDeniedError", global::System.StringComparison.Ordinal) ?? false)
            {
                return new global::Foo.Bar.State.PermissionDeniedErrorData(typename);
            }

            if (typename?.Equals("ValidationError", global::System.StringComparison.Ordinal) ?? false)
            {
                return new global::Foo.Bar.State.ValidationErrorData(typename);
            }

            throw new global::System.NotSupportedException();
        }

        private global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.EntityIdOrData> Deserialize_NonNullableIPaymentActionResultDataNonNullableArray(global::StrawberryShake.IEntityStoreUpdateSession session, global::System.Text.Json.JsonElement? obj, global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            var paymentActionResults = new global::System.Collections.Generic.List<global::StrawberryShake.EntityIdOrData>();
            foreach (global::System.Text.Json.JsonElement child in obj.Value.EnumerateArray())
            {
                paymentActionResults.Add(Deserialize_NonNullableIPaymentActionResultData(session, child, entityIds));
            }

            return paymentActionResults;
        }

        private global::StrawberryShake.EntityIdOrData Deserialize_NonNullableIPaymentActionResultData(global::StrawberryShake.IEntityStoreUpdateSession session, global::System.Text.Json.JsonElement? obj, global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            var typename = obj.Value.GetProperty("__typename").GetString();
            if (typename?.Equals("ClaimPayment", global::System.StringComparison.Ordinal) ?? false)
            {
                global::StrawberryShake.EntityId entityId = _idSerializer.Parse(obj.Value);
                if (entityId.Name.Equals("ClaimPayment", global::System.StringComparison.Ordinal))
                {
                    if (session.CurrentSnapshot.TryGetEntity(entityId, out global::Foo.Bar.State.ClaimPaymentEntity? entity))
                    {
                        session.SetEntity(entityId, new global::Foo.Bar.State.ClaimPaymentEntity(Deserialize_NonNullableInt32(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "id"))));
                    }
                    else
                    {
                        session.SetEntity(entityId, new global::Foo.Bar.State.ClaimPaymentEntity(Deserialize_NonNullableInt32(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "id"))));
                    }

                    return new global::StrawberryShake.EntityIdOrData(entityId);
                }
            }

            if (typename?.Equals("PolicyPayment", global::System.StringComparison.Ordinal) ?? false)
            {
                global::StrawberryShake.EntityId entityId = _idSerializer.Parse(obj.Value);
                if (entityId.Name.Equals("PolicyPayment", global::System.StringComparison.Ordinal))
                {
                    if (session.CurrentSnapshot.TryGetEntity(entityId, out global::Foo.Bar.State.PolicyPaymentEntity? entity))
                    {
                        session.SetEntity(entityId, new global::Foo.Bar.State.PolicyPaymentEntity(Deserialize_NonNullableInt32(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "id"))));
                    }
                    else
                    {
                        session.SetEntity(entityId, new global::Foo.Bar.State.PolicyPaymentEntity(Deserialize_NonNullableInt32(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "id"))));
                    }

                    return new global::StrawberryShake.EntityIdOrData(entityId);
                }
            }

            if (typename?.Equals("PaymentCommitFailure", global::System.StringComparison.Ordinal) ?? false)
            {
                return new global::StrawberryShake.EntityIdOrData(new global::Foo.Bar.State.PaymentCommitFailureData(typename));
            }

            if (typename?.Equals("AccessDeniedError", global::System.StringComparison.Ordinal) ?? false)
            {
                return new global::StrawberryShake.EntityIdOrData(new global::Foo.Bar.State.AccessDeniedErrorData(typename));
            }

            throw new global::System.NotSupportedException();
        }

        private global::System.Int32 Deserialize_NonNullableInt32(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            return _intParser.Parse(obj.Value.GetInt32()!);
        }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface IPaymentActionsResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface ISignPaymentsResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial class PasswordIncorrectErrorData : IPaymentActionsResultData, ISignPaymentsResultData
    {
        public PasswordIncorrectErrorData(global::System.String __typename)
        {
            this.__typename = __typename ?? throw new global::System.ArgumentNullException(nameof(__typename));
        }

        public global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial class PaymentActionsResultListData : IPaymentActionsResultData
    {
        public PaymentActionsResultListData(global::System.String __typename, global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.EntityIdOrData>? results = default !)
        {
            this.__typename = __typename ?? throw new global::System.ArgumentNullException(nameof(__typename));
            Results = results;
        }

        public global::System.String __typename { get; }

        public global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.EntityIdOrData>? Results { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the current user does not have the required permission to perform an action.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface IAddToCustomBlacklistResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the current user does not have the required permission to perform an action.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface IApproveClaimPurchaseInvoiceResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the current user does not have the required permission to perform an action.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface ICancelClaimPaymentGuaranteeResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the current user does not have the required permission to perform an action.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface ICancelClaimPurchaseInvoiceResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the current user does not have the required permission to perform an action.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface ICloseClaimPurchaseInvoiceBatchesResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the current user does not have the required permission to perform an action.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface ICommunicationActionResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the current user does not have the required permission to perform an action.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface ICreateClaimCollectiveInvoiceResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the current user does not have the required permission to perform an action.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface ICreateClaimEventResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the current user does not have the required permission to perform an action.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface ICreateClaimFinancialServiceResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the current user does not have the required permission to perform an action.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface ICreateClaimResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the current user does not have the required permission to perform an action.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface ICreateCompanyClientResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the current user does not have the required permission to perform an action.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface ICreateCustomDialogResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the current user does not have the required permission to perform an action.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface ICreateExchangeRateResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the current user does not have the required permission to perform an action.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface ICreateIdentityProviderResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the current user does not have the required permission to perform an action.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface ICreateMoneyAccountResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the current user does not have the required permission to perform an action.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface ICreateOrganisationResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the current user does not have the required permission to perform an action.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface ICreatePersonClientResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the current user does not have the required permission to perform an action.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface ICreateProviderResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the current user does not have the required permission to perform an action.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface ICreateTaskResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the current user does not have the required permission to perform an action.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface ICreateTeamResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the current user does not have the required permission to perform an action.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface ICreateUserPersonalAccessTokenResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the current user does not have the required permission to perform an action.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface ICreateUserResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the current user does not have the required permission to perform an action.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface ICreateVatGroupResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the current user does not have the required permission to perform an action.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface ICreateWebHookListenerResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the current user does not have the required permission to perform an action.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface IExportPaymentsResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the current user does not have the required permission to perform an action.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface IGeneratePaymentExportFileResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the current user does not have the required permission to perform an action.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface IGetFeeDefinitionResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the current user does not have the required permission to perform an action.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface IGetFeeTransactionResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the current user does not have the required permission to perform an action.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface IGetUserPersonalAccessTokensResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the current user does not have the required permission to perform an action.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface IImportPaymentsResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the current user does not have the required permission to perform an action.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface IProductVisibilityGroupResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the current user does not have the required permission to perform an action.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface IRefundClaimPurchaseInvoiceResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the current user does not have the required permission to perform an action.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface IRemoveCustomDialogResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the current user does not have the required permission to perform an action.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface IRemoveFromCustomBlacklistResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the current user does not have the required permission to perform an action.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface IRemoveIdentityProviderResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the current user does not have the required permission to perform an action.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface IRemoveMoneyAccountResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the current user does not have the required permission to perform an action.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface IRemoveProductVisibilityGroupResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the current user does not have the required permission to perform an action.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface IRemoveVatGroupResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the current user does not have the required permission to perform an action.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface IRemoveWebHookListenerResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the current user does not have the required permission to perform an action.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface IRevokeUserPersonalAccessTokenResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the current user does not have the required permission to perform an action.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface ISettleClaimPaymentGuaranteeResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the current user does not have the required permission to perform an action.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface IUnassignedFileResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the current user does not have the required permission to perform an action.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface IUpdateClaimCollectiveInvoiceResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the current user does not have the required permission to perform an action.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface IUpdateClaimContactResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the current user does not have the required permission to perform an action.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface IUpdateClaimEventResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the current user does not have the required permission to perform an action.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface IUpdateClaimFinancialServiceResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the current user does not have the required permission to perform an action.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface IUpdateClaimPurchaseInvoiceBatchResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the current user does not have the required permission to perform an action.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface IUpdateClaimResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the current user does not have the required permission to perform an action.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface IUpdateClaimStatusResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the current user does not have the required permission to perform an action.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface IUpdateClientResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the current user does not have the required permission to perform an action.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface IUpdateCompanyClientResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the current user does not have the required permission to perform an action.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface IUpdateCustomDialogResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the current user does not have the required permission to perform an action.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface IUpdateIdentityProviderResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the current user does not have the required permission to perform an action.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface IUpdateMoneyAccountResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the current user does not have the required permission to perform an action.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface IUpdateOrganisationResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the current user does not have the required permission to perform an action.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface IUpdatePersonClientResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the current user does not have the required permission to perform an action.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface IUpdatePolicyResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the current user does not have the required permission to perform an action.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface IUpdateProviderResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the current user does not have the required permission to perform an action.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface IUpdateTaskResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the current user does not have the required permission to perform an action.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface IUpdateTeamResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the current user does not have the required permission to perform an action.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface IUpdateUserPasswordResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the current user does not have the required permission to perform an action.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface IUpdateUserResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the current user does not have the required permission to perform an action.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface IUpdateVatGroupResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the current user does not have the required permission to perform an action.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface IUpdateWebHookListenerResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the current user does not have the required permission to perform an action.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface IVoidClaimPurchaseInvoiceBatchesResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the current user does not have the required permission to perform an action.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface IWebHookEventsResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the current user does not have the required permission to perform an action.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface IWebHookListenerResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the current user does not have the required permission to perform an action.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface IWebHookListenersResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the current user does not have the required permission to perform an action.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial class PermissionDeniedErrorData : IAddToCustomBlacklistResultData, IApproveClaimPurchaseInvoiceResultData, ICancelClaimPaymentGuaranteeResultData, ICancelClaimPurchaseInvoiceResultData, ICloseClaimPurchaseInvoiceBatchesResultData, ICommunicationActionResultData, ICreateClaimCollectiveInvoiceResultData, ICreateClaimEventResultData, ICreateClaimFinancialServiceResultData, ICreateClaimResultData, ICreateCompanyClientResultData, ICreateCustomDialogResultData, ICreateExchangeRateResultData, ICreateIdentityProviderResultData, ICreateMoneyAccountResultData, ICreateOrganisationResultData, ICreatePersonClientResultData, ICreateProviderResultData, ICreateTaskResultData, ICreateTeamResultData, ICreateUserPersonalAccessTokenResultData, ICreateUserResultData, ICreateVatGroupResultData, ICreateWebHookListenerResultData, IExportPaymentsResultData, IGeneratePaymentExportFileResultData, IGetFeeDefinitionResultData, IGetFeeTransactionResultData, IGetUserPersonalAccessTokensResultData, IImportPaymentsResultData, IPaymentActionsResultData, IProductVisibilityGroupResultData, IRefundClaimPurchaseInvoiceResultData, IRemoveCustomDialogResultData, IRemoveFromCustomBlacklistResultData, IRemoveIdentityProviderResultData, IRemoveMoneyAccountResultData, IRemoveProductVisibilityGroupResultData, IRemoveVatGroupResultData, IRemoveWebHookListenerResultData, IRevokeUserPersonalAccessTokenResultData, ISettleClaimPaymentGuaranteeResultData, ISignPaymentsResultData, IUnassignedFileResultData, IUpdateClaimCollectiveInvoiceResultData, IUpdateClaimContactResultData, IUpdateClaimEventResultData, IUpdateClaimFinancialServiceResultData, IUpdateClaimPurchaseInvoiceBatchResultData, IUpdateClaimResultData, IUpdateClaimStatusResultData, IUpdateClientResultData, IUpdateCompanyClientResultData, IUpdateCustomDialogResultData, IUpdateIdentityProviderResultData, IUpdateMoneyAccountResultData, IUpdateOrganisationResultData, IUpdatePersonClientResultData, IUpdatePolicyResultData, IUpdateProviderResultData, IUpdateTaskResultData, IUpdateTeamResultData, IUpdateUserPasswordResultData, IUpdateUserResultData, IUpdateVatGroupResultData, IUpdateWebHookListenerResultData, IVoidClaimPurchaseInvoiceBatchesResultData, IWebHookEventsResultData, IWebHookListenerResultData, IWebHookListenersResultData
    {
        public PermissionDeniedErrorData(global::System.String __typename)
        {
            this.__typename = __typename ?? throw new global::System.ArgumentNullException(nameof(__typename));
        }

        public global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the given input is invalid.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface ICreateClaimPurchaseInvoiceLineDecisionResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the given input is invalid.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface ICreateClaimPurchaseInvoiceLineExplanationResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the given input is invalid.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface ICreateInboxTypeResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the given input is invalid.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface ICreatePoliciesResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the given input is invalid.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface ICreateQuotesResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the given input is invalid.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface ICreateSegmentTypeResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the given input is invalid.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface IPhoneCallResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the given input is invalid.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface IQuestionnaireEvaluationResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the given input is invalid.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface IQuotesCalculationResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the given input is invalid.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface IRemoveClaimPurchaseInvoiceLineDecisionResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the given input is invalid.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface IRemoveClaimPurchaseInvoiceLineExplanationResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the given input is invalid.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface IRemoveTeamResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the given input is invalid.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface ISearchResultUnionData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the given input is invalid.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface IUpdateClaimPurchaseInvoiceLineDecisionResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the given input is invalid.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface IUpdateClaimPurchaseInvoiceLineExplanationResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the given input is invalid.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface IUpdateInboxTypeResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the given input is invalid.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface IUpdatePaymentResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the given input is invalid.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface IUpdateSegmentTypeResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the given input is invalid.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial class ValidationErrorData : IApproveClaimPurchaseInvoiceResultData, ICommunicationActionResultData, ICreateClaimCollectiveInvoiceResultData, ICreateClaimEventResultData, ICreateClaimFinancialServiceResultData, ICreateClaimPurchaseInvoiceLineDecisionResultData, ICreateClaimPurchaseInvoiceLineExplanationResultData, ICreateClaimResultData, ICreateCompanyClientResultData, ICreateCustomDialogResultData, ICreateExchangeRateResultData, ICreateIdentityProviderResultData, ICreateInboxTypeResultData, ICreateMoneyAccountResultData, ICreateOrganisationResultData, ICreatePersonClientResultData, ICreatePoliciesResultData, ICreateProviderResultData, ICreateQuotesResultData, ICreateSegmentTypeResultData, ICreateTaskResultData, ICreateTeamResultData, ICreateUserResultData, ICreateVatGroupResultData, ICreateWebHookListenerResultData, IExportPaymentsResultData, IImportPaymentsResultData, IPaymentActionsResultData, IPhoneCallResultData, IProductVisibilityGroupResultData, IQuestionnaireEvaluationResultData, IQuotesCalculationResultData, IRefundClaimPurchaseInvoiceResultData, IRemoveClaimPurchaseInvoiceLineDecisionResultData, IRemoveClaimPurchaseInvoiceLineExplanationResultData, IRemoveCustomDialogResultData, IRemoveMoneyAccountResultData, IRemoveProductVisibilityGroupResultData, IRemoveTeamResultData, IRemoveVatGroupResultData, ISearchResultUnionData, ISignPaymentsResultData, IUnassignedFileResultData, IUpdateClaimCollectiveInvoiceResultData, IUpdateClaimEventResultData, IUpdateClaimFinancialServiceResultData, IUpdateClaimPurchaseInvoiceBatchResultData, IUpdateClaimPurchaseInvoiceLineDecisionResultData, IUpdateClaimPurchaseInvoiceLineExplanationResultData, IUpdateClaimResultData, IUpdateClaimStatusResultData, IUpdateClientResultData, IUpdateCompanyClientResultData, IUpdateCustomDialogResultData, IUpdateIdentityProviderResultData, IUpdateInboxTypeResultData, IUpdateMoneyAccountResultData, IUpdateOrganisationResultData, IUpdatePaymentResultData, IUpdatePersonClientResultData, IUpdatePolicyResultData, IUpdateProviderResultData, IUpdateSegmentTypeResultData, IUpdateTaskResultData, IUpdateTeamResultData, IUpdateUserPasswordResultData, IUpdateUserResultData, IUpdateVatGroupResultData, IUpdateWebHookListenerResultData
    {
        public ValidationErrorData(global::System.String __typename)
        {
            this.__typename = __typename ?? throw new global::System.ArgumentNullException(nameof(__typename));
        }

        public global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface IPaymentActionResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial class PaymentCommitFailureData : IPaymentActionResultData
    {
        public PaymentCommitFailureData(global::System.String __typename)
        {
            this.__typename = __typename ?? throw new global::System.ArgumentNullException(nameof(__typename));
        }

        public global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the current user is not allowed to access an object.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface ICommunicationListResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the current user is not allowed to access an object.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface IGenerateDocumentResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the current user is not allowed to access an object.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface IGetClaimPurchaseInvoiceBatchResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the current user is not allowed to access an object.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface IGetClaimResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the current user is not allowed to access an object.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface IGetClientResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the current user is not allowed to access an object.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface IGetCommunicationFieldsResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the current user is not allowed to access an object.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface IGetCommunicationResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the current user is not allowed to access an object.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface IGetPolicyResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the current user is not allowed to access an object.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface IGetTaskResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the current user is not allowed to access an object.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface IPaymentCommitErrorData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the current user is not allowed to access an object.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface ISignPaymentErrorData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the current user is not allowed to access an object.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial interface ISignPaymentResultData
    {
        global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.DataTypeGenerator
    ///<summary>An error that occurs when the current user is not allowed to access an object.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial class AccessDeniedErrorData : IApproveClaimPurchaseInvoiceResultData, ICancelClaimPaymentGuaranteeResultData, ICancelClaimPurchaseInvoiceResultData, ICommunicationActionResultData, ICommunicationListResultData, ICreateOrganisationResultData, ICreateTaskResultData, IGenerateDocumentResultData, IGetClaimPurchaseInvoiceBatchResultData, IGetClaimResultData, IGetClientResultData, IGetCommunicationFieldsResultData, IGetCommunicationResultData, IGetPolicyResultData, IGetTaskResultData, IPaymentActionResultData, IPaymentCommitErrorData, IRefundClaimPurchaseInvoiceResultData, ISettleClaimPaymentGuaranteeResultData, ISignPaymentErrorData, ISignPaymentResultData, IUpdateClaimContactResultData, IUpdateClaimResultData, IUpdateClaimStatusResultData, IUpdateClientResultData, IUpdateCompanyClientResultData, IUpdateOrganisationResultData, IUpdatePersonClientResultData, IUpdatePolicyResultData, IUpdateTaskResultData
    {
        public AccessDeniedErrorData(global::System.String __typename)
        {
            this.__typename = __typename ?? throw new global::System.ArgumentNullException(nameof(__typename));
        }

        public global::System.String __typename { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.ResultFromEntityTypeMapperGenerator
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class ClosePayment_CommitPayments_Results_ClaimPaymentFromClaimPaymentEntityMapper : global::StrawberryShake.IEntityMapper<global::Foo.Bar.State.ClaimPaymentEntity, ClosePayment_CommitPayments_Results_ClaimPayment>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        public ClosePayment_CommitPayments_Results_ClaimPaymentFromClaimPaymentEntityMapper(global::StrawberryShake.IEntityStore entityStore)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
        }

        public ClosePayment_CommitPayments_Results_ClaimPayment Map(global::Foo.Bar.State.ClaimPaymentEntity entity, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)
        {
            if (snapshot is null)
            {
                snapshot = _entityStore.CurrentSnapshot;
            }

            return new ClosePayment_CommitPayments_Results_ClaimPayment(entity.Id);
        }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.ResultFromEntityTypeMapperGenerator
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class ClosePayment_CommitPayments_Results_PolicyPaymentFromPolicyPaymentEntityMapper : global::StrawberryShake.IEntityMapper<global::Foo.Bar.State.PolicyPaymentEntity, ClosePayment_CommitPayments_Results_PolicyPayment>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        public ClosePayment_CommitPayments_Results_PolicyPaymentFromPolicyPaymentEntityMapper(global::StrawberryShake.IEntityStore entityStore)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
        }

        public ClosePayment_CommitPayments_Results_PolicyPayment Map(global::Foo.Bar.State.PolicyPaymentEntity entity, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)
        {
            if (snapshot is null)
            {
                snapshot = _entityStore.CurrentSnapshot;
            }

            return new ClosePayment_CommitPayments_Results_PolicyPayment(entity.Id);
        }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.EntityIdFactoryGenerator
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class FooClientEntityIdFactory : global::StrawberryShake.IEntityIdSerializer
    {
        private static readonly global::System.Text.Json.JsonWriterOptions _options = new global::System.Text.Json.JsonWriterOptions()
        {Indented = false};
        public global::StrawberryShake.EntityId Parse(global::System.Text.Json.JsonElement obj)
        {
            global::System.String __typename = obj.GetProperty("__typename").GetString()!;
            return __typename switch
            {
                "ClaimPayment" => ParseClaimPaymentEntityId(obj, __typename),
                "PolicyPayment" => ParsePolicyPaymentEntityId(obj, __typename),
                _ => throw new global::System.NotSupportedException()};
        }

        public global::System.String Format(global::StrawberryShake.EntityId entityId)
        {
            return entityId.Name switch
            {
                "ClaimPayment" => FormatClaimPaymentEntityId(entityId),
                "PolicyPayment" => FormatPolicyPaymentEntityId(entityId),
                _ => throw new global::System.NotSupportedException()};
        }

        private global::StrawberryShake.EntityId ParseClaimPaymentEntityId(global::System.Text.Json.JsonElement obj, global::System.String type)
        {
            return new global::StrawberryShake.EntityId(type, obj.GetProperty("id").GetInt32()!);
        }

        private global::System.String FormatClaimPaymentEntityId(global::StrawberryShake.EntityId entityId)
        {
            using var writer = new global::StrawberryShake.Internal.ArrayWriter();
            using var jsonWriter = new global::System.Text.Json.Utf8JsonWriter(writer, _options);
            jsonWriter.WriteStartObject();
            jsonWriter.WriteString("__typename", entityId.Name);
            jsonWriter.WriteNumber("id", (global::System.Int32)entityId.Value);
            jsonWriter.WriteEndObject();
            jsonWriter.Flush();
            return global::System.Text.Encoding.UTF8.GetString(writer.GetInternalBuffer(), 0, writer.Length);
        }

        private global::StrawberryShake.EntityId ParsePolicyPaymentEntityId(global::System.Text.Json.JsonElement obj, global::System.String type)
        {
            return new global::StrawberryShake.EntityId(type, obj.GetProperty("id").GetInt32()!);
        }

        private global::System.String FormatPolicyPaymentEntityId(global::StrawberryShake.EntityId entityId)
        {
            using var writer = new global::StrawberryShake.Internal.ArrayWriter();
            using var jsonWriter = new global::System.Text.Json.Utf8JsonWriter(writer, _options);
            jsonWriter.WriteStartObject();
            jsonWriter.WriteString("__typename", entityId.Name);
            jsonWriter.WriteNumber("id", (global::System.Int32)entityId.Value);
            jsonWriter.WriteEndObject();
            jsonWriter.Flush();
            return global::System.Text.Encoding.UTF8.GetString(writer.GetInternalBuffer(), 0, writer.Length);
        }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.StoreAccessorGenerator
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class FooClientStoreAccessor : global::StrawberryShake.StoreAccessor
    {
        public FooClientStoreAccessor(global::StrawberryShake.IOperationStore operationStore, global::StrawberryShake.IEntityStore entityStore, global::StrawberryShake.IEntityIdSerializer entityIdSerializer, global::System.Collections.Generic.IEnumerable<global::StrawberryShake.IOperationRequestFactory> requestFactories, global::System.Collections.Generic.IEnumerable<global::StrawberryShake.IOperationResultDataFactory> resultDataFactories) : base(operationStore, entityStore, entityIdSerializer, requestFactories, resultDataFactories)
        {
        }
    }
}

namespace Microsoft.Extensions.DependencyInjection
{
    // StrawberryShake.CodeGeneration.CSharp.Generators.DependencyInjectionGenerator
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public static partial class FooClientServiceCollectionExtensions
    {
        public static global::StrawberryShake.IClientBuilder<global::Foo.Bar.State.FooClientStoreAccessor> AddFooClient(this global::Microsoft.Extensions.DependencyInjection.IServiceCollection services, global::StrawberryShake.ExecutionStrategy strategy = global::StrawberryShake.ExecutionStrategy.NetworkOnly)
        {
            var serviceCollection = new global::Microsoft.Extensions.DependencyInjection.ServiceCollection();
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton(services, sp =>
            {
                ConfigureClientDefault(sp, serviceCollection, strategy);
                return new ClientServiceProvider(global::Microsoft.Extensions.DependencyInjection.ServiceCollectionContainerBuilderExtensions.BuildServiceProvider(serviceCollection));
            });
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton(services, sp => new global::Foo.Bar.State.FooClientStoreAccessor(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationStore>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<ClientServiceProvider>(sp)), global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IEntityStore>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<ClientServiceProvider>(sp)), global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IEntityIdSerializer>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<ClientServiceProvider>(sp)), global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::System.Collections.Generic.IEnumerable<global::StrawberryShake.IOperationRequestFactory>>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<ClientServiceProvider>(sp)), global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::System.Collections.Generic.IEnumerable<global::StrawberryShake.IOperationResultDataFactory>>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<ClientServiceProvider>(sp))));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::Foo.Bar.ClosePaymentMutation>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<ClientServiceProvider>(sp)));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::Foo.Bar.FooClient>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<ClientServiceProvider>(sp)));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::Foo.Bar.IFooClient>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<ClientServiceProvider>(sp)));
            return new global::StrawberryShake.ClientBuilder<global::Foo.Bar.State.FooClientStoreAccessor>("FooClient", services, serviceCollection);
        }

        private static global::Microsoft.Extensions.DependencyInjection.IServiceCollection ConfigureClientDefault(global::System.IServiceProvider parentServices, global::Microsoft.Extensions.DependencyInjection.ServiceCollection services, global::StrawberryShake.ExecutionStrategy strategy = global::StrawberryShake.ExecutionStrategy.NetworkOnly)
        {
            global::Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddSingleton<global::StrawberryShake.IEntityStore, global::StrawberryShake.EntityStore>(services);
            global::Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddSingleton<global::StrawberryShake.IOperationStore>(services, sp => new global::StrawberryShake.OperationStore(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IEntityStore>(sp)));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Transport.Http.IHttpConnection>(services, sp =>
            {
                var clientFactory = global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::System.Net.Http.IHttpClientFactory>(parentServices);
                return new global::StrawberryShake.Transport.Http.HttpConnection(() => clientFactory.CreateClient("FooClient"));
            });
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IEntityMapper<global::Foo.Bar.State.ClaimPaymentEntity, global::Foo.Bar.ClosePayment_CommitPayments_Results_ClaimPayment>, global::Foo.Bar.State.ClosePayment_CommitPayments_Results_ClaimPaymentFromClaimPaymentEntityMapper>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IEntityMapper<global::Foo.Bar.State.PolicyPaymentEntity, global::Foo.Bar.ClosePayment_CommitPayments_Results_PolicyPayment>, global::Foo.Bar.State.ClosePayment_CommitPayments_Results_PolicyPaymentFromPolicyPaymentEntityMapper>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.StringSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.BooleanSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.ByteSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.ShortSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.IntSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.LongSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.FloatSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.DecimalSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.UrlSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.UUIDSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.IdSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.DateTimeSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.DateSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.ByteArraySerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.TimeSpanSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.JsonSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::Foo.Bar.CommitPaymentInputInputValueFormatter>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializerResolver>(services, sp => new global::StrawberryShake.Serialization.SerializerResolver(global::System.Linq.Enumerable.Concat(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::System.Collections.Generic.IEnumerable<global::StrawberryShake.Serialization.ISerializer>>(parentServices), global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::System.Collections.Generic.IEnumerable<global::StrawberryShake.Serialization.ISerializer>>(sp))));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultDataFactory<global::Foo.Bar.IClosePaymentResult>, global::Foo.Bar.State.ClosePaymentResultFactory>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultDataFactory>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationResultDataFactory<global::Foo.Bar.IClosePaymentResult>>(sp));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationRequestFactory>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::Foo.Bar.IClosePaymentMutation>(sp));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::Foo.Bar.IClosePaymentResult>, global::Foo.Bar.State.ClosePaymentBuilder>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationExecutor<global::Foo.Bar.IClosePaymentResult>>(services, sp => new global::StrawberryShake.OperationExecutor<global::System.Text.Json.JsonDocument, global::Foo.Bar.IClosePaymentResult>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.Transport.Http.IHttpConnection>(sp), () => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::Foo.Bar.IClosePaymentResult>>(sp), () => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IResultPatcher<global::System.Text.Json.JsonDocument>>(sp), global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationStore>(sp), strategy));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IResultPatcher<global::System.Text.Json.JsonDocument>, global::StrawberryShake.Json.JsonResultPatcher>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::Foo.Bar.ClosePaymentMutation>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::Foo.Bar.IClosePaymentMutation>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::Foo.Bar.ClosePaymentMutation>(sp));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IEntityIdSerializer, global::Foo.Bar.State.FooClientEntityIdFactory>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::Foo.Bar.FooClient>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::Foo.Bar.IFooClient>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::Foo.Bar.FooClient>(sp));
            return services;
        }

        private sealed class ClientServiceProvider : System.IServiceProvider, System.IDisposable
        {
            private readonly System.IServiceProvider _provider;
            public ClientServiceProvider(System.IServiceProvider provider)
            {
                _provider = provider;
            }

            public object? GetService(System.Type serviceType)
            {
                return _provider.GetService(serviceType);
            }

            public void Dispose()
            {
                if (_provider is System.IDisposable d)
                {
                    d.Dispose();
                }
            }
        }
    }
}


