// ReSharper disable ArrangeObjectCreationWhenTypeEvident
// ReSharper disable BuiltInTypeReferenceStyle
// ReSharper disable ConvertToAutoProperty
// ReSharper disable InconsistentNaming
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable PreferConcreteValueOverDefault
// ReSharper disable RedundantNameQualifier
// ReSharper disable SuggestVarOrType_SimpleTypes
// ReSharper disable UnusedMember.Global
// ReSharper disable UnusedMethodReturnValue.Local
// ReSharper disable UnusedType.Global

// RecursiveEntitySelfReferenceClient

// <auto-generated/>
#nullable enable annotations
#nullable disable warnings

namespace Microsoft.Extensions.DependencyInjection
{
    // StrawberryShake.CodeGeneration.CSharp.Generators.DependencyInjectionGenerator
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public static partial class RecursiveEntitySelfReferenceClientServiceCollectionExtensions
    {
        public static global::StrawberryShake.IClientBuilder<global::StrawberryShake.CodeGeneration.CSharp.Integration.RecursiveEntitySelfReference.State.RecursiveEntitySelfReferenceClientStoreAccessor> AddRecursiveEntitySelfReferenceClient(this global::Microsoft.Extensions.DependencyInjection.IServiceCollection services, global::StrawberryShake.ExecutionStrategy strategy = global::StrawberryShake.ExecutionStrategy.NetworkOnly)
        {
            var serviceCollection = new global::Microsoft.Extensions.DependencyInjection.ServiceCollection();
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton(services, sp =>
            {
                ConfigureClientDefault(sp, serviceCollection, strategy);
                return new ClientServiceProvider(global::Microsoft.Extensions.DependencyInjection.ServiceCollectionContainerBuilderExtensions.BuildServiceProvider(serviceCollection));
            });
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton(services, sp => new global::StrawberryShake.CodeGeneration.CSharp.Integration.RecursiveEntitySelfReference.State.RecursiveEntitySelfReferenceClientStoreAccessor(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationStore>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<ClientServiceProvider>(sp)), global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IEntityStore>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<ClientServiceProvider>(sp)), global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IEntityIdSerializer>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<ClientServiceProvider>(sp)), global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::System.Collections.Generic.IEnumerable<global::StrawberryShake.IOperationRequestFactory>>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<ClientServiceProvider>(sp)), global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::System.Collections.Generic.IEnumerable<global::StrawberryShake.IOperationResultDataFactory>>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<ClientServiceProvider>(sp))));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.CodeGeneration.CSharp.Integration.RecursiveEntitySelfReference.GetSelfishGuyQuery>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<ClientServiceProvider>(sp)));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.CodeGeneration.CSharp.Integration.RecursiveEntitySelfReference.RecursiveEntitySelfReferenceClient>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<ClientServiceProvider>(sp)));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.CodeGeneration.CSharp.Integration.RecursiveEntitySelfReference.IRecursiveEntitySelfReferenceClient>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<ClientServiceProvider>(sp)));
            return new global::StrawberryShake.ClientBuilder<global::StrawberryShake.CodeGeneration.CSharp.Integration.RecursiveEntitySelfReference.State.RecursiveEntitySelfReferenceClientStoreAccessor>("RecursiveEntitySelfReferenceClient", services, serviceCollection);
        }

        private static global::Microsoft.Extensions.DependencyInjection.IServiceCollection ConfigureClientDefault(global::System.IServiceProvider parentServices, global::Microsoft.Extensions.DependencyInjection.ServiceCollection services, global::StrawberryShake.ExecutionStrategy strategy = global::StrawberryShake.ExecutionStrategy.NetworkOnly)
        {
            global::Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddSingleton<global::StrawberryShake.IEntityStore, global::StrawberryShake.EntityStore>(services);
            global::Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddSingleton<global::StrawberryShake.IOperationStore>(services, sp => new global::StrawberryShake.OperationStore(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IEntityStore>(sp)));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Transport.Http.IHttpConnection>(services, sp =>
            {
                var clientFactory = global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::System.Net.Http.IHttpClientFactory>(parentServices);
                return new global::StrawberryShake.Transport.Http.HttpConnection(() => clientFactory.CreateClient("RecursiveEntitySelfReferenceClient"));
            });
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IEntityMapper<global::StrawberryShake.CodeGeneration.CSharp.Integration.RecursiveEntitySelfReference.State.PersonEntity, global::StrawberryShake.CodeGeneration.CSharp.Integration.RecursiveEntitySelfReference.GetSelfishGuy_SelfishGuy_Person>, global::StrawberryShake.CodeGeneration.CSharp.Integration.RecursiveEntitySelfReference.State.GetSelfishGuy_SelfishGuy_PersonFromPersonEntityMapper>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IEntityMapper<global::StrawberryShake.CodeGeneration.CSharp.Integration.RecursiveEntitySelfReference.State.PersonEntity, global::StrawberryShake.CodeGeneration.CSharp.Integration.RecursiveEntitySelfReference.GetSelfishGuy_SelfishGuy_BestFriend_Person>, global::StrawberryShake.CodeGeneration.CSharp.Integration.RecursiveEntitySelfReference.State.GetSelfishGuy_SelfishGuy_BestFriend_PersonFromPersonEntityMapper>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IEntityMapper<global::StrawberryShake.CodeGeneration.CSharp.Integration.RecursiveEntitySelfReference.State.PersonEntity, global::StrawberryShake.CodeGeneration.CSharp.Integration.RecursiveEntitySelfReference.GetSelfishGuy_SelfishGuy_Friends_Person>, global::StrawberryShake.CodeGeneration.CSharp.Integration.RecursiveEntitySelfReference.State.GetSelfishGuy_SelfishGuy_Friends_PersonFromPersonEntityMapper>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.StringSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.BooleanSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.ByteSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.ShortSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.IntSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.LongSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.FloatSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.DecimalSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.UrlSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.UUIDSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.IdSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.DateTimeSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.DateSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.LocalDateSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.LocalDateTimeSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.LocalTimeSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.ByteArraySerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.TimeSpanSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.JsonSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializerResolver>(services, sp => new global::StrawberryShake.Serialization.SerializerResolver(global::System.Linq.Enumerable.Concat(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::System.Collections.Generic.IEnumerable<global::StrawberryShake.Serialization.ISerializer>>(parentServices), global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::System.Collections.Generic.IEnumerable<global::StrawberryShake.Serialization.ISerializer>>(sp))));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultDataFactory<global::StrawberryShake.CodeGeneration.CSharp.Integration.RecursiveEntitySelfReference.IGetSelfishGuyResult>, global::StrawberryShake.CodeGeneration.CSharp.Integration.RecursiveEntitySelfReference.State.GetSelfishGuyResultFactory>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultDataFactory>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationResultDataFactory<global::StrawberryShake.CodeGeneration.CSharp.Integration.RecursiveEntitySelfReference.IGetSelfishGuyResult>>(sp));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationRequestFactory>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.CodeGeneration.CSharp.Integration.RecursiveEntitySelfReference.IGetSelfishGuyQuery>(sp));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::StrawberryShake.CodeGeneration.CSharp.Integration.RecursiveEntitySelfReference.IGetSelfishGuyResult>, global::StrawberryShake.CodeGeneration.CSharp.Integration.RecursiveEntitySelfReference.State.GetSelfishGuyBuilder>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationExecutor<global::StrawberryShake.CodeGeneration.CSharp.Integration.RecursiveEntitySelfReference.IGetSelfishGuyResult>>(services, sp => new global::StrawberryShake.OperationExecutor<global::System.Text.Json.JsonDocument, global::StrawberryShake.CodeGeneration.CSharp.Integration.RecursiveEntitySelfReference.IGetSelfishGuyResult>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.Transport.Http.IHttpConnection>(sp), () => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::StrawberryShake.CodeGeneration.CSharp.Integration.RecursiveEntitySelfReference.IGetSelfishGuyResult>>(sp), () => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IResultPatcher<global::System.Text.Json.JsonDocument>>(sp), global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationStore>(sp), strategy));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IResultPatcher<global::System.Text.Json.JsonDocument>, global::StrawberryShake.Json.JsonResultPatcher>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.CodeGeneration.CSharp.Integration.RecursiveEntitySelfReference.GetSelfishGuyQuery>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.CodeGeneration.CSharp.Integration.RecursiveEntitySelfReference.IGetSelfishGuyQuery>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.CodeGeneration.CSharp.Integration.RecursiveEntitySelfReference.GetSelfishGuyQuery>(sp));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IEntityIdSerializer, global::StrawberryShake.CodeGeneration.CSharp.Integration.RecursiveEntitySelfReference.State.RecursiveEntitySelfReferenceClientEntityIdFactory>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.CodeGeneration.CSharp.Integration.RecursiveEntitySelfReference.RecursiveEntitySelfReferenceClient>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.CodeGeneration.CSharp.Integration.RecursiveEntitySelfReference.IRecursiveEntitySelfReferenceClient>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.CodeGeneration.CSharp.Integration.RecursiveEntitySelfReference.RecursiveEntitySelfReferenceClient>(sp));
            return services;
        }

        private sealed class ClientServiceProvider : System.IServiceProvider, System.IDisposable
        {
            private readonly System.IServiceProvider _provider;
            public ClientServiceProvider(System.IServiceProvider provider)
            {
                _provider = provider;
            }

            public object? GetService(System.Type serviceType)
            {
                return _provider.GetService(serviceType);
            }

            public void Dispose()
            {
                if (_provider is System.IDisposable d)
                {
                    d.Dispose();
                }
            }
        }
    }
}

namespace StrawberryShake.CodeGeneration.CSharp.Integration.RecursiveEntitySelfReference
{
    // StrawberryShake.CodeGeneration.CSharp.Generators.ResultTypeGenerator
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class GetSelfishGuyResult : global::System.IEquatable<GetSelfishGuyResult>, IGetSelfishGuyResult
    {
        public GetSelfishGuyResult(global::StrawberryShake.CodeGeneration.CSharp.Integration.RecursiveEntitySelfReference.IGetSelfishGuy_SelfishGuy selfishGuy)
        {
            SelfishGuy = selfishGuy;
        }

        public global::StrawberryShake.CodeGeneration.CSharp.Integration.RecursiveEntitySelfReference.IGetSelfishGuy_SelfishGuy SelfishGuy { get; }

        public virtual global::System.Boolean Equals(GetSelfishGuyResult? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (SelfishGuy.Equals(other.SelfishGuy));
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((GetSelfishGuyResult)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                hash ^= 397 * SelfishGuy.GetHashCode();
                return hash;
            }
        }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.ResultTypeGenerator
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class GetSelfishGuy_SelfishGuy_Person : global::System.IEquatable<GetSelfishGuy_SelfishGuy_Person>, IGetSelfishGuy_SelfishGuy_Person
    {
        public GetSelfishGuy_SelfishGuy_Person(global::System.String id, global::System.String firstName, global::System.String lastName, global::StrawberryShake.CodeGeneration.CSharp.Integration.RecursiveEntitySelfReference.IGetSelfishGuy_SelfishGuy_BestFriend bestFriend, global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.CodeGeneration.CSharp.Integration.RecursiveEntitySelfReference.IGetSelfishGuy_SelfishGuy_Friends>? friends)
        {
            Id = id;
            FirstName = firstName;
            LastName = lastName;
            BestFriend = bestFriend;
            Friends = friends;
        }

        public global::System.String Id { get; }
        public global::System.String FirstName { get; }
        public global::System.String LastName { get; }
        public global::StrawberryShake.CodeGeneration.CSharp.Integration.RecursiveEntitySelfReference.IGetSelfishGuy_SelfishGuy_BestFriend BestFriend { get; }
        public global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.CodeGeneration.CSharp.Integration.RecursiveEntitySelfReference.IGetSelfishGuy_SelfishGuy_Friends>? Friends { get; }

        public virtual global::System.Boolean Equals(GetSelfishGuy_SelfishGuy_Person? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (Id.Equals(other.Id)) && FirstName.Equals(other.FirstName) && LastName.Equals(other.LastName) && BestFriend.Equals(other.BestFriend) && global::StrawberryShake.Internal.ComparisonHelper.SequenceEqual(Friends, other.Friends);
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((GetSelfishGuy_SelfishGuy_Person)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                hash ^= 397 * Id.GetHashCode();
                hash ^= 397 * FirstName.GetHashCode();
                hash ^= 397 * LastName.GetHashCode();
                hash ^= 397 * BestFriend.GetHashCode();
                if (Friends != null)
                {
                    foreach (var Friends_elm in Friends)
                    {
                        hash ^= 397 * Friends_elm.GetHashCode();
                    }
                }

                return hash;
            }
        }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.ResultTypeGenerator
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class GetSelfishGuy_SelfishGuy_BestFriend_Person : global::System.IEquatable<GetSelfishGuy_SelfishGuy_BestFriend_Person>, IGetSelfishGuy_SelfishGuy_BestFriend_Person
    {
        public GetSelfishGuy_SelfishGuy_BestFriend_Person(global::System.String firstName, global::System.String lastName, global::System.Int32 age, global::System.String phone)
        {
            FirstName = firstName;
            LastName = lastName;
            Age = age;
            Phone = phone;
        }

        public global::System.String FirstName { get; }
        public global::System.String LastName { get; }
        public global::System.Int32 Age { get; }
        public global::System.String Phone { get; }

        public virtual global::System.Boolean Equals(GetSelfishGuy_SelfishGuy_BestFriend_Person? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (FirstName.Equals(other.FirstName)) && LastName.Equals(other.LastName) && global::System.Object.Equals(Age, other.Age) && Phone.Equals(other.Phone);
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((GetSelfishGuy_SelfishGuy_BestFriend_Person)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                hash ^= 397 * FirstName.GetHashCode();
                hash ^= 397 * LastName.GetHashCode();
                hash ^= 397 * Age.GetHashCode();
                hash ^= 397 * Phone.GetHashCode();
                return hash;
            }
        }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.ResultTypeGenerator
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class GetSelfishGuy_SelfishGuy_Friends_Person : global::System.IEquatable<GetSelfishGuy_SelfishGuy_Friends_Person>, IGetSelfishGuy_SelfishGuy_Friends_Person
    {
        public GetSelfishGuy_SelfishGuy_Friends_Person(global::System.String id, global::System.String firstName, global::System.String lastName, global::System.String zipCode)
        {
            Id = id;
            FirstName = firstName;
            LastName = lastName;
            ZipCode = zipCode;
        }

        public global::System.String Id { get; }
        public global::System.String FirstName { get; }
        public global::System.String LastName { get; }
        public global::System.String ZipCode { get; }

        public virtual global::System.Boolean Equals(GetSelfishGuy_SelfishGuy_Friends_Person? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (Id.Equals(other.Id)) && FirstName.Equals(other.FirstName) && LastName.Equals(other.LastName) && ZipCode.Equals(other.ZipCode);
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((GetSelfishGuy_SelfishGuy_Friends_Person)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                hash ^= 397 * Id.GetHashCode();
                hash ^= 397 * FirstName.GetHashCode();
                hash ^= 397 * LastName.GetHashCode();
                hash ^= 397 * ZipCode.GetHashCode();
                return hash;
            }
        }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.ResultInterfaceGenerator
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial interface IGetSelfishGuyResult
    {
        public global::StrawberryShake.CodeGeneration.CSharp.Integration.RecursiveEntitySelfReference.IGetSelfishGuy_SelfishGuy SelfishGuy { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.ResultInterfaceGenerator
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial interface IGetSelfishGuy_SelfishGuy
    {
        public global::System.String Id { get; }
        public global::System.String FirstName { get; }
        public global::System.String LastName { get; }
        public global::StrawberryShake.CodeGeneration.CSharp.Integration.RecursiveEntitySelfReference.IGetSelfishGuy_SelfishGuy_BestFriend BestFriend { get; }
        public global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.CodeGeneration.CSharp.Integration.RecursiveEntitySelfReference.IGetSelfishGuy_SelfishGuy_Friends>? Friends { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.ResultInterfaceGenerator
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial interface IGetSelfishGuy_SelfishGuy_Person : IGetSelfishGuy_SelfishGuy
    {
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.ResultInterfaceGenerator
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial interface IGetSelfishGuy_SelfishGuy_BestFriend
    {
        public global::System.String FirstName { get; }
        public global::System.String LastName { get; }
        public global::System.Int32 Age { get; }
        public global::System.String Phone { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.ResultInterfaceGenerator
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial interface IGetSelfishGuy_SelfishGuy_BestFriend_Person : IGetSelfishGuy_SelfishGuy_BestFriend
    {
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.ResultInterfaceGenerator
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial interface IGetSelfishGuy_SelfishGuy_Friends
    {
        public global::System.String Id { get; }
        public global::System.String FirstName { get; }
        public global::System.String LastName { get; }
        public global::System.String ZipCode { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.ResultInterfaceGenerator
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial interface IGetSelfishGuy_SelfishGuy_Friends_Person : IGetSelfishGuy_SelfishGuy_Friends
    {
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.OperationDocumentGenerator
    /// <summary>
    /// Represents the operation service of the GetSelfishGuy GraphQL operation
    /// <code>
    /// query GetSelfishGuy {
    ///   selfishGuy {
    ///     __typename
    ///     id
    ///     firstName
    ///     lastName
    ///     bestFriend {
    ///       __typename
    ///       firstName
    ///       lastName
    ///       age
    ///       phone
    ///       ... on Person {
    ///         id
    ///       }
    ///     }
    ///     friends {
    ///       __typename
    ///       id
    ///       firstName
    ///       lastName
    ///       zipCode
    ///       ... on Person {
    ///         id
    ///       }
    ///     }
    ///     ... on Person {
    ///       id
    ///     }
    ///   }
    /// }
    /// </code>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class GetSelfishGuyQueryDocument : global::StrawberryShake.IDocument
    {
        private GetSelfishGuyQueryDocument()
        {
        }

        public static GetSelfishGuyQueryDocument Instance { get; } = new GetSelfishGuyQueryDocument();
        public global::StrawberryShake.OperationKind Kind => global::StrawberryShake.OperationKind.Query;
        public global::System.ReadOnlySpan<global::System.Byte> Body => new global::System.Byte[]
        {
            0x71,
            0x75,
            0x65,
            0x72,
            0x79,
            0x20,
            0x47,
            0x65,
            0x74,
            0x53,
            0x65,
            0x6c,
            0x66,
            0x69,
            0x73,
            0x68,
            0x47,
            0x75,
            0x79,
            0x20,
            0x7b,
            0x20,
            0x73,
            0x65,
            0x6c,
            0x66,
            0x69,
            0x73,
            0x68,
            0x47,
            0x75,
            0x79,
            0x20,
            0x7b,
            0x20,
            0x5f,
            0x5f,
            0x74,
            0x79,
            0x70,
            0x65,
            0x6e,
            0x61,
            0x6d,
            0x65,
            0x20,
            0x69,
            0x64,
            0x20,
            0x66,
            0x69,
            0x72,
            0x73,
            0x74,
            0x4e,
            0x61,
            0x6d,
            0x65,
            0x20,
            0x6c,
            0x61,
            0x73,
            0x74,
            0x4e,
            0x61,
            0x6d,
            0x65,
            0x20,
            0x62,
            0x65,
            0x73,
            0x74,
            0x46,
            0x72,
            0x69,
            0x65,
            0x6e,
            0x64,
            0x20,
            0x7b,
            0x20,
            0x5f,
            0x5f,
            0x74,
            0x79,
            0x70,
            0x65,
            0x6e,
            0x61,
            0x6d,
            0x65,
            0x20,
            0x66,
            0x69,
            0x72,
            0x73,
            0x74,
            0x4e,
            0x61,
            0x6d,
            0x65,
            0x20,
            0x6c,
            0x61,
            0x73,
            0x74,
            0x4e,
            0x61,
            0x6d,
            0x65,
            0x20,
            0x61,
            0x67,
            0x65,
            0x20,
            0x70,
            0x68,
            0x6f,
            0x6e,
            0x65,
            0x20,
            0x2e,
            0x2e,
            0x2e,
            0x20,
            0x6f,
            0x6e,
            0x20,
            0x50,
            0x65,
            0x72,
            0x73,
            0x6f,
            0x6e,
            0x20,
            0x7b,
            0x20,
            0x69,
            0x64,
            0x20,
            0x7d,
            0x20,
            0x7d,
            0x20,
            0x66,
            0x72,
            0x69,
            0x65,
            0x6e,
            0x64,
            0x73,
            0x20,
            0x7b,
            0x20,
            0x5f,
            0x5f,
            0x74,
            0x79,
            0x70,
            0x65,
            0x6e,
            0x61,
            0x6d,
            0x65,
            0x20,
            0x69,
            0x64,
            0x20,
            0x66,
            0x69,
            0x72,
            0x73,
            0x74,
            0x4e,
            0x61,
            0x6d,
            0x65,
            0x20,
            0x6c,
            0x61,
            0x73,
            0x74,
            0x4e,
            0x61,
            0x6d,
            0x65,
            0x20,
            0x7a,
            0x69,
            0x70,
            0x43,
            0x6f,
            0x64,
            0x65,
            0x20,
            0x2e,
            0x2e,
            0x2e,
            0x20,
            0x6f,
            0x6e,
            0x20,
            0x50,
            0x65,
            0x72,
            0x73,
            0x6f,
            0x6e,
            0x20,
            0x7b,
            0x20,
            0x69,
            0x64,
            0x20,
            0x7d,
            0x20,
            0x7d,
            0x20,
            0x2e,
            0x2e,
            0x2e,
            0x20,
            0x6f,
            0x6e,
            0x20,
            0x50,
            0x65,
            0x72,
            0x73,
            0x6f,
            0x6e,
            0x20,
            0x7b,
            0x20,
            0x69,
            0x64,
            0x20,
            0x7d,
            0x20,
            0x7d,
            0x20,
            0x7d
        };
        public global::StrawberryShake.DocumentHash Hash { get; } = new global::StrawberryShake.DocumentHash("sha1Hash", "c7dd849ba27f5c120d9980675ecef0add7d5e838");

        public override global::System.String ToString()
        {
#if NETCOREAPP3_1_OR_GREATER
        return global::System.Text.Encoding.UTF8.GetString(Body);
#else
            return global::System.Text.Encoding.UTF8.GetString(Body.ToArray());
#endif
        }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.OperationServiceGenerator
    /// <summary>
    /// Represents the operation service of the GetSelfishGuy GraphQL operation
    /// <code>
    /// query GetSelfishGuy {
    ///   selfishGuy {
    ///     __typename
    ///     id
    ///     firstName
    ///     lastName
    ///     bestFriend {
    ///       __typename
    ///       firstName
    ///       lastName
    ///       age
    ///       phone
    ///       ... on Person {
    ///         id
    ///       }
    ///     }
    ///     friends {
    ///       __typename
    ///       id
    ///       firstName
    ///       lastName
    ///       zipCode
    ///       ... on Person {
    ///         id
    ///       }
    ///     }
    ///     ... on Person {
    ///       id
    ///     }
    ///   }
    /// }
    /// </code>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class GetSelfishGuyQuery : global::StrawberryShake.CodeGeneration.CSharp.Integration.RecursiveEntitySelfReference.IGetSelfishGuyQuery
    {
        private readonly global::StrawberryShake.IOperationExecutor<IGetSelfishGuyResult> _operationExecutor;
        private readonly global::System.Collections.Immutable.ImmutableArray<global::System.Action<global::StrawberryShake.OperationRequest>> _configure = global::System.Collections.Immutable.ImmutableArray<global::System.Action<global::StrawberryShake.OperationRequest>>.Empty;
        public GetSelfishGuyQuery(global::StrawberryShake.IOperationExecutor<IGetSelfishGuyResult> operationExecutor)
        {
            _operationExecutor = operationExecutor ?? throw new global::System.ArgumentNullException(nameof(operationExecutor));
        }

        private GetSelfishGuyQuery(global::StrawberryShake.IOperationExecutor<IGetSelfishGuyResult> operationExecutor, global::System.Collections.Immutable.ImmutableArray<global::System.Action<global::StrawberryShake.OperationRequest>> configure)
        {
            _operationExecutor = operationExecutor;
            _configure = configure;
        }

        global::System.Type global::StrawberryShake.IOperationRequestFactory.ResultType => typeof(IGetSelfishGuyResult);

        public global::StrawberryShake.CodeGeneration.CSharp.Integration.RecursiveEntitySelfReference.IGetSelfishGuyQuery With(global::System.Action<global::StrawberryShake.OperationRequest> configure)
        {
            return new global::StrawberryShake.CodeGeneration.CSharp.Integration.RecursiveEntitySelfReference.GetSelfishGuyQuery(_operationExecutor, _configure.Add(configure));
        }

        public global::StrawberryShake.CodeGeneration.CSharp.Integration.RecursiveEntitySelfReference.IGetSelfishGuyQuery WithRequestUri(global::System.Uri requestUri)
        {
            return With(r => r.ContextData["StrawberryShake.Transport.Http.HttpConnection.RequestUri"] = requestUri);
        }

        public global::StrawberryShake.CodeGeneration.CSharp.Integration.RecursiveEntitySelfReference.IGetSelfishGuyQuery WithHttpClient(global::System.Net.Http.HttpClient httpClient)
        {
            return With(r => r.ContextData["StrawberryShake.Transport.Http.HttpConnection.HttpClient"] = httpClient);
        }

        public async global::System.Threading.Tasks.Task<global::StrawberryShake.IOperationResult<IGetSelfishGuyResult>> ExecuteAsync(global::System.Threading.CancellationToken cancellationToken = default)
        {
            var request = CreateRequest();
            foreach (var configure in _configure)
            {
                configure(request);
            }

            return await _operationExecutor.ExecuteAsync(request, cancellationToken).ConfigureAwait(false);
        }

        public global::System.IObservable<global::StrawberryShake.IOperationResult<IGetSelfishGuyResult>> Watch(global::StrawberryShake.ExecutionStrategy? strategy = null)
        {
            var request = CreateRequest();
            return _operationExecutor.Watch(request, strategy);
        }

        private global::StrawberryShake.OperationRequest CreateRequest()
        {
            return CreateRequest(null);
        }

        private global::StrawberryShake.OperationRequest CreateRequest(global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object?>? variables)
        {
            return new global::StrawberryShake.OperationRequest(id: GetSelfishGuyQueryDocument.Instance.Hash.Value, name: "GetSelfishGuy", document: GetSelfishGuyQueryDocument.Instance, strategy: global::StrawberryShake.RequestStrategy.Default);
        }

        global::StrawberryShake.OperationRequest global::StrawberryShake.IOperationRequestFactory.Create(global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object?>? variables)
        {
            return CreateRequest();
        }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.OperationServiceInterfaceGenerator
    /// <summary>
    /// Represents the operation service of the GetSelfishGuy GraphQL operation
    /// <code>
    /// query GetSelfishGuy {
    ///   selfishGuy {
    ///     __typename
    ///     id
    ///     firstName
    ///     lastName
    ///     bestFriend {
    ///       __typename
    ///       firstName
    ///       lastName
    ///       age
    ///       phone
    ///       ... on Person {
    ///         id
    ///       }
    ///     }
    ///     friends {
    ///       __typename
    ///       id
    ///       firstName
    ///       lastName
    ///       zipCode
    ///       ... on Person {
    ///         id
    ///       }
    ///     }
    ///     ... on Person {
    ///       id
    ///     }
    ///   }
    /// }
    /// </code>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial interface IGetSelfishGuyQuery : global::StrawberryShake.IOperationRequestFactory
    {
        global::StrawberryShake.CodeGeneration.CSharp.Integration.RecursiveEntitySelfReference.IGetSelfishGuyQuery With(global::System.Action<global::StrawberryShake.OperationRequest> configure);
        global::StrawberryShake.CodeGeneration.CSharp.Integration.RecursiveEntitySelfReference.IGetSelfishGuyQuery WithRequestUri(global::System.Uri requestUri);
        global::StrawberryShake.CodeGeneration.CSharp.Integration.RecursiveEntitySelfReference.IGetSelfishGuyQuery WithHttpClient(global::System.Net.Http.HttpClient httpClient);
        global::System.Threading.Tasks.Task<global::StrawberryShake.IOperationResult<IGetSelfishGuyResult>> ExecuteAsync(global::System.Threading.CancellationToken cancellationToken = default);
        global::System.IObservable<global::StrawberryShake.IOperationResult<IGetSelfishGuyResult>> Watch(global::StrawberryShake.ExecutionStrategy? strategy = null);
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.ClientGenerator
    /// <summary>
    /// Represents the RecursiveEntitySelfReferenceClient GraphQL client
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class RecursiveEntitySelfReferenceClient : global::StrawberryShake.CodeGeneration.CSharp.Integration.RecursiveEntitySelfReference.IRecursiveEntitySelfReferenceClient
    {
        private readonly global::StrawberryShake.CodeGeneration.CSharp.Integration.RecursiveEntitySelfReference.IGetSelfishGuyQuery _getSelfishGuy;
        public RecursiveEntitySelfReferenceClient(global::StrawberryShake.CodeGeneration.CSharp.Integration.RecursiveEntitySelfReference.IGetSelfishGuyQuery getSelfishGuy)
        {
            _getSelfishGuy = getSelfishGuy ?? throw new global::System.ArgumentNullException(nameof(getSelfishGuy));
        }

        public static global::System.String ClientName => "RecursiveEntitySelfReferenceClient";
        public global::StrawberryShake.CodeGeneration.CSharp.Integration.RecursiveEntitySelfReference.IGetSelfishGuyQuery GetSelfishGuy => _getSelfishGuy;
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.ClientInterfaceGenerator
    /// <summary>
    /// Represents the RecursiveEntitySelfReferenceClient GraphQL client
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial interface IRecursiveEntitySelfReferenceClient
    {
        global::StrawberryShake.CodeGeneration.CSharp.Integration.RecursiveEntitySelfReference.IGetSelfishGuyQuery GetSelfishGuy { get; }
    }
}

namespace StrawberryShake.CodeGeneration.CSharp.Integration.RecursiveEntitySelfReference.State
{
    // StrawberryShake.CodeGeneration.CSharp.Generators.EntityTypeGenerator
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "0.0.0.0")]
    public partial class PersonEntity
    {
        public PersonEntity(global::System.String id = default !, global::System.String firstName = default !, global::System.String lastName = default !, global::StrawberryShake.EntityId bestFriend = default !, global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.EntityId>? friends = default !, global::System.Int32 age = default !, global::System.String phone = default !, global::System.String zipCode = default !)
        {
            Id = id;
            FirstName = firstName;
            LastName = lastName;
            BestFriend = bestFriend;
            Friends = friends;
            Age = age;
            Phone = phone;
            ZipCode = zipCode;
        }

        public global::System.String Id { get; }
        public global::System.String FirstName { get; }
        public global::System.String LastName { get; }
        public global::StrawberryShake.EntityId BestFriend { get; }
        public global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.EntityId>? Friends { get; }
        public global::System.Int32 Age { get; }
        public global::System.String Phone { get; }
        public global::System.String ZipCode { get; }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.ResultDataFactoryGenerator
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class GetSelfishGuyResultFactory : global::StrawberryShake.IOperationResultDataFactory<global::StrawberryShake.CodeGeneration.CSharp.Integration.RecursiveEntitySelfReference.GetSelfishGuyResult>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        private readonly global::StrawberryShake.IEntityMapper<global::StrawberryShake.CodeGeneration.CSharp.Integration.RecursiveEntitySelfReference.State.PersonEntity, GetSelfishGuy_SelfishGuy_Person> _getSelfishGuy_SelfishGuy_PersonFromPersonEntityMapper;
        public GetSelfishGuyResultFactory(global::StrawberryShake.IEntityStore entityStore, global::StrawberryShake.IEntityMapper<global::StrawberryShake.CodeGeneration.CSharp.Integration.RecursiveEntitySelfReference.State.PersonEntity, GetSelfishGuy_SelfishGuy_Person> getSelfishGuy_SelfishGuy_PersonFromPersonEntityMapper)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
            _getSelfishGuy_SelfishGuy_PersonFromPersonEntityMapper = getSelfishGuy_SelfishGuy_PersonFromPersonEntityMapper ?? throw new global::System.ArgumentNullException(nameof(getSelfishGuy_SelfishGuy_PersonFromPersonEntityMapper));
        }

        global::System.Type global::StrawberryShake.IOperationResultDataFactory.ResultType => typeof(global::StrawberryShake.CodeGeneration.CSharp.Integration.RecursiveEntitySelfReference.IGetSelfishGuyResult);

        public GetSelfishGuyResult Create(global::StrawberryShake.IOperationResultDataInfo dataInfo, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)
        {
            if (snapshot is null)
            {
                snapshot = _entityStore.CurrentSnapshot;
            }

            if (dataInfo is GetSelfishGuyResultInfo info)
            {
                return new GetSelfishGuyResult(MapNonNullableIGetSelfishGuy_SelfishGuy(info.SelfishGuy, snapshot));
            }

            throw new global::System.ArgumentException("GetSelfishGuyResultInfo expected.");
        }

        private global::StrawberryShake.CodeGeneration.CSharp.Integration.RecursiveEntitySelfReference.IGetSelfishGuy_SelfishGuy MapNonNullableIGetSelfishGuy_SelfishGuy(global::StrawberryShake.EntityId entityId, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            if (entityId.Name.Equals("Person", global::System.StringComparison.Ordinal))
            {
                return _getSelfishGuy_SelfishGuy_PersonFromPersonEntityMapper.Map(snapshot.GetEntity<global::StrawberryShake.CodeGeneration.CSharp.Integration.RecursiveEntitySelfReference.State.PersonEntity>(entityId) ?? throw new global::StrawberryShake.GraphQLClientException());
            }

            throw new global::System.NotSupportedException();
        }

        global::System.Object global::StrawberryShake.IOperationResultDataFactory.Create(global::StrawberryShake.IOperationResultDataInfo dataInfo, global::StrawberryShake.IEntityStoreSnapshot? snapshot)
        {
            return Create(dataInfo, snapshot);
        }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.ResultInfoGenerator
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class GetSelfishGuyResultInfo : global::StrawberryShake.IOperationResultDataInfo
    {
        private readonly global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> _entityIds;
        private readonly global::System.UInt64 _version;
        public GetSelfishGuyResultInfo(global::StrawberryShake.EntityId selfishGuy, global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> entityIds, global::System.UInt64 version)
        {
            SelfishGuy = selfishGuy;
            _entityIds = entityIds ?? throw new global::System.ArgumentNullException(nameof(entityIds));
            _version = version;
        }

        public global::StrawberryShake.EntityId SelfishGuy { get; }
        public global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> EntityIds => _entityIds;
        public global::System.UInt64 Version => _version;

        public global::StrawberryShake.IOperationResultDataInfo WithVersion(global::System.UInt64 version)
        {
            return new GetSelfishGuyResultInfo(SelfishGuy, _entityIds, version);
        }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.JsonResultBuilderGenerator
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class GetSelfishGuyBuilder : global::StrawberryShake.OperationResultBuilder<global::StrawberryShake.CodeGeneration.CSharp.Integration.RecursiveEntitySelfReference.IGetSelfishGuyResult>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        private readonly global::StrawberryShake.IEntityIdSerializer _idSerializer;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::System.String> _stringParser;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.Int32, global::System.Int32> _intParser;
        public GetSelfishGuyBuilder(global::StrawberryShake.IEntityStore entityStore, global::StrawberryShake.IEntityIdSerializer idSerializer, global::StrawberryShake.IOperationResultDataFactory<global::StrawberryShake.CodeGeneration.CSharp.Integration.RecursiveEntitySelfReference.IGetSelfishGuyResult> resultDataFactory, global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
            _idSerializer = idSerializer ?? throw new global::System.ArgumentNullException(nameof(idSerializer));
            ResultDataFactory = resultDataFactory ?? throw new global::System.ArgumentNullException(nameof(resultDataFactory));
            _stringParser = serializerResolver.GetLeafValueParser<global::System.String, global::System.String>("String") ?? throw new global::System.ArgumentException("No serializer for type `String` found.");
            _intParser = serializerResolver.GetLeafValueParser<global::System.Int32, global::System.Int32>("Int") ?? throw new global::System.ArgumentException("No serializer for type `Int` found.");
        }

        protected override global::StrawberryShake.IOperationResultDataFactory<global::StrawberryShake.CodeGeneration.CSharp.Integration.RecursiveEntitySelfReference.IGetSelfishGuyResult> ResultDataFactory { get; }

        protected override global::StrawberryShake.IOperationResultDataInfo BuildData(global::System.Text.Json.JsonElement obj)
        {
            var entityIds = new global::System.Collections.Generic.HashSet<global::StrawberryShake.EntityId>();
            global::StrawberryShake.IEntityStoreSnapshot snapshot = default !;
            global::StrawberryShake.EntityId selfishGuyId = default !;
            _entityStore.Update(session =>
            {
                selfishGuyId = Update_NonNullableIGetSelfishGuy_SelfishGuyEntity(session, global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "selfishGuy"), entityIds);
                snapshot = session.CurrentSnapshot;
            });
            return new GetSelfishGuyResultInfo(selfishGuyId, entityIds, snapshot.Version);
        }

        private global::StrawberryShake.EntityId Update_NonNullableIGetSelfishGuy_SelfishGuyEntity(global::StrawberryShake.IEntityStoreUpdateSession session, global::System.Text.Json.JsonElement? obj, global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            if (obj.Value.ValueKind == global::System.Text.Json.JsonValueKind.Null)
            {
                throw new global::System.ArgumentNullException();
            }

            global::StrawberryShake.EntityId entityId = _idSerializer.Parse(obj.Value);
            entityIds.Add(entityId);
            if (entityId.Name.Equals("Person", global::System.StringComparison.Ordinal))
            {
                if (session.CurrentSnapshot.TryGetEntity(entityId, out global::StrawberryShake.CodeGeneration.CSharp.Integration.RecursiveEntitySelfReference.State.PersonEntity? entity))
                {
                    var arg0 = Deserialize_NonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "id"));
                    var arg1 = Deserialize_NonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "firstName"));
                    var arg2 = Deserialize_NonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "lastName"));
                    var arg3 = Update_NonNullableIGetSelfishGuy_SelfishGuy_BestFriendEntity(session, global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "bestFriend"), entityIds);
                    var arg4 = Update_IGetSelfishGuy_SelfishGuy_FriendsEntityNonNullableArray(session, global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "friends"), entityIds);
                    session.SetEntity(entityId, new global::StrawberryShake.CodeGeneration.CSharp.Integration.RecursiveEntitySelfReference.State.PersonEntity(arg0, arg1, arg2, arg3, arg4, entity.Age, entity.Phone, entity.ZipCode));
                }
                else
                {
                    var arg0 = Deserialize_NonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "id"));
                    var arg1 = Deserialize_NonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "firstName"));
                    var arg2 = Deserialize_NonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "lastName"));
                    var arg3 = Update_NonNullableIGetSelfishGuy_SelfishGuy_BestFriendEntity(session, global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "bestFriend"), entityIds);
                    var arg4 = Update_IGetSelfishGuy_SelfishGuy_FriendsEntityNonNullableArray(session, global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "friends"), entityIds);
                    if (session.CurrentSnapshot.TryGetEntity(entityId, out entity))
                    {
                        session.SetEntity(entityId, new global::StrawberryShake.CodeGeneration.CSharp.Integration.RecursiveEntitySelfReference.State.PersonEntity(arg0, arg1, arg2, arg3, arg4, entity.Age, entity.Phone, entity.ZipCode));
                    }
                    else
                    {
                        session.SetEntity(entityId, new global::StrawberryShake.CodeGeneration.CSharp.Integration.RecursiveEntitySelfReference.State.PersonEntity(arg0, arg1, arg2, arg3, arg4, default !, default !, default !));
                    }
                }

                return entityId;
            }

            throw new global::System.NotSupportedException();
        }

        private global::System.String Deserialize_NonNullableString(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            if (obj.Value.ValueKind == global::System.Text.Json.JsonValueKind.Null)
            {
                throw new global::System.ArgumentNullException();
            }

            return _stringParser.Parse(obj.Value.GetString()!);
        }

        private global::StrawberryShake.EntityId Update_NonNullableIGetSelfishGuy_SelfishGuy_BestFriendEntity(global::StrawberryShake.IEntityStoreUpdateSession session, global::System.Text.Json.JsonElement? obj, global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            if (obj.Value.ValueKind == global::System.Text.Json.JsonValueKind.Null)
            {
                throw new global::System.ArgumentNullException();
            }

            global::StrawberryShake.EntityId entityId = _idSerializer.Parse(obj.Value);
            entityIds.Add(entityId);
            if (entityId.Name.Equals("Person", global::System.StringComparison.Ordinal))
            {
                if (session.CurrentSnapshot.TryGetEntity(entityId, out global::StrawberryShake.CodeGeneration.CSharp.Integration.RecursiveEntitySelfReference.State.PersonEntity? entity))
                {
                    var arg0 = Deserialize_NonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "firstName"));
                    var arg1 = Deserialize_NonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "lastName"));
                    var arg2 = Deserialize_NonNullableInt32(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "age"));
                    var arg3 = Deserialize_NonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "phone"));
                    session.SetEntity(entityId, new global::StrawberryShake.CodeGeneration.CSharp.Integration.RecursiveEntitySelfReference.State.PersonEntity(entity.Id, arg0, arg1, entity.BestFriend, entity.Friends, arg2, arg3, entity.ZipCode));
                }
                else
                {
                    var arg0 = Deserialize_NonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "firstName"));
                    var arg1 = Deserialize_NonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "lastName"));
                    var arg2 = Deserialize_NonNullableInt32(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "age"));
                    var arg3 = Deserialize_NonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "phone"));
                    if (session.CurrentSnapshot.TryGetEntity(entityId, out entity))
                    {
                        session.SetEntity(entityId, new global::StrawberryShake.CodeGeneration.CSharp.Integration.RecursiveEntitySelfReference.State.PersonEntity(entity.Id, arg0, arg1, entity.BestFriend, entity.Friends, arg2, arg3, entity.ZipCode));
                    }
                    else
                    {
                        session.SetEntity(entityId, new global::StrawberryShake.CodeGeneration.CSharp.Integration.RecursiveEntitySelfReference.State.PersonEntity(default !, arg0, arg1, default !, default !, arg2, arg3, default !));
                    }
                }

                return entityId;
            }

            throw new global::System.NotSupportedException();
        }

        private global::System.Int32 Deserialize_NonNullableInt32(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            if (obj.Value.ValueKind == global::System.Text.Json.JsonValueKind.Null)
            {
                throw new global::System.ArgumentNullException();
            }

            return _intParser.Parse(obj.Value.GetInt32()!);
        }

        private global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.EntityId>? Update_IGetSelfishGuy_SelfishGuy_FriendsEntityNonNullableArray(global::StrawberryShake.IEntityStoreUpdateSession session, global::System.Text.Json.JsonElement? obj, global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (!obj.HasValue)
            {
                return null;
            }

            if (obj.Value.ValueKind == global::System.Text.Json.JsonValueKind.Null)
            {
                return null;
            }

            var persons = new global::System.Collections.Generic.List<global::StrawberryShake.EntityId>();
            foreach (global::System.Text.Json.JsonElement child in obj.Value.EnumerateArray())
            {
                persons.Add(Update_NonNullableIGetSelfishGuy_SelfishGuy_FriendsEntity(session, child, entityIds));
            }

            return persons;
        }

        private global::StrawberryShake.EntityId Update_NonNullableIGetSelfishGuy_SelfishGuy_FriendsEntity(global::StrawberryShake.IEntityStoreUpdateSession session, global::System.Text.Json.JsonElement? obj, global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            if (obj.Value.ValueKind == global::System.Text.Json.JsonValueKind.Null)
            {
                throw new global::System.ArgumentNullException();
            }

            global::StrawberryShake.EntityId entityId = _idSerializer.Parse(obj.Value);
            entityIds.Add(entityId);
            if (entityId.Name.Equals("Person", global::System.StringComparison.Ordinal))
            {
                if (session.CurrentSnapshot.TryGetEntity(entityId, out global::StrawberryShake.CodeGeneration.CSharp.Integration.RecursiveEntitySelfReference.State.PersonEntity? entity))
                {
                    var arg0 = Deserialize_NonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "id"));
                    var arg1 = Deserialize_NonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "firstName"));
                    var arg2 = Deserialize_NonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "lastName"));
                    var arg3 = Deserialize_NonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "zipCode"));
                    session.SetEntity(entityId, new global::StrawberryShake.CodeGeneration.CSharp.Integration.RecursiveEntitySelfReference.State.PersonEntity(arg0, arg1, arg2, entity.BestFriend, entity.Friends, entity.Age, entity.Phone, arg3));
                }
                else
                {
                    var arg0 = Deserialize_NonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "id"));
                    var arg1 = Deserialize_NonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "firstName"));
                    var arg2 = Deserialize_NonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "lastName"));
                    var arg3 = Deserialize_NonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "zipCode"));
                    if (session.CurrentSnapshot.TryGetEntity(entityId, out entity))
                    {
                        session.SetEntity(entityId, new global::StrawberryShake.CodeGeneration.CSharp.Integration.RecursiveEntitySelfReference.State.PersonEntity(arg0, arg1, arg2, entity.BestFriend, entity.Friends, entity.Age, entity.Phone, arg3));
                    }
                    else
                    {
                        session.SetEntity(entityId, new global::StrawberryShake.CodeGeneration.CSharp.Integration.RecursiveEntitySelfReference.State.PersonEntity(arg0, arg1, arg2, default !, default !, default !, default !, arg3));
                    }
                }

                return entityId;
            }

            throw new global::System.NotSupportedException();
        }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.ResultFromEntityTypeMapperGenerator
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class GetSelfishGuy_SelfishGuy_PersonFromPersonEntityMapper : global::StrawberryShake.IEntityMapper<global::StrawberryShake.CodeGeneration.CSharp.Integration.RecursiveEntitySelfReference.State.PersonEntity, GetSelfishGuy_SelfishGuy_Person>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        private readonly global::StrawberryShake.IEntityMapper<global::StrawberryShake.CodeGeneration.CSharp.Integration.RecursiveEntitySelfReference.State.PersonEntity, GetSelfishGuy_SelfishGuy_BestFriend_Person> _getSelfishGuy_SelfishGuy_BestFriend_PersonFromPersonEntityMapper;
        private readonly global::StrawberryShake.IEntityMapper<global::StrawberryShake.CodeGeneration.CSharp.Integration.RecursiveEntitySelfReference.State.PersonEntity, GetSelfishGuy_SelfishGuy_Friends_Person> _getSelfishGuy_SelfishGuy_Friends_PersonFromPersonEntityMapper;
        public GetSelfishGuy_SelfishGuy_PersonFromPersonEntityMapper(global::StrawberryShake.IEntityStore entityStore, global::StrawberryShake.IEntityMapper<global::StrawberryShake.CodeGeneration.CSharp.Integration.RecursiveEntitySelfReference.State.PersonEntity, GetSelfishGuy_SelfishGuy_BestFriend_Person> getSelfishGuy_SelfishGuy_BestFriend_PersonFromPersonEntityMapper, global::StrawberryShake.IEntityMapper<global::StrawberryShake.CodeGeneration.CSharp.Integration.RecursiveEntitySelfReference.State.PersonEntity, GetSelfishGuy_SelfishGuy_Friends_Person> getSelfishGuy_SelfishGuy_Friends_PersonFromPersonEntityMapper)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
            _getSelfishGuy_SelfishGuy_BestFriend_PersonFromPersonEntityMapper = getSelfishGuy_SelfishGuy_BestFriend_PersonFromPersonEntityMapper ?? throw new global::System.ArgumentNullException(nameof(getSelfishGuy_SelfishGuy_BestFriend_PersonFromPersonEntityMapper));
            _getSelfishGuy_SelfishGuy_Friends_PersonFromPersonEntityMapper = getSelfishGuy_SelfishGuy_Friends_PersonFromPersonEntityMapper ?? throw new global::System.ArgumentNullException(nameof(getSelfishGuy_SelfishGuy_Friends_PersonFromPersonEntityMapper));
        }

        public GetSelfishGuy_SelfishGuy_Person Map(global::StrawberryShake.CodeGeneration.CSharp.Integration.RecursiveEntitySelfReference.State.PersonEntity entity, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)
        {
            if (snapshot is null)
            {
                snapshot = _entityStore.CurrentSnapshot;
            }

            return new GetSelfishGuy_SelfishGuy_Person(entity.Id, entity.FirstName, entity.LastName, MapNonNullableIGetSelfishGuy_SelfishGuy_BestFriend(entity.BestFriend, snapshot), MapIGetSelfishGuy_SelfishGuy_FriendsNonNullableArray(entity.Friends, snapshot));
        }

        private global::StrawberryShake.CodeGeneration.CSharp.Integration.RecursiveEntitySelfReference.IGetSelfishGuy_SelfishGuy_BestFriend MapNonNullableIGetSelfishGuy_SelfishGuy_BestFriend(global::StrawberryShake.EntityId entityId, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            if (entityId.Name.Equals("Person", global::System.StringComparison.Ordinal))
            {
                return _getSelfishGuy_SelfishGuy_BestFriend_PersonFromPersonEntityMapper.Map(snapshot.GetEntity<global::StrawberryShake.CodeGeneration.CSharp.Integration.RecursiveEntitySelfReference.State.PersonEntity>(entityId) ?? throw new global::StrawberryShake.GraphQLClientException());
            }

            throw new global::System.NotSupportedException();
        }

        private global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.CodeGeneration.CSharp.Integration.RecursiveEntitySelfReference.IGetSelfishGuy_SelfishGuy_Friends>? MapIGetSelfishGuy_SelfishGuy_FriendsNonNullableArray(global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.EntityId>? list, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            if (list is null)
            {
                return null;
            }

            var persons = new global::System.Collections.Generic.List<global::StrawberryShake.CodeGeneration.CSharp.Integration.RecursiveEntitySelfReference.IGetSelfishGuy_SelfishGuy_Friends>();
            foreach (global::StrawberryShake.EntityId child in list)
            {
                persons.Add(MapNonNullableIGetSelfishGuy_SelfishGuy_Friends(child, snapshot));
            }

            return persons;
        }

        private global::StrawberryShake.CodeGeneration.CSharp.Integration.RecursiveEntitySelfReference.IGetSelfishGuy_SelfishGuy_Friends MapNonNullableIGetSelfishGuy_SelfishGuy_Friends(global::StrawberryShake.EntityId entityId, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            if (entityId.Name.Equals("Person", global::System.StringComparison.Ordinal))
            {
                return _getSelfishGuy_SelfishGuy_Friends_PersonFromPersonEntityMapper.Map(snapshot.GetEntity<global::StrawberryShake.CodeGeneration.CSharp.Integration.RecursiveEntitySelfReference.State.PersonEntity>(entityId) ?? throw new global::StrawberryShake.GraphQLClientException());
            }

            throw new global::System.NotSupportedException();
        }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.ResultFromEntityTypeMapperGenerator
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class GetSelfishGuy_SelfishGuy_BestFriend_PersonFromPersonEntityMapper : global::StrawberryShake.IEntityMapper<global::StrawberryShake.CodeGeneration.CSharp.Integration.RecursiveEntitySelfReference.State.PersonEntity, GetSelfishGuy_SelfishGuy_BestFriend_Person>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        public GetSelfishGuy_SelfishGuy_BestFriend_PersonFromPersonEntityMapper(global::StrawberryShake.IEntityStore entityStore)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
        }

        public GetSelfishGuy_SelfishGuy_BestFriend_Person Map(global::StrawberryShake.CodeGeneration.CSharp.Integration.RecursiveEntitySelfReference.State.PersonEntity entity, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)
        {
            if (snapshot is null)
            {
                snapshot = _entityStore.CurrentSnapshot;
            }

            return new GetSelfishGuy_SelfishGuy_BestFriend_Person(entity.FirstName, entity.LastName, entity.Age, entity.Phone);
        }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.ResultFromEntityTypeMapperGenerator
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class GetSelfishGuy_SelfishGuy_Friends_PersonFromPersonEntityMapper : global::StrawberryShake.IEntityMapper<global::StrawberryShake.CodeGeneration.CSharp.Integration.RecursiveEntitySelfReference.State.PersonEntity, GetSelfishGuy_SelfishGuy_Friends_Person>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        public GetSelfishGuy_SelfishGuy_Friends_PersonFromPersonEntityMapper(global::StrawberryShake.IEntityStore entityStore)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
        }

        public GetSelfishGuy_SelfishGuy_Friends_Person Map(global::StrawberryShake.CodeGeneration.CSharp.Integration.RecursiveEntitySelfReference.State.PersonEntity entity, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)
        {
            if (snapshot is null)
            {
                snapshot = _entityStore.CurrentSnapshot;
            }

            return new GetSelfishGuy_SelfishGuy_Friends_Person(entity.Id, entity.FirstName, entity.LastName, entity.ZipCode);
        }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.EntityIdFactoryGenerator
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class RecursiveEntitySelfReferenceClientEntityIdFactory : global::StrawberryShake.IEntityIdSerializer
    {
        private static readonly global::System.Text.Json.JsonWriterOptions _options = new global::System.Text.Json.JsonWriterOptions()
        {
            Indented = false
        };
        public global::StrawberryShake.EntityId Parse(global::System.Text.Json.JsonElement obj)
        {
            global::System.String __typename = obj.GetProperty("__typename").GetString()!;
            return __typename switch
            {
                "Person" => ParsePersonEntityId(obj, __typename),
                _ => throw new global::System.NotSupportedException()};
        }

        public global::System.String Format(global::StrawberryShake.EntityId entityId)
        {
            return entityId.Name switch
            {
                "Person" => FormatPersonEntityId(entityId),
                _ => throw new global::System.NotSupportedException()};
        }

        private global::StrawberryShake.EntityId ParsePersonEntityId(global::System.Text.Json.JsonElement obj, global::System.String type)
        {
            return new global::StrawberryShake.EntityId(type, obj.GetProperty("id").GetString()!);
        }

        private global::System.String FormatPersonEntityId(global::StrawberryShake.EntityId entityId)
        {
            using var writer = new global::StrawberryShake.Internal.ArrayWriter();
            using var jsonWriter = new global::System.Text.Json.Utf8JsonWriter(writer, _options);
            jsonWriter.WriteStartObject();
            jsonWriter.WriteString("__typename", entityId.Name);
            jsonWriter.WriteString("id", (global::System.String)entityId.Value);
            jsonWriter.WriteEndObject();
            jsonWriter.Flush();
            return global::System.Text.Encoding.UTF8.GetString(writer.GetInternalBuffer(), 0, writer.Length);
        }
    }

    // StrawberryShake.CodeGeneration.CSharp.Generators.StoreAccessorGenerator
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class RecursiveEntitySelfReferenceClientStoreAccessor : global::StrawberryShake.StoreAccessor
    {
        public RecursiveEntitySelfReferenceClientStoreAccessor(global::StrawberryShake.IOperationStore operationStore, global::StrawberryShake.IEntityStore entityStore, global::StrawberryShake.IEntityIdSerializer entityIdSerializer, global::System.Collections.Generic.IEnumerable<global::StrawberryShake.IOperationRequestFactory> requestFactories, global::System.Collections.Generic.IEnumerable<global::StrawberryShake.IOperationResultDataFactory> resultDataFactories) : base(operationStore, entityStore, entityIdSerializer, requestFactories, resultDataFactories)
        {
        }
    }
}


