#nullable enable
abstract StrawberryShake.Tools.CommandHandler<T>.ExecuteAsync(T arguments, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<int>!
const StrawberryShake.Tools.WellKnownDirectories.Generated = "Generated" -> string!
const StrawberryShake.Tools.WellKnownFiles.Config = ".graphqlrc.json" -> string!
override StrawberryShake.Tools.DownloadCommandHandler.ExecuteAsync(StrawberryShake.Tools.DownloadCommandArguments! arguments, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<int>!
override StrawberryShake.Tools.InitCommandHandler.ExecuteAsync(StrawberryShake.Tools.InitCommandArguments! arguments, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<int>!
override StrawberryShake.Tools.UpdateCommandHandler.ExecuteAsync(StrawberryShake.Tools.UpdateCommandArguments! arguments, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<int>!
static StrawberryShake.Tools.CommandTools.AddHelp<T>(this McMaster.Extensions.CommandLineUtils.CommandLineApplication! app) -> void
static StrawberryShake.Tools.CommandTools.CreateHandler<T>(bool jsonOutput) -> T!
static StrawberryShake.Tools.CommandTools.CreateHandler<T>(McMaster.Extensions.CommandLineUtils.CommandOption! jsonArg) -> T!
static StrawberryShake.Tools.CommandTools.Write(this HotChocolate.IError! error) -> void
static StrawberryShake.Tools.CommandTools.Write(this HotChocolate.IError! error, System.Text.StringBuilder! message) -> void
static StrawberryShake.Tools.CommandTools.Write(this System.Collections.Generic.IEnumerable<HotChocolate.IError!>! errors) -> void
static StrawberryShake.Tools.DownloadCommand.Create() -> McMaster.Extensions.CommandLineUtils.CommandLineApplication!
static StrawberryShake.Tools.InitCommand.Create() -> McMaster.Extensions.CommandLineUtils.CommandLineApplication!
static StrawberryShake.Tools.IntrospectionHelper.DownloadSchemaAsync(System.Net.Http.HttpClient! client, StrawberryShake.Tools.IFileSystem! fileSystem, StrawberryShake.Tools.IActivity! activity, string! fileName, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<bool>!
static StrawberryShake.Tools.OAuth.CommandLineApplicationExtensions.AddAuthArguments(this McMaster.Extensions.CommandLineUtils.CommandLineApplication! app) -> StrawberryShake.Tools.OAuth.AuthArguments!
static StrawberryShake.Tools.OAuth.TokenClient.GetTokenAsync(string! tokenEndpoint, string! clientId, string! clientSecret, System.Collections.Generic.IEnumerable<string!>! scopes, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<string!>!
static StrawberryShake.Tools.UpdateCommand.Create() -> McMaster.Extensions.CommandLineUtils.CommandLineApplication!
StrawberryShake.Tools.CommandHandler<T>
StrawberryShake.Tools.CommandHandler<T>.CommandHandler() -> void
StrawberryShake.Tools.CommandTools
StrawberryShake.Tools.CompileHelpTextGenerator
StrawberryShake.Tools.CompileHelpTextGenerator.CompileHelpTextGenerator() -> void
StrawberryShake.Tools.CompileHelpTextGenerator.Generate(McMaster.Extensions.CommandLineUtils.CommandLineApplication! application, System.IO.TextWriter! output) -> void
StrawberryShake.Tools.DefaultConsoleOutput
StrawberryShake.Tools.DefaultConsoleOutput.DefaultConsoleOutput() -> void
StrawberryShake.Tools.DefaultConsoleOutput.HasErrors.get -> bool
StrawberryShake.Tools.DefaultConsoleOutput.WriteActivity(string! text, string? path = null) -> StrawberryShake.Tools.IActivity!
StrawberryShake.Tools.DefaultConsoleOutput.WriteCommand() -> System.IDisposable!
StrawberryShake.Tools.DefaultConsoleOutput.WriteFileCreated(string! fileName) -> void
StrawberryShake.Tools.DefaultConsoleOutputActivity
StrawberryShake.Tools.DefaultConsoleOutputActivity.DefaultConsoleOutputActivity(string! activityText, string? path, System.Action! errorReceived) -> void
StrawberryShake.Tools.DefaultConsoleOutputActivity.Dispose() -> void
StrawberryShake.Tools.DefaultConsoleOutputActivity.WriteError(HotChocolate.IError! error) -> void
StrawberryShake.Tools.DefaultConsoleOutputActivity.WriteErrors(System.Collections.Generic.IEnumerable<HotChocolate.IError!>! errors) -> void
StrawberryShake.Tools.DefaultFileSystem
StrawberryShake.Tools.DefaultFileSystem.CombinePath(params string![]! paths) -> string!
StrawberryShake.Tools.DefaultFileSystem.CurrentDirectory.get -> string!
StrawberryShake.Tools.DefaultFileSystem.DefaultFileSystem() -> void
StrawberryShake.Tools.DefaultFileSystem.EnsureDirectoryExists(string! path) -> void
StrawberryShake.Tools.DefaultFileSystem.FileExists(string! path) -> bool
StrawberryShake.Tools.DefaultFileSystem.GetClientDirectories(string! path) -> System.Collections.Generic.IEnumerable<string!>!
StrawberryShake.Tools.DefaultFileSystem.GetDirectoryName(string! path) -> string?
StrawberryShake.Tools.DefaultFileSystem.GetFileName(string! path) -> string!
StrawberryShake.Tools.DefaultFileSystem.GetFileNameWithoutExtension(string! path) -> string!
StrawberryShake.Tools.DefaultFileSystem.GetGraphQLFiles(string! path) -> System.Collections.Generic.IEnumerable<string!>!
StrawberryShake.Tools.DefaultFileSystem.ReadAllBytesAsync(string! fileName) -> System.Threading.Tasks.Task<byte[]!>!
StrawberryShake.Tools.DefaultFileSystem.ResolvePath(string? path, string? fileName) -> string!
StrawberryShake.Tools.DefaultFileSystem.WriteTextAsync(string! fileName, string! text) -> System.Threading.Tasks.Task!
StrawberryShake.Tools.DefaultFileSystem.WriteToAsync(string! fileName, System.Func<System.IO.Stream!, System.Threading.Tasks.Task!>! write) -> System.Threading.Tasks.Task!
StrawberryShake.Tools.DefaultHttpClientFactory
StrawberryShake.Tools.DefaultHttpClientFactory.Create(System.Uri! uri, string? token, string? scheme) -> System.Net.Http.HttpClient!
StrawberryShake.Tools.DefaultHttpClientFactory.DefaultHttpClientFactory() -> void
StrawberryShake.Tools.DownloadCommand
StrawberryShake.Tools.DownloadCommandArguments
StrawberryShake.Tools.DownloadCommandArguments.AuthArguments.get -> StrawberryShake.Tools.OAuth.AuthArguments!
StrawberryShake.Tools.DownloadCommandArguments.DownloadCommandArguments(McMaster.Extensions.CommandLineUtils.CommandArgument! uri, McMaster.Extensions.CommandLineUtils.CommandOption! fileName, StrawberryShake.Tools.OAuth.AuthArguments! authArguments) -> void
StrawberryShake.Tools.DownloadCommandArguments.FileName.get -> McMaster.Extensions.CommandLineUtils.CommandOption!
StrawberryShake.Tools.DownloadCommandArguments.Uri.get -> McMaster.Extensions.CommandLineUtils.CommandArgument!
StrawberryShake.Tools.DownloadCommandContext
StrawberryShake.Tools.DownloadCommandContext.DownloadCommandContext(System.Uri! uri, string! fileName, string? token, string? scheme) -> void
StrawberryShake.Tools.DownloadCommandContext.FileName.get -> string!
StrawberryShake.Tools.DownloadCommandContext.Scheme.get -> string?
StrawberryShake.Tools.DownloadCommandContext.Token.get -> string?
StrawberryShake.Tools.DownloadCommandContext.Uri.get -> System.Uri!
StrawberryShake.Tools.DownloadCommandHandler
StrawberryShake.Tools.DownloadCommandHandler.DownloadCommandHandler(StrawberryShake.Tools.IFileSystem! fileSystem, StrawberryShake.Tools.IHttpClientFactory! httpClientFactory, StrawberryShake.Tools.IConsoleOutput! output) -> void
StrawberryShake.Tools.DownloadCommandHandler.FileSystem.get -> StrawberryShake.Tools.IFileSystem!
StrawberryShake.Tools.DownloadCommandHandler.HttpClientFactory.get -> StrawberryShake.Tools.IHttpClientFactory!
StrawberryShake.Tools.DownloadCommandHandler.Output.get -> StrawberryShake.Tools.IConsoleOutput!
StrawberryShake.Tools.GenerateHelpTextGenerator
StrawberryShake.Tools.GenerateHelpTextGenerator.Generate(McMaster.Extensions.CommandLineUtils.CommandLineApplication! application, System.IO.TextWriter! output) -> void
StrawberryShake.Tools.GenerateHelpTextGenerator.GenerateHelpTextGenerator() -> void
StrawberryShake.Tools.IActivity
StrawberryShake.Tools.IActivity.WriteError(HotChocolate.IError! error) -> void
StrawberryShake.Tools.IActivity.WriteErrors(System.Collections.Generic.IEnumerable<HotChocolate.IError!>! error) -> void
StrawberryShake.Tools.ICommand
StrawberryShake.Tools.ICommand.OnExecute() -> System.Threading.Tasks.Task<int>!
StrawberryShake.Tools.ICompileContext
StrawberryShake.Tools.ICompileContext.Path.get -> string!
StrawberryShake.Tools.ICompileContext.Search.get -> bool
StrawberryShake.Tools.IConsoleOutput
StrawberryShake.Tools.IConsoleOutput.HasErrors.get -> bool
StrawberryShake.Tools.IConsoleOutput.WriteActivity(string! text, string? path = null) -> StrawberryShake.Tools.IActivity!
StrawberryShake.Tools.IConsoleOutput.WriteCommand() -> System.IDisposable!
StrawberryShake.Tools.IConsoleOutput.WriteFileCreated(string! fileName) -> void
StrawberryShake.Tools.IFileSystem
StrawberryShake.Tools.IFileSystem.CombinePath(params string![]! paths) -> string!
StrawberryShake.Tools.IFileSystem.CurrentDirectory.get -> string!
StrawberryShake.Tools.IFileSystem.EnsureDirectoryExists(string! path) -> void
StrawberryShake.Tools.IFileSystem.FileExists(string! path) -> bool
StrawberryShake.Tools.IFileSystem.GetClientDirectories(string! path) -> System.Collections.Generic.IEnumerable<string!>!
StrawberryShake.Tools.IFileSystem.GetDirectoryName(string! path) -> string?
StrawberryShake.Tools.IFileSystem.GetFileName(string! path) -> string!
StrawberryShake.Tools.IFileSystem.GetFileNameWithoutExtension(string! path) -> string!
StrawberryShake.Tools.IFileSystem.GetGraphQLFiles(string! path) -> System.Collections.Generic.IEnumerable<string!>!
StrawberryShake.Tools.IFileSystem.ReadAllBytesAsync(string! fileName) -> System.Threading.Tasks.Task<byte[]!>!
StrawberryShake.Tools.IFileSystem.ResolvePath(string? path, string? fileName = null) -> string!
StrawberryShake.Tools.IFileSystem.WriteTextAsync(string! fileName, string! text) -> System.Threading.Tasks.Task!
StrawberryShake.Tools.IFileSystem.WriteToAsync(string! fileName, System.Func<System.IO.Stream!, System.Threading.Tasks.Task!>! write) -> System.Threading.Tasks.Task!
StrawberryShake.Tools.IHttpClientFactory
StrawberryShake.Tools.IHttpClientFactory.Create(System.Uri! uri, string? token, string? scheme) -> System.Net.Http.HttpClient!
StrawberryShake.Tools.InitCommand
StrawberryShake.Tools.InitCommandArguments
StrawberryShake.Tools.InitCommandArguments.AuthArguments.get -> StrawberryShake.Tools.OAuth.AuthArguments!
StrawberryShake.Tools.InitCommandArguments.InitCommandArguments(McMaster.Extensions.CommandLineUtils.CommandArgument! uri, McMaster.Extensions.CommandLineUtils.CommandOption! path, McMaster.Extensions.CommandLineUtils.CommandOption! name, StrawberryShake.Tools.OAuth.AuthArguments! authArguments) -> void
StrawberryShake.Tools.InitCommandArguments.Name.get -> McMaster.Extensions.CommandLineUtils.CommandOption!
StrawberryShake.Tools.InitCommandArguments.Path.get -> McMaster.Extensions.CommandLineUtils.CommandOption!
StrawberryShake.Tools.InitCommandArguments.Uri.get -> McMaster.Extensions.CommandLineUtils.CommandArgument!
StrawberryShake.Tools.InitCommandContext
StrawberryShake.Tools.InitCommandContext.ClientName.get -> string!
StrawberryShake.Tools.InitCommandContext.ConfigFileName.get -> string!
StrawberryShake.Tools.InitCommandContext.CustomNamespace.get -> string?
StrawberryShake.Tools.InitCommandContext.CustomNamespace.set -> void
StrawberryShake.Tools.InitCommandContext.InitCommandContext(string! name, string! path, System.Uri! uri, string? token, string? scheme) -> void
StrawberryShake.Tools.InitCommandContext.Path.get -> string!
StrawberryShake.Tools.InitCommandContext.SchemaExtensionFileName.get -> string!
StrawberryShake.Tools.InitCommandContext.SchemaFileName.get -> string!
StrawberryShake.Tools.InitCommandContext.SchemaName.get -> string!
StrawberryShake.Tools.InitCommandContext.Scheme.get -> string?
StrawberryShake.Tools.InitCommandContext.Token.get -> string?
StrawberryShake.Tools.InitCommandContext.Uri.get -> System.Uri?
StrawberryShake.Tools.InitCommandContext.UseDependencyInjection.get -> bool
StrawberryShake.Tools.InitCommandContext.UseDependencyInjection.set -> void
StrawberryShake.Tools.InitCommandHandler
StrawberryShake.Tools.InitCommandHandler.FileSystem.get -> StrawberryShake.Tools.IFileSystem!
StrawberryShake.Tools.InitCommandHandler.HttpClientFactory.get -> StrawberryShake.Tools.IHttpClientFactory!
StrawberryShake.Tools.InitCommandHandler.InitCommandHandler(StrawberryShake.Tools.IFileSystem! fileSystem, StrawberryShake.Tools.IHttpClientFactory! httpClientFactory, StrawberryShake.Tools.IConsoleOutput! output) -> void
StrawberryShake.Tools.InitCommandHandler.Output.get -> StrawberryShake.Tools.IConsoleOutput!
StrawberryShake.Tools.InitHelpTextGenerator
StrawberryShake.Tools.InitHelpTextGenerator.Generate(McMaster.Extensions.CommandLineUtils.CommandLineApplication! application, System.IO.TextWriter! output) -> void
StrawberryShake.Tools.InitHelpTextGenerator.InitHelpTextGenerator() -> void
StrawberryShake.Tools.IntrospectionHelper
StrawberryShake.Tools.IntrospectionHelper.IntrospectionHelper() -> void
StrawberryShake.Tools.JsonConsoleOutput
StrawberryShake.Tools.JsonConsoleOutput.HasErrors.get -> bool
StrawberryShake.Tools.JsonConsoleOutput.JsonConsoleOutput() -> void
StrawberryShake.Tools.JsonConsoleOutput.WriteActivity(string! text, string? path = null) -> StrawberryShake.Tools.IActivity!
StrawberryShake.Tools.JsonConsoleOutput.WriteCommand() -> System.IDisposable!
StrawberryShake.Tools.JsonConsoleOutput.WriteFileCreated(string! fileName) -> void
StrawberryShake.Tools.JsonConsoleOutputActivity
StrawberryShake.Tools.JsonConsoleOutputActivity.Dispose() -> void
StrawberryShake.Tools.JsonConsoleOutputActivity.JsonConsoleOutputActivity(StrawberryShake.Tools.JsonConsoleOutputData! data, string! activityText, string? path, System.Action! errorReceived) -> void
StrawberryShake.Tools.JsonConsoleOutputActivity.WriteError(HotChocolate.IError! error) -> void
StrawberryShake.Tools.JsonConsoleOutputActivity.WriteErrors(System.Collections.Generic.IEnumerable<HotChocolate.IError!>! errors) -> void
StrawberryShake.Tools.JsonConsoleOutputActivityData
StrawberryShake.Tools.JsonConsoleOutputActivityData.JsonConsoleOutputActivityData(string! text, string? path, System.TimeSpan time) -> void
StrawberryShake.Tools.JsonConsoleOutputActivityData.Path.get -> string?
StrawberryShake.Tools.JsonConsoleOutputActivityData.Text.get -> string!
StrawberryShake.Tools.JsonConsoleOutputActivityData.Time.get -> System.TimeSpan
StrawberryShake.Tools.JsonConsoleOutputCommand
StrawberryShake.Tools.JsonConsoleOutputCommand.Dispose() -> void
StrawberryShake.Tools.JsonConsoleOutputCommand.JsonConsoleOutputCommand(StrawberryShake.Tools.JsonConsoleOutputData! data) -> void
StrawberryShake.Tools.JsonConsoleOutputData
StrawberryShake.Tools.JsonConsoleOutputData.Activities.get -> System.Collections.Generic.List<StrawberryShake.Tools.JsonConsoleOutputActivityData!>!
StrawberryShake.Tools.JsonConsoleOutputData.CreatedFiles.get -> System.Collections.Generic.List<string!>!
StrawberryShake.Tools.JsonConsoleOutputData.Errors.get -> System.Collections.Generic.List<StrawberryShake.Tools.JsonConsoleOutputErrorData!>!
StrawberryShake.Tools.JsonConsoleOutputData.JsonConsoleOutputData() -> void
StrawberryShake.Tools.JsonConsoleOutputErrorData
StrawberryShake.Tools.JsonConsoleOutputErrorData.Code.get -> string!
StrawberryShake.Tools.JsonConsoleOutputErrorData.FileName.get -> string?
StrawberryShake.Tools.JsonConsoleOutputErrorData.JsonConsoleOutputErrorData(HotChocolate.IError! error) -> void
StrawberryShake.Tools.JsonConsoleOutputErrorData.Location.get -> HotChocolate.Location?
StrawberryShake.Tools.JsonConsoleOutputErrorData.Message.get -> string!
StrawberryShake.Tools.OAuth.AccessToken
StrawberryShake.Tools.OAuth.AccessToken.AccessToken(string! token, string? scheme) -> void
StrawberryShake.Tools.OAuth.AccessToken.Scheme.get -> string?
StrawberryShake.Tools.OAuth.AccessToken.Token.get -> string!
StrawberryShake.Tools.OAuth.AuthArguments
StrawberryShake.Tools.OAuth.AuthArguments.AuthArguments(McMaster.Extensions.CommandLineUtils.CommandOption! token, McMaster.Extensions.CommandLineUtils.CommandOption! scheme, McMaster.Extensions.CommandLineUtils.CommandOption! tokenEndpoint, McMaster.Extensions.CommandLineUtils.CommandOption! clientId, McMaster.Extensions.CommandLineUtils.CommandOption! clientSecret, McMaster.Extensions.CommandLineUtils.CommandOption! scopes, McMaster.Extensions.CommandLineUtils.CommandOption! noScheme) -> void
StrawberryShake.Tools.OAuth.AuthArguments.ClientId.get -> McMaster.Extensions.CommandLineUtils.CommandOption!
StrawberryShake.Tools.OAuth.AuthArguments.ClientSecret.get -> McMaster.Extensions.CommandLineUtils.CommandOption!
StrawberryShake.Tools.OAuth.AuthArguments.NoScheme.get -> McMaster.Extensions.CommandLineUtils.CommandOption!
StrawberryShake.Tools.OAuth.AuthArguments.RequestTokenAsync(StrawberryShake.Tools.IConsoleOutput! output, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<StrawberryShake.Tools.OAuth.AccessToken?>!
StrawberryShake.Tools.OAuth.AuthArguments.Scheme.get -> McMaster.Extensions.CommandLineUtils.CommandOption!
StrawberryShake.Tools.OAuth.AuthArguments.Scopes.get -> McMaster.Extensions.CommandLineUtils.CommandOption!
StrawberryShake.Tools.OAuth.AuthArguments.Token.get -> McMaster.Extensions.CommandLineUtils.CommandOption!
StrawberryShake.Tools.OAuth.AuthArguments.TokenEndpoint.get -> McMaster.Extensions.CommandLineUtils.CommandOption!
StrawberryShake.Tools.OAuth.CommandLineApplicationExtensions
StrawberryShake.Tools.OAuth.TokenClient
StrawberryShake.Tools.RootHelpTextGenerator
StrawberryShake.Tools.RootHelpTextGenerator.Generate(McMaster.Extensions.CommandLineUtils.CommandLineApplication! application, System.IO.TextWriter! output) -> void
StrawberryShake.Tools.RootHelpTextGenerator.RootHelpTextGenerator() -> void
StrawberryShake.Tools.UpdateCommand
StrawberryShake.Tools.UpdateCommandArguments
StrawberryShake.Tools.UpdateCommandArguments.AuthArguments.get -> StrawberryShake.Tools.OAuth.AuthArguments!
StrawberryShake.Tools.UpdateCommandArguments.Path.get -> McMaster.Extensions.CommandLineUtils.CommandOption!
StrawberryShake.Tools.UpdateCommandArguments.UpdateCommandArguments(McMaster.Extensions.CommandLineUtils.CommandOption! uri, McMaster.Extensions.CommandLineUtils.CommandOption! path, StrawberryShake.Tools.OAuth.AuthArguments! authArguments) -> void
StrawberryShake.Tools.UpdateCommandArguments.Uri.get -> McMaster.Extensions.CommandLineUtils.CommandOption!
StrawberryShake.Tools.UpdateCommandContext
StrawberryShake.Tools.UpdateCommandContext.Path.get -> string?
StrawberryShake.Tools.UpdateCommandContext.Scheme.get -> string?
StrawberryShake.Tools.UpdateCommandContext.Token.get -> string?
StrawberryShake.Tools.UpdateCommandContext.UpdateCommandContext(System.Uri? uri, string? path, string? token, string? scheme) -> void
StrawberryShake.Tools.UpdateCommandContext.Uri.get -> System.Uri?
StrawberryShake.Tools.UpdateCommandHandler
StrawberryShake.Tools.UpdateCommandHandler.FileSystem.get -> StrawberryShake.Tools.IFileSystem!
StrawberryShake.Tools.UpdateCommandHandler.HttpClientFactory.get -> StrawberryShake.Tools.IHttpClientFactory!
StrawberryShake.Tools.UpdateCommandHandler.Output.get -> StrawberryShake.Tools.IConsoleOutput!
StrawberryShake.Tools.UpdateCommandHandler.UpdateCommandHandler(StrawberryShake.Tools.IFileSystem! fileSystem, StrawberryShake.Tools.IHttpClientFactory! httpClientFactory, StrawberryShake.Tools.IConsoleOutput! output) -> void
StrawberryShake.Tools.UpdateHelpTextGenerator
StrawberryShake.Tools.UpdateHelpTextGenerator.Generate(McMaster.Extensions.CommandLineUtils.CommandLineApplication! application, System.IO.TextWriter! output) -> void
StrawberryShake.Tools.UpdateHelpTextGenerator.UpdateHelpTextGenerator() -> void
StrawberryShake.Tools.WellKnownDirectories
StrawberryShake.Tools.WellKnownDirectories.WellKnownDirectories() -> void
StrawberryShake.Tools.WellKnownFiles
StrawberryShake.Tools.WellKnownFiles.WellKnownFiles() -> void
